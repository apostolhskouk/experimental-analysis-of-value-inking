[
  {
    "table": "addresses",
    "column": "city"
  },
  {
    "table": "addresses",
    "column": "country"
  },
  {
    "table": "badges",
    "column": "name"
  },
  {
    "table": "bike",
    "column": "material"
  },
  {
    "table": "budget",
    "column": "category"
  },
  {
    "table": "car_makers",
    "column": "fullname"
  },
  {
    "table": "car_names",
    "column": "make"
  },
  {
    "table": "car_names",
    "column": "model"
  },
  {
    "table": "cards",
    "column": "artist"
  },
  {
    "table": "cards",
    "column": "keywords"
  },
  {
    "table": "cards",
    "column": "name"
  },
  {
    "table": "cards",
    "column": "originaltype"
  },
  {
    "table": "cards",
    "column": "promotypes"
  },
  {
    "table": "cards",
    "column": "type"
  },
  {
    "table": "cards",
    "column": "watermark"
  },
  {
    "table": "circuits",
    "column": "location"
  },
  {
    "table": "circuits",
    "column": "name"
  },
  {
    "table": "colour",
    "column": "colour"
  },
  {
    "table": "comments",
    "column": "text"
  },
  {
    "table": "constructors",
    "column": "name"
  },
  {
    "table": "constructors",
    "column": "nationality"
  },
  {
    "table": "continents",
    "column": "continent"
  },
  {
    "table": "countries",
    "column": "countryname"
  },
  {
    "table": "countrylanguage",
    "column": "language"
  },
  {
    "table": "district",
    "column": "a3"
  },
  {
    "table": "document_objects",
    "column": "description"
  },
  {
    "table": "documents",
    "column": "document_name"
  },
  {
    "table": "drivers",
    "column": "forename"
  },
  {
    "table": "drivers",
    "column": "nationality"
  },
  {
    "table": "drivers",
    "column": "surname"
  },
  {
    "table": "event",
    "column": "event_name"
  },
  {
    "table": "event",
    "column": "location"
  },
  {
    "table": "event",
    "column": "type"
  },
  {
    "table": "examination",
    "column": "diagnosis"
  },
  {
    "table": "examination",
    "column": "symptoms"
  },
  {
    "table": "exams",
    "column": "subject_code"
  },
  {
    "table": "expense",
    "column": "expense_description"
  },
  {
    "table": "features",
    "column": "feature_name"
  },
  {
    "table": "foreign_data",
    "column": "language"
  },
  {
    "table": "foreign_data",
    "column": "name"
  },
  {
    "table": "frpm",
    "column": "charter funding type"
  },
  {
    "table": "frpm",
    "column": "educational option type"
  },
  {
    "table": "frpm",
    "column": "high grade"
  },
  {
    "table": "frpm",
    "column": "low grade"
  },
  {
    "table": "income",
    "column": "source"
  },
  {
    "table": "major",
    "column": "department"
  },
  {
    "table": "major",
    "column": "major_name"
  },
  {
    "table": "matches",
    "column": "tourney_name"
  },
  {
    "table": "matches",
    "column": "winner_hand"
  },
  {
    "table": "patient",
    "column": "diagnosis"
  },
  {
    "table": "player",
    "column": "player_name"
  },
  {
    "table": "player_attributes",
    "column": "preferred_foot"
  },
  {
    "table": "players",
    "column": "country_code"
  },
  {
    "table": "posthistory",
    "column": "text"
  },
  {
    "table": "posthistory",
    "column": "userdisplayname"
  },
  {
    "table": "posts",
    "column": "title"
  },
  {
    "table": "program",
    "column": "title"
  },
  {
    "table": "satscores",
    "column": "cname"
  },
  {
    "table": "schools",
    "column": "admfname1"
  },
  {
    "table": "schools",
    "column": "admlname1"
  },
  {
    "table": "schools",
    "column": "city"
  },
  {
    "table": "schools",
    "column": "county"
  },
  {
    "table": "schools",
    "column": "district"
  },
  {
    "table": "schools",
    "column": "doctype"
  },
  {
    "table": "schools",
    "column": "fundingtype"
  },
  {
    "table": "schools",
    "column": "mailcity"
  },
  {
    "table": "set_translations",
    "column": "language"
  },
  {
    "table": "sets",
    "column": "block"
  },
  {
    "table": "sets",
    "column": "mcmname"
  },
  {
    "table": "sets",
    "column": "name"
  },
  {
    "table": "ship",
    "column": "disposition_of_ship"
  },
  {
    "table": "ship",
    "column": "location"
  },
  {
    "table": "songs",
    "column": "english_translation"
  },
  {
    "table": "status",
    "column": "status"
  },
  {
    "table": "superhero",
    "column": "full_name"
  },
  {
    "table": "superhero",
    "column": "superhero_name"
  },
  {
    "table": "superpower",
    "column": "power_name"
  },
  {
    "table": "team",
    "column": "team_long_name"
  },
  {
    "table": "team_attributes",
    "column": "buildupplaydribblingclass"
  },
  {
    "table": "users",
    "column": "displayname"
  },
  {
    "table": "users",
    "column": "location"
  },
  {
    "table": "users",
    "column": "user_category_code"
  },
  {
    "table": "zip_code",
    "column": "city"
  },
  {
    "table": "zip_code",
    "column": "county"
  },
  {
    "table": "addresses",
    "column": "city"
  },
  {
    "table": "addresses",
    "column": "country"
  },
  {
    "table": "badges",
    "column": "name"
  },
  {
    "table": "bike",
    "column": "material"
  },
  {
    "table": "budget",
    "column": "category"
  },
  {
    "table": "car_makers",
    "column": "fullname"
  },
  {
    "table": "car_names",
    "column": "make"
  },
  {
    "table": "car_names",
    "column": "model"
  },
  {
    "table": "cards",
    "column": "artist"
  },
  {
    "table": "cards",
    "column": "keywords"
  },
  {
    "table": "cards",
    "column": "name"
  },
  {
    "table": "cards",
    "column": "originaltype"
  },
  {
    "table": "cards",
    "column": "promotypes"
  },
  {
    "table": "cards",
    "column": "type"
  },
  {
    "table": "cards",
    "column": "watermark"
  },
  {
    "table": "circuits",
    "column": "location"
  },
  {
    "table": "circuits",
    "column": "name"
  },
  {
    "table": "colour",
    "column": "colour"
  },
  {
    "table": "comments",
    "column": "text"
  },
  {
    "table": "constructors",
    "column": "name"
  },
  {
    "table": "constructors",
    "column": "nationality"
  },
  {
    "table": "continents",
    "column": "continent"
  },
  {
    "table": "countries",
    "column": "countryname"
  },
  {
    "table": "countrylanguage",
    "column": "language"
  },
  {
    "table": "district",
    "column": "a3"
  },
  {
    "table": "document_objects",
    "column": "description"
  },
  {
    "table": "documents",
    "column": "document_name"
  },
  {
    "table": "drivers",
    "column": "forename"
  },
  {
    "table": "drivers",
    "column": "nationality"
  },
  {
    "table": "drivers",
    "column": "surname"
  },
  {
    "table": "event",
    "column": "event_name"
  },
  {
    "table": "event",
    "column": "location"
  },
  {
    "table": "event",
    "column": "type"
  },
  {
    "table": "examination",
    "column": "diagnosis"
  },
  {
    "table": "examination",
    "column": "symptoms"
  },
  {
    "table": "exams",
    "column": "subject_code"
  },
  {
    "table": "expense",
    "column": "expense_description"
  },
  {
    "table": "features",
    "column": "feature_name"
  },
  {
    "table": "foreign_data",
    "column": "language"
  },
  {
    "table": "foreign_data",
    "column": "name"
  },
  {
    "table": "frpm",
    "column": "charter funding type"
  },
  {
    "table": "frpm",
    "column": "educational option type"
  },
  {
    "table": "frpm",
    "column": "high grade"
  },
  {
    "table": "frpm",
    "column": "low grade"
  },
  {
    "table": "income",
    "column": "source"
  },
  {
    "table": "major",
    "column": "department"
  },
  {
    "table": "major",
    "column": "major_name"
  },
  {
    "table": "matches",
    "column": "tourney_name"
  },
  {
    "table": "matches",
    "column": "winner_hand"
  },
  {
    "table": "patient",
    "column": "diagnosis"
  },
  {
    "table": "player",
    "column": "player_name"
  },
  {
    "table": "player_attributes",
    "column": "preferred_foot"
  },
  {
    "table": "players",
    "column": "country_code"
  },
  {
    "table": "posthistory",
    "column": "text"
  },
  {
    "table": "posthistory",
    "column": "userdisplayname"
  },
  {
    "table": "posts",
    "column": "title"
  },
  {
    "table": "program",
    "column": "title"
  },
  {
    "table": "satscores",
    "column": "cname"
  },
  {
    "table": "schools",
    "column": "admfname1"
  },
  {
    "table": "schools",
    "column": "admlname1"
  },
  {
    "table": "schools",
    "column": "city"
  },
  {
    "table": "schools",
    "column": "county"
  },
  {
    "table": "schools",
    "column": "district"
  },
  {
    "table": "schools",
    "column": "doctype"
  },
  {
    "table": "schools",
    "column": "fundingtype"
  },
  {
    "table": "schools",
    "column": "mailcity"
  },
  {
    "table": "set_translations",
    "column": "language"
  },
  {
    "table": "sets",
    "column": "block"
  },
  {
    "table": "sets",
    "column": "mcmname"
  },
  {
    "table": "sets",
    "column": "name"
  },
  {
    "table": "ship",
    "column": "disposition_of_ship"
  },
  {
    "table": "ship",
    "column": "location"
  },
  {
    "table": "songs",
    "column": "english_translation"
  },
  {
    "table": "status",
    "column": "status"
  },
  {
    "table": "superhero",
    "column": "full_name"
  },
  {
    "table": "superhero",
    "column": "superhero_name"
  },
  {
    "table": "superpower",
    "column": "power_name"
  },
  {
    "table": "team",
    "column": "team_long_name"
  },
  {
    "table": "team_attributes",
    "column": "buildupplaydribblingclass"
  },
  {
    "table": "users",
    "column": "displayname"
  },
  {
    "table": "users",
    "column": "location"
  },
  {
    "table": "users",
    "column": "user_category_code"
  },
  {
    "table": "zip_code",
    "column": "city"
  },
  {
    "table": "zip_code",
    "column": "county"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "B Student",
    "paraphrasing": "B. Student"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "george s",
    "paraphrasing": "george s."
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "fred basset",
    "paraphrasing": "fred. basset"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "A Toll",
    "paraphrasing": "A. Toll"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "Martin A",
    "paraphrasing": "A. Martin"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Nice Answer",
    "paraphrasing": "Good Answer"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Nice Question",
    "paraphrasing": "Good question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Good Answer",
    "paraphrasing": "A good answer"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Citizen Patrol",
    "paraphrasing": "Patrol Citizen"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Popular Question",
    "paraphrasing": "Frequently Asked Question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Good Question",
    "paraphrasing": "Well-asked question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Tag Editor",
    "paraphrasing": "Editor of tags"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Notable Question",
    "paraphrasing": "Question notable"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Favorite Question",
    "paraphrasing": "Most popular question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Copy Editor",
    "paraphrasing": "Editor of Copies"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Famous Question",
    "paraphrasing": "Well-known Question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Research Assistant",
    "paraphrasing": "Assistant Researcher"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Great Answer",
    "paraphrasing": "Excellent Answer"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Stellar Question",
    "paraphrasing": "Excellent Question"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Great Question",
    "paraphrasing": "Good question"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "nationality",
    "original_value": "Argentine",
    "paraphrasing": "From Argentina"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "nationality",
    "original_value": "Belgian",
    "paraphrasing": "From Belgium"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "nationality",
    "original_value": "Monegasque",
    "paraphrasing": "From Monaco"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "nationality",
    "original_value": "Liechtensteiner",
    "paraphrasing": "From Liechtenstein"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "nationality",
    "original_value": "East German",
    "paraphrasing": "German, East"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "surname",
    "original_value": "Pablo Montoya",
    "paraphrasing": "Montoya, Pablo"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "surname",
    "original_value": "Scott Brown",
    "paraphrasing": "Brown, Scott"
  },
  {
    "database_id": "california_schools",
    "table": "satscores",
    "column": "cname",
    "original_value": "Contra Costa",
    "paraphrasing": "Contra Costa County"
  },
  {
    "database_id": "wta_1",
    "table": "matches",
    "column": "winner_hand",
    "original_value": "R",
    "paraphrasing": "Right"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Assassin royal",
    "paraphrasing": "Royal assassin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Pillage cruel",
    "paraphrasing": "Cruel pillage"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Guide gobelin",
    "paraphrasing": "Guide goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Dragon insatiable",
    "paraphrasing": "Insatiable Dragon"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Carapace clone",
    "paraphrasing": "Carapace copy"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Porte mystique",
    "paraphrasing": "Mystic gate"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ch\u00e2teau fort",
    "paraphrasing": "Fortress castle"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Chevalier blanc",
    "paraphrasing": "White knight"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lien animal",
    "paraphrasing": "Animal lien"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mutation instable",
    "paraphrasing": "Unstable mutation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ogre gris",
    "paraphrasing": "Grey Ogre"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Caballero negro",
    "paraphrasing": "Black Knight"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Transformation divine",
    "paraphrasing": "Divine transformation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Nim grotesque",
    "paraphrasing": "Nim, grotesque"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Canon gobelin",
    "paraphrasing": "Canon of the Goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Heros gobelin",
    "paraphrasing": "Heroes goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Aurora celestial",
    "paraphrasing": "Celestial Aurora"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Coup fatal",
    "paraphrasing": "Fatal blow"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Solo Familiar",
    "paraphrasing": "Familiar Solo"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Cadet impatient",
    "paraphrasing": "Impatient cadet"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Caballero andante",
    "paraphrasing": "Riding Knight"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Chevalier errant",
    "paraphrasing": "Wandering Knight"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Image fugitive",
    "paraphrasing": "Fugitive image"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Draco vigilante",
    "paraphrasing": "Draco, the vigilante"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Raid nocturne",
    "paraphrasing": "Nocturne raid"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Chariot gobelin",
    "paraphrasing": "Chariot goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Loup solitaire",
    "paraphrasing": "Loup's Solitaire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Noble cause",
    "paraphrasing": "A noble cause"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Terrain fertile",
    "paraphrasing": "Fertile terrain"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Portal Planar",
    "paraphrasing": "Planar Portal"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Brigand gobelin",
    "paraphrasing": "Brigand goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Final cruel",
    "paraphrasing": "Cruel final"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Obscures suggestions",
    "paraphrasing": "Hides recommendations"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Salto formidable",
    "paraphrasing": "Formidable Salto"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Caracal royal",
    "paraphrasing": "Royal Caracal"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Impact violent",
    "paraphrasing": "Violent impact"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Draco enigma",
    "paraphrasing": "Draco's enigma"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ultimatum luminescent",
    "paraphrasing": "Luminescent Ultimatum"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ultimatum cruel",
    "paraphrasing": "Cruel Ultimatum"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ultimatum violent",
    "paraphrasing": "Violent Ultimatum"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Alliance improbable",
    "paraphrasing": "Improbable alliance"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Pigeons voyageurs",
    "paraphrasing": "Traveling pigeons"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Furor animal",
    "paraphrasing": "Animal furor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Aether Mutation",
    "paraphrasing": "Mutation of Aether"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ultima resistencia",
    "paraphrasing": "Last resistance"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Serpent mystique",
    "paraphrasing": "Serpent's mystique"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Domaine luxuriant",
    "paraphrasing": "Luxuriant Domain"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Revenant solitaire",
    "paraphrasing": "Revenant solo"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Justice vigilante",
    "paraphrasing": "Vigilante Justice"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Final natural",
    "paraphrasing": "Final natural hand"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Loup vagabond",
    "paraphrasing": "Wandering Wolf"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Brilliant Plan",
    "paraphrasing": "A brilliant plan"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Strategic Planning",
    "paraphrasing": "Planning strategy"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Cruzado celestial",
    "paraphrasing": "Celestial Cruzado"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Pure conviction",
    "paraphrasing": "Complete certainty"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Sage primordial",
    "paraphrasing": "Primordial Sage"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mercado negro",
    "paraphrasing": "Black market"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mercado alto",
    "paraphrasing": "High market"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Artisans faeries",
    "paraphrasing": "Artisans and faeries"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Bouleversement grave",
    "paraphrasing": "Serious upheaval"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Conscription abominable",
    "paraphrasing": "Abominable conscription"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Palais opulent",
    "paraphrasing": "Opulent Palace"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Plans secrets",
    "paraphrasing": "Strategies for winning"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Impostor cruel",
    "paraphrasing": "Cruel impostor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Transactions nocturnes",
    "paraphrasing": "Nightly transactions"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ogre abominable",
    "paraphrasing": "Abominable Ogre"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Impostor brutal",
    "paraphrasing": "Brutal impostor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Impostor Brutal",
    "paraphrasing": "Brutal Impostor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Trouble intense",
    "paraphrasing": "Intense Trouble"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Filo ancestral",
    "paraphrasing": "Filo, ancestral"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Animus Ancestral",
    "paraphrasing": "Animus, Ancestral"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vista superior",
    "paraphrasing": "Superior view"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Charge suicide",
    "paraphrasing": "Attempt to charge and fail"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Guide griffon",
    "paraphrasing": "Griffon guide"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Halo ocular",
    "paraphrasing": "Halo, ocular"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Imagination fertile",
    "paraphrasing": "A fertile imagination"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Archive mobile",
    "paraphrasing": "Mobile archive"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Barrage gobelin",
    "paraphrasing": "Barrage goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lotus dor\u00e9",
    "paraphrasing": "Golden Lotus"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Bolas Leonid",
    "paraphrasing": "Leonid Bolas"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Voyage intense",
    "paraphrasing": "Intense voyage"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Roc territorial",
    "paraphrasing": "Roc territory"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Roca Territorial",
    "paraphrasing": "Roca's Territorial"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Caballero venerable",
    "paraphrasing": "Venerable Caballero"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Dispute mystique",
    "paraphrasing": "Dispute, mystique"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Tout minuscule",
    "paraphrasing": "Very small indeed"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Champion fervent",
    "paraphrasing": "Fervent Champion"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Luz interior",
    "paraphrasing": "Inner light"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Double tranche",
    "paraphrasing": "Double-tranche"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Duo macabre",
    "paraphrasing": "Macabre duo"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Obscure transaction",
    "paraphrasing": "Transaction is obscure"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ogre provocateur",
    "paraphrasing": "Ogre, provocateur"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Venin stagnant",
    "paraphrasing": "Stagnant Venin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Salve obscure",
    "paraphrasing": "Salve, obscure"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Idea radical",
    "paraphrasing": "Radical Idea"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Banneret gobelin",
    "paraphrasing": "Banneret goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Refugio verde",
    "paraphrasing": "Refugio, verde"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Loup ardent",
    "paraphrasing": "Passionate wolf"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Coup fulgurant",
    "paraphrasing": "Sudden Coup"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Furor guerrero",
    "paraphrasing": "Fierce warrior"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mutant gobelin",
    "paraphrasing": "Mutant goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Guerra total",
    "paraphrasing": "Total war"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Guerra Total",
    "paraphrasing": "Total War"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Sima glacial",
    "paraphrasing": "Sima, glacial"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lien indestructible",
    "paraphrasing": "Indestructible lien"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Aide improbable",
    "paraphrasing": "Improbable aid"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Restriction collective",
    "paraphrasing": "Collective restriction"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Supervisor Angelical",
    "paraphrasing": "Angelical Supervisor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Bruits nocturnes",
    "paraphrasing": "Night noises"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Explosive Sabotage",
    "paraphrasing": "Sabotage, Explosive"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Assassin gobelin",
    "paraphrasing": "Assassin goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Passage prot\u00e9g\u00e9",
    "paraphrasing": "Passage's prot\u00e9g\u00e9"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Conscience collective",
    "paraphrasing": "Collective conscience"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Control mental",
    "paraphrasing": "Mental control"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Goliath zombie",
    "paraphrasing": "Zombie Goliath"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Fortaleza glacial",
    "paraphrasing": "Glacial Fortaleza"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Fortaleza Glacial",
    "paraphrasing": "Glacial Fortaleza"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Escudo Triangular",
    "paraphrasing": "Triangular Shield"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Fulgor celestial",
    "paraphrasing": "Celestial Fulgor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mort tenace",
    "paraphrasing": "Tenacious Mort"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Impostor mercurial",
    "paraphrasing": "Mercurial impostor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Chevalier novice",
    "paraphrasing": "Novice Chevalier"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Forge mystique",
    "paraphrasing": "Mystique forge"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Cabot turbulent",
    "paraphrasing": "Turbulent Cabot"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vampire cordial",
    "paraphrasing": "Cordial vampire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Champion gobelin",
    "paraphrasing": "Champion goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Marin instable",
    "paraphrasing": "Unstable Marin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Martyr vigilant",
    "paraphrasing": "Vigilant Martyr"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Revenant rampant",
    "paraphrasing": "Rampant revenant"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Cause commune",
    "paraphrasing": "Common cause"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Focus spirituel",
    "paraphrasing": "Spiritual Focus"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Esprit extravagant",
    "paraphrasing": "Extravagant Esprit"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Alta mar",
    "paraphrasing": "High sea"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Masque ancestral",
    "paraphrasing": "Ancestral Masque"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Hangar souterrain",
    "paraphrasing": "Underground hangar"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Favor Angelical",
    "paraphrasing": "Angelical Favor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Resistencia noble",
    "paraphrasing": "Noble Resistance"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Noble attitude",
    "paraphrasing": "Attitude of nobility"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Draco viral",
    "paraphrasing": "Draco virus"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Implant parasite",
    "paraphrasing": "Parasitic implant"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Chasseur tenace",
    "paraphrasing": "Tenacious Hunter"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Illusion pulsatile",
    "paraphrasing": "Pulsatile illusion"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vampire repentant",
    "paraphrasing": "Repentant vampire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lumi\u00e8re corrosive",
    "paraphrasing": "Corrosive Lumi\u00e8re"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Stimulus primordial",
    "paraphrasing": "Primordial stimulus"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Arena astral",
    "paraphrasing": "Astral Arena"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mains curatives",
    "paraphrasing": "Curative mains"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Bonne affaire",
    "paraphrasing": "Good deal"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Annulation",
    "paraphrasing": "Cancellation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lion scintillant",
    "paraphrasing": "Shining Lion"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lynx scintillant",
    "paraphrasing": "Shining Lynx"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Nature double",
    "paraphrasing": "Double nature"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Force brute",
    "paraphrasing": "Brute force"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vampire arrogant",
    "paraphrasing": "Arrogant vampire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Tutor personal",
    "paraphrasing": "Personal tutor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Kirin celestial",
    "paraphrasing": "Celestial Kirin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "False Defeat",
    "paraphrasing": "Defeat, False"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Flanking Troops",
    "paraphrasing": "Troops flanking"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Loyal Retainers",
    "paraphrasing": "Retainers who are loyal"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Volunteer Militia",
    "paraphrasing": "Militia, Volunteer"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Broken Dam",
    "paraphrasing": "Dam, Broken"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Wu Admiral",
    "paraphrasing": "Wu, Admiral"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Wu Warship",
    "paraphrasing": "Wu's Warship"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Cunning Advisor",
    "paraphrasing": "Advisor, Cunning"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ghostly Visit",
    "paraphrasing": "A Ghostly Visit"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Overwhelming Forces",
    "paraphrasing": "Forces, Overwhelming"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Stolen Grain",
    "paraphrasing": "Grain was stolen"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Wei Infantry",
    "paraphrasing": "Infantry of Wei"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Rat",
    "paraphrasing": "Zodiac's Rat"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Snake",
    "paraphrasing": "Zodiac's Snake"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Barbarian Horde",
    "paraphrasing": "Horde of Barbarians"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Independent Troops",
    "paraphrasing": "Troops, Independent"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ravaging Horde",
    "paraphrasing": "The Ravaging Horde"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Renegade Troops",
    "paraphrasing": "Troops, Renegade"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Rolling Earthquake",
    "paraphrasing": "Earthquake Rolling"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Dragon",
    "paraphrasing": "Dragon Zodiac"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Goat",
    "paraphrasing": "Zodiac, Goat"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Heavy Fog",
    "paraphrasing": "Dense Mist"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Taunting Challenge",
    "paraphrasing": "Challenge to taunt"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Three Visits",
    "paraphrasing": "Three times visited"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Trip Wire",
    "paraphrasing": "Tripwire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Horse",
    "paraphrasing": "Zodiac's Horse"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Ox",
    "paraphrasing": "Zodiac's Ox"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Rabbit",
    "paraphrasing": "Zodiac's Rabbit"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Rooster",
    "paraphrasing": "Zodiac's Rooster"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Zodiac Tiger",
    "paraphrasing": "Zodiac, Tiger"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Familiar draco",
    "paraphrasing": "draco familiar"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Justice perverse",
    "paraphrasing": "Perverse Justice"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Pied marin",
    "paraphrasing": "Marine pie"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Revenant vampire",
    "paraphrasing": "Vampire revenant"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Raptor implacable",
    "paraphrasing": "Implacable Raptor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Combat titanesque",
    "paraphrasing": "Titanesque combat"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Presa irresistible",
    "paraphrasing": "Irresistible Presa"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Brazos extra",
    "paraphrasing": "Brazos, extra"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Raid impromptu",
    "paraphrasing": "Impromptu raid"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Gendarme inflexible",
    "paraphrasing": "Inflexible Gendarme"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "En coulisse",
    "paraphrasing": "Behind the scenes"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mutation grotesque",
    "paraphrasing": "Mutation, grotesque"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Noble vampire",
    "paraphrasing": "Vampire noble"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Kirin Celestial",
    "paraphrasing": "Kirin, Celestial"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Kirin infernal",
    "paraphrasing": "Kirin, infernal"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Golem Precursor",
    "paraphrasing": "Golem, Precursor"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Final inevitable",
    "paraphrasing": "Final, inevitable"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Fulgor Final",
    "paraphrasing": "Fulgor's Final"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Protector angelical",
    "paraphrasing": "Angelical protector"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Faux souvenirs",
    "paraphrasing": "False memories"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Passage honorable",
    "paraphrasing": "Honorable passage"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Berserker Gobelin",
    "paraphrasing": "Berserker Goblin"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Djinn nonchalant",
    "paraphrasing": "Djinn, nonchalant"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Troll albino",
    "paraphrasing": "Albino Troll"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Troll Albino",
    "paraphrasing": "Albino Troll"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Guide spirituel",
    "paraphrasing": "Spiritual guide"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Mission furtive",
    "paraphrasing": "Furtive mission"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Noble benefactor",
    "paraphrasing": "A generous supporter"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Sphinx goliath",
    "paraphrasing": "Goliath Sphinx"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Feu hostile",
    "paraphrasing": "Hostile fire"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Pas instable",
    "paraphrasing": "Not stable"
  },
  {
    "database_id": "cre_Doc_and_collections",
    "table": "document_objects",
    "column": "description",
    "original_value": "Ransom Collection",
    "paraphrasing": "Ransom Collection documents"
  },
  {
    "database_id": "car_1",
    "table": "car_makers",
    "column": "fullname",
    "original_value": "Nissan Motors",
    "paraphrasing": "Nissan Motor"
  },
  {
    "database_id": "car_1",
    "table": "car_makers",
    "column": "fullname",
    "original_value": "Daimler Benz",
    "paraphrasing": "Daimler-Benz"
  },
  {
    "database_id": "real_estate_rentals",
    "table": "users",
    "column": "user_category_code",
    "original_value": "Single Mother",
    "paraphrasing": "Mother, single"
  },
  {
    "database_id": "card_games",
    "table": "set_translations",
    "column": "language",
    "original_value": "Chinese Simplified",
    "paraphrasing": "Simplified Chinese"
  },
  {
    "database_id": "card_games",
    "table": "set_translations",
    "column": "language",
    "original_value": "Chinese Traditional",
    "paraphrasing": "Traditional Chinese"
  },
  {
    "database_id": "formula_1",
    "table": "circuits",
    "column": "location",
    "original_value": "Oporto",
    "paraphrasing": "Porto"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Suffolk County",
    "paraphrasing": "Suffolk County, NY"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hampshire County",
    "paraphrasing": "County of Hampshire"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Worcester County",
    "paraphrasing": "Worcester County, MA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Berkshire County",
    "paraphrasing": "County of Berkshire"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Essex County",
    "paraphrasing": "County of Essex"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Plymouth County",
    "paraphrasing": "County of Plymouth"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Norfolk County",
    "paraphrasing": "County of Norfolk"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bristol County",
    "paraphrasing": "County of Bristol"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Kent County",
    "paraphrasing": "County of Kent"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sullivan County",
    "paraphrasing": "County Sullivan"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "York County",
    "paraphrasing": "County York"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oxford County",
    "paraphrasing": "County of Oxford"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lincoln County",
    "paraphrasing": "County of Lincoln"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Orange County",
    "paraphrasing": "County of Orange"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hartford County",
    "paraphrasing": "Hartford County, CT"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fairfield County",
    "paraphrasing": "County of Fairfield"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Morris County",
    "paraphrasing": "Morris County, NJ"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sussex County",
    "paraphrasing": "Sussex County, NJ"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Monmouth County",
    "paraphrasing": "County of Monmouth"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Salem County",
    "paraphrasing": "County of Salem"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Burlington County",
    "paraphrasing": "County of Burlington"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Nassau County",
    "paraphrasing": "County of Nassau"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Montgomery County",
    "paraphrasing": "County of Montgomery"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fulton County",
    "paraphrasing": "County Fulton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hamilton County",
    "paraphrasing": "County of Hamilton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Delaware County",
    "paraphrasing": "County of Delaware"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Onondaga County",
    "paraphrasing": "Onondaga"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Madison County",
    "paraphrasing": "County of Madison"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oneida County",
    "paraphrasing": "County Oneida"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wayne County",
    "paraphrasing": "County of Wayne"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Erie County",
    "paraphrasing": "County of Erie"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wyoming County",
    "paraphrasing": "County of Wyoming"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Livingston County",
    "paraphrasing": "County Livingston"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ontario County",
    "paraphrasing": "County of Ontario"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Schuyler County",
    "paraphrasing": "Schuyler County, NY"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Butler County",
    "paraphrasing": "County of Butler"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Blair County",
    "paraphrasing": "County Blair"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Huntingdon County",
    "paraphrasing": "Huntingdon County, PA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lebanon County",
    "paraphrasing": "County of Lebanon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dauphin County",
    "paraphrasing": "County of Dauphin"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Northumberland County",
    "paraphrasing": "Northumberland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Schuylkill County",
    "paraphrasing": "Schuylkill County, PA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Northampton County",
    "paraphrasing": "County Northampton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Chester County",
    "paraphrasing": "County Chester"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Manassas City",
    "paraphrasing": "Manassas City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Baltimore City",
    "paraphrasing": "City of Baltimore"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fairfax City",
    "paraphrasing": "Fairfax County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Alexandria city",
    "paraphrasing": "Alexandria city county"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Alexandria City",
    "paraphrasing": "City of Alexandria"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fredericksburg city",
    "paraphrasing": "Fredericksburg city county"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Winchester city",
    "paraphrasing": "Winchester"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Winchester City",
    "paraphrasing": "Winchester City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "James City",
    "paraphrasing": "James City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Charles City",
    "paraphrasing": "Charles City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Richmond city",
    "paraphrasing": "Richmond County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Williamsburg City",
    "paraphrasing": "Williamsburg County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Williamsburg city",
    "paraphrasing": "Williamsburg County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Richmond City",
    "paraphrasing": "Richmond County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Chesapeake City",
    "paraphrasing": "Chesapeake County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Suffolk city",
    "paraphrasing": "Suffolk County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Suffolk City",
    "paraphrasing": "Suffolk County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Norfolk City",
    "paraphrasing": "City of Norfolk"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Norfolk city",
    "paraphrasing": "City of Norfolk"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hampton City",
    "paraphrasing": "Hampton City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Portsmouth city",
    "paraphrasing": "Portsmouth"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Portsmouth City",
    "paraphrasing": "Portsmouth City County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Petersburg city",
    "paraphrasing": "Petersburg city county"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Southampton County",
    "paraphrasing": "Southampton County, VA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Franklin city",
    "paraphrasing": "Franklin County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Charlotte County",
    "paraphrasing": "Charlotte County, VA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Roanoke City",
    "paraphrasing": "Roanoke County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Roanoke city",
    "paraphrasing": "Roanoke County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Salem city",
    "paraphrasing": "Salem County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bristol city",
    "paraphrasing": "Bristol County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bristol City",
    "paraphrasing": "City of Bristol"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lee County",
    "paraphrasing": "County of Lee"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Norton city",
    "paraphrasing": "Norton County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Logan County",
    "paraphrasing": "County of Logan"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ohio County",
    "paraphrasing": "County of Ohio"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Marion County",
    "paraphrasing": "County of Marion"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Rowan County",
    "paraphrasing": "Rowan"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Chatham County",
    "paraphrasing": "Chatham"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Durham County",
    "paraphrasing": "County Durham"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wilson County",
    "paraphrasing": "County Wilson"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Rutherford County",
    "paraphrasing": "County of Rutherford"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Scotland County",
    "paraphrasing": "County of Scotland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Catawba County",
    "paraphrasing": "Catawba"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Buncombe County",
    "paraphrasing": "Buncombe"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Macon County",
    "paraphrasing": "County of Macon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cherokee County",
    "paraphrasing": "County of Cherokee"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lexington County",
    "paraphrasing": "County of Lexington"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Florence County",
    "paraphrasing": "Florence County, SC"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cobb County",
    "paraphrasing": "County of Cobb"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Barrow County",
    "paraphrasing": "County of Barrow"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Johnson County",
    "paraphrasing": "County Johnson"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bibb County",
    "paraphrasing": "Bibb"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lafayette County",
    "paraphrasing": "County of Lafayette"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Leon County",
    "paraphrasing": "County of Leon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hale County",
    "paraphrasing": "County of Hale"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dallas County",
    "paraphrasing": "County of Dallas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Williamson County",
    "paraphrasing": "County of Williamson"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dickson County",
    "paraphrasing": "County Dickson"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Benton County",
    "paraphrasing": "Benton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oldham County",
    "paraphrasing": "County Oldham"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Meade County",
    "paraphrasing": "County Meade"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "McLean County",
    "paraphrasing": "County of McLean"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Licking County",
    "paraphrasing": "County of Licking"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Champaign County",
    "paraphrasing": "Champaign County, IL"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Morrow County",
    "paraphrasing": "County Morrow"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ottawa County",
    "paraphrasing": "County of Ottawa"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Summit County",
    "paraphrasing": "County of Summit"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Portage County",
    "paraphrasing": "County of Portage"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Medina County",
    "paraphrasing": "County of Medina"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Huron County",
    "paraphrasing": "County of Huron"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Miami County",
    "paraphrasing": "County of Miami"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wabash County",
    "paraphrasing": "County Wabash"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dearborn County",
    "paraphrasing": "County of Dearborn"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Tippecanoe County",
    "paraphrasing": "Tippecanoe"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oakland County",
    "paraphrasing": "County of Oakland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Midland County",
    "paraphrasing": "County of Midland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wexford County",
    "paraphrasing": "County Wexford"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Emmet County",
    "paraphrasing": "County Emmet"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Winnebago County",
    "paraphrasing": "County of Winnebago"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Humboldt County",
    "paraphrasing": "Humboldt"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sac County",
    "paraphrasing": "Sacramento County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Davis County",
    "paraphrasing": "County of Davis"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Racine County",
    "paraphrasing": "County of Racine"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dane County",
    "paraphrasing": "County of Dane"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Marathon County",
    "paraphrasing": "County of Marathon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Itasca County",
    "paraphrasing": "County of Itasca"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hughes County",
    "paraphrasing": "Hughes County, OK"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Kane County",
    "paraphrasing": "County Kane"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Kendall County",
    "paraphrasing": "County Kendall"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lane County",
    "paraphrasing": "County of Lane"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Jefferson Parish",
    "paraphrasing": "Jefferson Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Orleans Parish",
    "paraphrasing": "Orleans County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Assumption Parish",
    "paraphrasing": "Assumption Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ascension Parish",
    "paraphrasing": "Ascension Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Washington Parish",
    "paraphrasing": "Washington County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Livingston Parish",
    "paraphrasing": "Livingston Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lafayette Parish",
    "paraphrasing": "Parish of Lafayette"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Vermilion Parish",
    "paraphrasing": "Vermilion County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Iberia Parish",
    "paraphrasing": "Iberia Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Evangeline Parish",
    "paraphrasing": "Evangeline County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Acadia Parish",
    "paraphrasing": "Acadia County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cameron Parish",
    "paraphrasing": "Cameron Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Beauregard Parish",
    "paraphrasing": "Beauregard County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Allen Parish",
    "paraphrasing": "Allen County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Vernon Parish",
    "paraphrasing": "Parish of Vernon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Claiborne Parish",
    "paraphrasing": "Claiborne County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bossier Parish",
    "paraphrasing": "Bossier County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Webster Parish",
    "paraphrasing": "Webster Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sabine Parish",
    "paraphrasing": "Sabine Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ouachita Parish",
    "paraphrasing": "Ouachita County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Franklin Parish",
    "paraphrasing": "Franklin County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Union Parish",
    "paraphrasing": "Union County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Jackson Parish",
    "paraphrasing": "Jackson County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lincoln Parish",
    "paraphrasing": "Lincoln Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Madison Parish",
    "paraphrasing": "Madison County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Grant Parish",
    "paraphrasing": "Grant County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Caldwell Parish",
    "paraphrasing": "Caldwell Parish County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Nevada County",
    "paraphrasing": "County of Nevada"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sebastian County",
    "paraphrasing": "Sebastian County, Arkansas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Denton County",
    "paraphrasing": "County of Denton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Kaufman County",
    "paraphrasing": "County Kaufman"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hunt County",
    "paraphrasing": "Hunt County, Texas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Parker County",
    "paraphrasing": "Parker County, TX"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Brazos County",
    "paraphrasing": "County of Brazos"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Victoria County",
    "paraphrasing": "Victoria County, TX"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Webb County",
    "paraphrasing": "County of Webb"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hidalgo County",
    "paraphrasing": "County of Hidalgo"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hays County",
    "paraphrasing": "County of Hays"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Gillespie County",
    "paraphrasing": "Gillespie County, TX"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Utah County",
    "paraphrasing": "County of Utah"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Riverside County",
    "paraphrasing": "County of Riverside"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fresno County",
    "paraphrasing": "County of Fresno"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Monterey County",
    "paraphrasing": "County of Monterey"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Marin County",
    "paraphrasing": "County of Marin"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mendocino County",
    "paraphrasing": "Mendocino"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Maui County",
    "paraphrasing": "County of Maui"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Josephine County",
    "paraphrasing": "Joseph County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Anchorage Municipality",
    "paraphrasing": "Anchorage County"
  },
  {
    "database_id": "superhero",
    "table": "colour",
    "column": "colour",
    "original_value": "Strawberry Blond",
    "paraphrasing": "Strawberry blonde"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "promotypes",
    "original_value": "tourney",
    "paraphrasing": "Tournament"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Campbell White",
    "paraphrasing": "White, Campbell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Matthew Gregory",
    "paraphrasing": "Gregory, Matthew"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Grady Frederick",
    "paraphrasing": "Frederick, Grady"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Allen Douglas",
    "paraphrasing": "Douglas, Allen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A Lion",
    "paraphrasing": "Lion"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dr G",
    "paraphrasing": "G, Dr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Lawrence",
    "paraphrasing": "Lawrence, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Smith",
    "paraphrasing": "Smith, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Rex M",
    "paraphrasing": "Rex M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew V",
    "paraphrasing": "Andrew V."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eric Wilson",
    "paraphrasing": "Wilson, Eric"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Julius A",
    "paraphrasing": "Julius A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David B",
    "paraphrasing": "David B."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark L",
    "paraphrasing": "L, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David James",
    "paraphrasing": "James, David"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Cosmic Flame",
    "paraphrasing": "CosmicFlame"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert Karl",
    "paraphrasing": "Karl, Robert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Neil G",
    "paraphrasing": "Neil G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Charlie Martin",
    "paraphrasing": "Martin, Charlie"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy W",
    "paraphrasing": "Andy W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sam Saffron",
    "paraphrasing": "Saffron, Sam"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Harold L",
    "paraphrasing": "Harold L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Christopher Parker",
    "paraphrasing": "Parker, Christopher"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jason S",
    "paraphrasing": "Jason S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Vincent Robert",
    "paraphrasing": "Robert, Vincent"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark C",
    "paraphrasing": "Mark C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Irish Buffer",
    "paraphrasing": "IrishBuffer"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joel B",
    "paraphrasing": "Joel B."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "G Garcia",
    "paraphrasing": "Garcia, G"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The Eremite",
    "paraphrasing": "Eremite"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "M Adams",
    "paraphrasing": "M. Adams"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James Howard",
    "paraphrasing": "Howard, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Unknown Me",
    "paraphrasing": "Me, unknown"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steven Noble",
    "paraphrasing": "Noble, Steven"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter Alexander",
    "paraphrasing": "Alexander, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Thomas K",
    "paraphrasing": "K Thomas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "nate c",
    "paraphrasing": "nate.c"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert Harvey",
    "paraphrasing": "Harvey, Robert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mu Mind",
    "paraphrasing": "MuMind"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Colin K",
    "paraphrasing": "Colin K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul D",
    "paraphrasing": "D. Paul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert Smith",
    "paraphrasing": "Smith, Robert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Richard A",
    "paraphrasing": "A. Richard"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Rich C",
    "paraphrasing": "Rich C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Robertson",
    "paraphrasing": "Robertson, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "user unknown",
    "paraphrasing": "Unknown user"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kent Fredric",
    "paraphrasing": "Fredric, Kent"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "david w",
    "paraphrasing": "david w."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Neil Toronto",
    "paraphrasing": "Neil from Toronto"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Frank Barry",
    "paraphrasing": "Barry, Frank"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "dole doug",
    "paraphrasing": "Doug Dole"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike T",
    "paraphrasing": "Mike Thompson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Gregg L",
    "paraphrasing": "L Gregg"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bob P",
    "paraphrasing": "Bob P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark B",
    "paraphrasing": "B, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matt Blackwell",
    "paraphrasing": "Blackwell, Matt"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A Lee",
    "paraphrasing": "Lee, A"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Thursdays Coming",
    "paraphrasing": "Thursdays are coming"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Martin H",
    "paraphrasing": "H. Martin"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "May Ann",
    "paraphrasing": "Ann May"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tom H",
    "paraphrasing": "Tom H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tony R",
    "paraphrasing": "Tony R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul L",
    "paraphrasing": "Paul L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "machine yearning",
    "paraphrasing": "machine-yearning"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eric Anderson",
    "paraphrasing": "Anderson, Eric"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Williamson",
    "paraphrasing": "Williamson, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Financial Economist",
    "paraphrasing": "Economist specializing in finance"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Craig T",
    "paraphrasing": "T Craig"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Anderson",
    "paraphrasing": "Anderson, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "gurney alex",
    "paraphrasing": "Alex Gurney"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jeff Wu",
    "paraphrasing": "Wu, Jeff"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jason Davies",
    "paraphrasing": "Davies, Jason"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Felix S",
    "paraphrasing": "Felix S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Victor P",
    "paraphrasing": "P. Victor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Short Elizabeth",
    "paraphrasing": "Elizabeth Short"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Glenn",
    "paraphrasing": "Glenn, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "B Seven",
    "paraphrasing": "B. Seven"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James T",
    "paraphrasing": "T James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter Taylor",
    "paraphrasing": "Taylor, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Grey bear",
    "paraphrasing": "Greybear"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Server Horror",
    "paraphrasing": "Horror Server"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Marco K",
    "paraphrasing": "K, Marco"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ross T",
    "paraphrasing": "T Ross"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "james li",
    "paraphrasing": "Li, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter M",
    "paraphrasing": "Peter M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Scott Ray",
    "paraphrasing": "Ray, Scott"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jim V",
    "paraphrasing": "Jim V."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Larry C",
    "paraphrasing": "Larry C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ian Stuart",
    "paraphrasing": "Stuart, Ian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A Bose",
    "paraphrasing": "A. Bose"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steve P",
    "paraphrasing": "Steve P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "S Huntsman",
    "paraphrasing": "S. Huntsman"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joe P",
    "paraphrasing": "Joe P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John S",
    "paraphrasing": "John S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Victor L",
    "paraphrasing": "L, Victor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephen L",
    "paraphrasing": "Stephen L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy J",
    "paraphrasing": "Andy J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David Z",
    "paraphrasing": "David Z."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Arthur P",
    "paraphrasing": "Arthur P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jack Schmidt",
    "paraphrasing": "Schmidt, Jack"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Seeking Knowledge",
    "paraphrasing": "Looking for Knowledge"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Optimized Life",
    "paraphrasing": "Life Optimized"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Thomas B",
    "paraphrasing": "B, Thomas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter Ellis",
    "paraphrasing": "Ellis, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Frank WANG",
    "paraphrasing": "Wang, Frank"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Mark",
    "paraphrasing": "Mark John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Dark",
    "paraphrasing": "Dark, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "JAY G",
    "paraphrasing": "Jay G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "chainsaw riot",
    "paraphrasing": "chainsaw_riot"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matthew Ross",
    "paraphrasing": "Ross, Matthew"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jacob M",
    "paraphrasing": "M Jacob"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "D Jay",
    "paraphrasing": "Jay D"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "mary s",
    "paraphrasing": "mary s."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ingrid S",
    "paraphrasing": "Ingrid S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Big Leonardo",
    "paraphrasing": "Leonardo, Big"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jay D",
    "paraphrasing": "Jay D."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "by Taylor",
    "paraphrasing": "Taylor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Thomas James",
    "paraphrasing": "James, Thomas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark S",
    "paraphrasing": "Mark S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sean M",
    "paraphrasing": "M Sean"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tony James",
    "paraphrasing": "James, Tony"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike G",
    "paraphrasing": "Mike G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tony J",
    "paraphrasing": "Tony J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "M Philips",
    "paraphrasing": "M. Philips"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "sgt pepper",
    "paraphrasing": "sgt. pepper"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Evans",
    "paraphrasing": "Evans, R"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Leon J",
    "paraphrasing": "J Leon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Martin Smith",
    "paraphrasing": "Smith, Martin"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Bartholomew",
    "paraphrasing": "Bartholomew, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Roofing Options",
    "paraphrasing": "Options for roofing"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Martin Leslie",
    "paraphrasing": "Leslie, Martin"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mr Alpha",
    "paraphrasing": "Alpha, Mr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael Smith",
    "paraphrasing": "Smith, Michael"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Victor May",
    "paraphrasing": "May, Victor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "serena Matt",
    "paraphrasing": "serena, Matt"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex Marin",
    "paraphrasing": "Marin, Alex"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John M",
    "paraphrasing": "John M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Subtle Array",
    "paraphrasing": "SubtleArray"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "George Roy",
    "paraphrasing": "Roy, George"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "garbage collection",
    "paraphrasing": "garbagecollection"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "S Sam",
    "paraphrasing": "S. Sam"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul R",
    "paraphrasing": "Paul R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Emil M",
    "paraphrasing": "Emil M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sean L",
    "paraphrasing": "Sean L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Lie Ryan",
    "paraphrasing": "Ryan Lie"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Elena love",
    "paraphrasing": "Elena loves"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Howell",
    "paraphrasing": "R. Howell"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Graham A",
    "paraphrasing": "A Graham"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Full Decent",
    "paraphrasing": "Full and Decent"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alan M",
    "paraphrasing": "Alan M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Fox",
    "paraphrasing": "Fox, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "geek girl",
    "paraphrasing": "girl geek"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben J",
    "paraphrasing": "Ben J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David L",
    "paraphrasing": "David L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "S Bourgeois",
    "paraphrasing": "S. Bourgeois"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike S",
    "paraphrasing": "Mike S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "World Engineer",
    "paraphrasing": "Engineer from around the world"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Rich",
    "paraphrasing": "Rich, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Quantitative Historian",
    "paraphrasing": "Historian specializing in quantitative methods"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Oliver G",
    "paraphrasing": "G, Oliver"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Blake Riley",
    "paraphrasing": "Riley, Blake"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Neil Good",
    "paraphrasing": "Good, Neil"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brennan Smith",
    "paraphrasing": "Smith, Brennan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Young",
    "paraphrasing": "Young, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Maria Jesus",
    "paraphrasing": "Jesus, Maria"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The student",
    "paraphrasing": "Student"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex Williams",
    "paraphrasing": "Williams, Alex"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Marco A",
    "paraphrasing": "Marco A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chthonic Project",
    "paraphrasing": "ChthonicProject"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mr E",
    "paraphrasing": "E. Mr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Snow Blind",
    "paraphrasing": "SnowBlind"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sosa Sebastian",
    "paraphrasing": "Sebastian Sosa"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jose Mathew",
    "paraphrasing": "Mathew, Jose"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Erick T",
    "paraphrasing": "T Erick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jason R",
    "paraphrasing": "Jason R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Calm Storm",
    "paraphrasing": "CalmStorm"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paper Boxes",
    "paraphrasing": "Boxes of Paper"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Green Code",
    "paraphrasing": "Code by Green"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Ruiz",
    "paraphrasing": "Ruiz, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael Alexander",
    "paraphrasing": "Alexander, Michael"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jonathan M",
    "paraphrasing": "M. Jonathan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Frank",
    "paraphrasing": "Frank, R"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "V Hughes",
    "paraphrasing": "V. Hughes"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter George",
    "paraphrasing": "George, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matt F",
    "paraphrasing": "Matt F."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Owen J",
    "paraphrasing": "J Owen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Missing Bob",
    "paraphrasing": "Bob is missing"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Experimental Psychologist",
    "paraphrasing": "Psychologist, Experimental"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "DE Harris",
    "paraphrasing": "Harris, DE"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ed Dean",
    "paraphrasing": "Dean, Ed"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The August",
    "paraphrasing": "August"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J Wilson",
    "paraphrasing": "Wilson, J"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stefan S",
    "paraphrasing": "Stefan S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Veterans Benefits",
    "paraphrasing": "Benefits for Veterans"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Patrick Li",
    "paraphrasing": "Li, Patrick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James LI",
    "paraphrasing": "LI James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Richard H",
    "paraphrasing": "Richard H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "You Safe",
    "paraphrasing": "Safe You"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Lisa Ann",
    "paraphrasing": "Ann Lisa"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew K",
    "paraphrasing": "Andrew K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jeremy A",
    "paraphrasing": "Jeremy A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steve W",
    "paraphrasing": "Steve W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Daniel L",
    "paraphrasing": "Daniel L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "j lieberman",
    "paraphrasing": "j. lieberman"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Patterson",
    "paraphrasing": "Patterson, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew J",
    "paraphrasing": "J. Andrew"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Samuel Jack",
    "paraphrasing": "Jack, Samuel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Daniel Ryan",
    "paraphrasing": "Ryan, Daniel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steve V",
    "paraphrasing": "Steve V."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kat Martin",
    "paraphrasing": "Martin, Kat"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "B Evans",
    "paraphrasing": "Evans, B"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Leon P",
    "paraphrasing": "Leon P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sam Mason",
    "paraphrasing": "Mason, Sam"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A B",
    "paraphrasing": "B A"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "B Williams",
    "paraphrasing": "Williams, B"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bob Jordan",
    "paraphrasing": "Jordan, Bob"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jeremy T",
    "paraphrasing": "T, Jeremy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Greg L",
    "paraphrasing": "Greg L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eric C",
    "paraphrasing": "Eric C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andre L",
    "paraphrasing": "Andre L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bell Mans",
    "paraphrasing": "Mans Bell"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dragon Warrior",
    "paraphrasing": "DragonWarrior"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David P",
    "paraphrasing": "David P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter H",
    "paraphrasing": "H, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert L",
    "paraphrasing": "Robert L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul H",
    "paraphrasing": "Paul H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Larry James",
    "paraphrasing": "James, Larry"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Glen T",
    "paraphrasing": "T Glen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sarah G",
    "paraphrasing": "Sarah G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Johnson Chang",
    "paraphrasing": "Chang Johnson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mr Morgan",
    "paraphrasing": "Morgan, Mr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Houston Statisticians",
    "paraphrasing": "Statisticians from Houston"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Erik J",
    "paraphrasing": "Erik J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James Mitch",
    "paraphrasing": "Mitch, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael H",
    "paraphrasing": "Michael H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Scott H",
    "paraphrasing": "Scott H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brian B",
    "paraphrasing": "B Brian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David C",
    "paraphrasing": "David C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Great Kindness",
    "paraphrasing": "Kindness is great"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Concept Delta",
    "paraphrasing": "Delta Concept"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Richard B",
    "paraphrasing": "Richard B."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Charles A",
    "paraphrasing": "Charles A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Forbes",
    "paraphrasing": "Forbes, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Williams",
    "paraphrasing": "Williams, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Scott S",
    "paraphrasing": "Scott S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Luis Armando",
    "paraphrasing": "Armando, Luis"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Anton K",
    "paraphrasing": "K, Anton"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jack Martin",
    "paraphrasing": "Martin, Jack"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "j gallo",
    "paraphrasing": "J. Gallo"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Trevor Alexander",
    "paraphrasing": "Alexander, Trevor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eddy V",
    "paraphrasing": "Eddy V."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Daniel C",
    "paraphrasing": "Daniel C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Z KHAN",
    "paraphrasing": "Z. Khan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tom R",
    "paraphrasing": "Tom R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dan S",
    "paraphrasing": "Dan S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ruminative Rosie",
    "paraphrasing": "Rosie the Ruminative"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Johnathan Franck",
    "paraphrasing": "Jonathan Franck"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dan T",
    "paraphrasing": "Dan T."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick M",
    "paraphrasing": "M. Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael K",
    "paraphrasing": "Michael K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "mar jones",
    "paraphrasing": "mar. jones"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bob John",
    "paraphrasing": "John Bob"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Online Schools",
    "paraphrasing": "Schools Online"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul Manta",
    "paraphrasing": "Manta, Paul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "DB Stats",
    "paraphrasing": "Database Stats"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Arnold Meredith",
    "paraphrasing": "Meredith, Arnold"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nathan G",
    "paraphrasing": "G, Nathan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nguyen Son",
    "paraphrasing": "Son Nguyen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kris C",
    "paraphrasing": "Kris C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike C",
    "paraphrasing": "Mike C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Long Law",
    "paraphrasing": "Law Long"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris A",
    "paraphrasing": "A. Chris"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Scott J",
    "paraphrasing": "J Scott"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Herr Student",
    "paraphrasing": "Student, Herr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jon S",
    "paraphrasing": "Jon S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "JAMES A",
    "paraphrasing": "JAMES A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Noah C",
    "paraphrasing": "Noah C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Max David",
    "paraphrasing": "David, Max"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "jeff m",
    "paraphrasing": "Jeff M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris J",
    "paraphrasing": "Chris J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul M",
    "paraphrasing": "Paul M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Emilio A",
    "paraphrasing": "A Emilio"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark McDonald",
    "paraphrasing": "McDonald, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Norman Sue",
    "paraphrasing": "Sue Norman"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J Mint",
    "paraphrasing": "J. Mint"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Riches",
    "paraphrasing": "Riches, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dale M",
    "paraphrasing": "Dale M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jessica B",
    "paraphrasing": "B, Jessica"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben G",
    "paraphrasing": "Ben G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris Ismael",
    "paraphrasing": "Ismael, Chris"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Phil A",
    "paraphrasing": "Phil A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Higgins",
    "paraphrasing": "Higgins, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Diana E",
    "paraphrasing": "Diana E."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jake Fisher",
    "paraphrasing": "Fisher, Jake"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Justin K",
    "paraphrasing": "K, Justin"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Microbiology girl",
    "paraphrasing": "Girl who studies microbiology"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Adam F",
    "paraphrasing": "Adam F."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Laura B",
    "paraphrasing": "B, Laura"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Liam William",
    "paraphrasing": "William, Liam"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Adam L",
    "paraphrasing": "Adam L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David Fernando",
    "paraphrasing": "Fernando, David"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "kevin c",
    "paraphrasing": "kevin c."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Man Hunter",
    "paraphrasing": "Hunter Man"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Linda H",
    "paraphrasing": "H, Linda"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nelson Areal",
    "paraphrasing": "Areal, Nelson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Marc H",
    "paraphrasing": "Marc H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Bunch",
    "paraphrasing": "Bunch, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Anatole Mike",
    "paraphrasing": "Mike, Anatole"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick T",
    "paraphrasing": "T, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Max C",
    "paraphrasing": "Max C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bailey S",
    "paraphrasing": "S. Bailey"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Skewed Normal",
    "paraphrasing": "Skewed-Normal"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "D Greenwood",
    "paraphrasing": "D. Greenwood"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Victoria Geelong",
    "paraphrasing": "Victoria, Geelong"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The Photon",
    "paraphrasing": "Photon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael Clinton",
    "paraphrasing": "Clinton, Michael"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Daniel Big",
    "paraphrasing": "Big, Daniel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Cancer Researcher",
    "paraphrasing": "Researcher specializing in cancer"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "read Read",
    "paraphrasing": "Read"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Fixed Point",
    "paraphrasing": "Point Fixed"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nathan Arthur",
    "paraphrasing": "Arthur, Nathan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Philip C",
    "paraphrasing": "Philip C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ted C",
    "paraphrasing": "Ted C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J Li",
    "paraphrasing": "Li, J"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chloe T",
    "paraphrasing": "T, Chloe"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephen Jacob",
    "paraphrasing": "Jacob, Stephen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Duane J",
    "paraphrasing": "Duane J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dave Kim",
    "paraphrasing": "Kim, Dave"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy Davies",
    "paraphrasing": "Davies, Andy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James Ryan",
    "paraphrasing": "Ryan, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James Scott",
    "paraphrasing": "Scott, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "new Thrall",
    "paraphrasing": "Thrall (new)"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Learning Bee",
    "paraphrasing": "LearningBee"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "poison Alien",
    "paraphrasing": "Alien, poison"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul Nathan",
    "paraphrasing": "Nathan, Paul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A Brooks",
    "paraphrasing": "Brooks, A"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris Li",
    "paraphrasing": "Li, Chris"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Jumper",
    "paraphrasing": "Jumper, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David F",
    "paraphrasing": "David F."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "King Linux",
    "paraphrasing": "Linux King"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Business stats",
    "paraphrasing": "Stats for business"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Richard D",
    "paraphrasing": "Richard D."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul Albert",
    "paraphrasing": "Albert, Paul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben CW",
    "paraphrasing": "Ben C. W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matt Wolf",
    "paraphrasing": "Wolf, Matt"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jon Ericson",
    "paraphrasing": "Ericson, Jon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joe F",
    "paraphrasing": "Joe F."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ronald Christensen",
    "paraphrasing": "Christensen, Ronald"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy K",
    "paraphrasing": "Andy K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Er Ben",
    "paraphrasing": "Ben Er"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Square",
    "paraphrasing": "R. Square"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David K",
    "paraphrasing": "David K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sara E",
    "paraphrasing": "Sara"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Pat Johnson",
    "paraphrasing": "Johnson, Pat"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Clark",
    "paraphrasing": "Clark, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex S",
    "paraphrasing": "Alex S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Xu Dan",
    "paraphrasing": "Dan Xu"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kevin C",
    "paraphrasing": "Kevin C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Livingstone",
    "paraphrasing": "Livingstone, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Try Hard",
    "paraphrasing": "Tryhard"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bill Simpson",
    "paraphrasing": "Simpson, Bill"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "B Fuchs",
    "paraphrasing": "Fuchs, B"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Learner",
    "paraphrasing": "R. Learner"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Mitchell",
    "paraphrasing": "Mitchell, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bryan P",
    "paraphrasing": "Bryan P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Lindsay Smith",
    "paraphrasing": "Smith, Lindsay"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Numeric Anomaly",
    "paraphrasing": "NumericAnomaly"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Web Developer",
    "paraphrasing": "Developer for the web"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Doctor Dan",
    "paraphrasing": "Dan, Doctor"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sean C",
    "paraphrasing": "Sean C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael Terr",
    "paraphrasing": "Terr, Michael"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben S",
    "paraphrasing": "Ben S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bertrand R",
    "paraphrasing": "Bertrand R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Christian David",
    "paraphrasing": "David, Christian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Fred S",
    "paraphrasing": "Fred S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Martin P",
    "paraphrasing": "Martin P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Max Must",
    "paraphrasing": "Must, Max"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Space monkey",
    "paraphrasing": "SpaceMonkey"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Christian Mark",
    "paraphrasing": "Mark, Christian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Arthur G",
    "paraphrasing": "Arthur G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Gino P",
    "paraphrasing": "Gino P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Calgary Coder",
    "paraphrasing": "CalgaryCoder"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Coffee Bean",
    "paraphrasing": "CoffeeBean"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ana Luisa",
    "paraphrasing": "Luisa, Ana"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mitch Anthony",
    "paraphrasing": "Anthony, Mitch"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David Alisha",
    "paraphrasing": "Alisha David"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Paul",
    "paraphrasing": "Paul, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Luis Gustavo",
    "paraphrasing": "Gustavo, Luis"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "usual me",
    "paraphrasing": "the usual me"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dick J",
    "paraphrasing": "Dick J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Simon W",
    "paraphrasing": "W Simon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Zachary K",
    "paraphrasing": "Zachary K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joanna S",
    "paraphrasing": "Joanna S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "sympathetic guest",
    "paraphrasing": "guest, sympathetic"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Smith Black",
    "paraphrasing": "Black Smith"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brandon S",
    "paraphrasing": "S Brandon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex novice",
    "paraphrasing": "Alex, a novice"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kim J",
    "paraphrasing": "Kim J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mayer Johns",
    "paraphrasing": "Johns, Mayer"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jack Kelly",
    "paraphrasing": "Kelly, Jack"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Acyclic Tau",
    "paraphrasing": "Tau Acyclic"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben John",
    "paraphrasing": "John Ben"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Doug Paul",
    "paraphrasing": "Paul, Doug"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Logan M",
    "paraphrasing": "M. Logan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Davis King",
    "paraphrasing": "King Davis"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris K",
    "paraphrasing": "Chris K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike John",
    "paraphrasing": "John, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matthew C",
    "paraphrasing": "Matthew C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "M Silva",
    "paraphrasing": "M. Silva"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Billie G",
    "paraphrasing": "Billie G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ross Ahmed",
    "paraphrasing": "Ahmed, Ross"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Amy A",
    "paraphrasing": "Amy A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nathan M",
    "paraphrasing": "M. Nathan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Daniel Roy",
    "paraphrasing": "Roy, Daniel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Student T",
    "paraphrasing": "T Student"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "tom shaffer",
    "paraphrasing": "Shaffer, Tom"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ryan You",
    "paraphrasing": "You Ryan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick Martin",
    "paraphrasing": "Martin, Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "King Tim",
    "paraphrasing": "Tim King"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ken Jack",
    "paraphrasing": "Jack, Ken"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Barney Pitt",
    "paraphrasing": "Pitt, Barney"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joshua Issac",
    "paraphrasing": "Issac, Joshua"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy T",
    "paraphrasing": "T, Andy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kim Stacks",
    "paraphrasing": "Stacks, Kim"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Confused student",
    "paraphrasing": "Student who is confused"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Long Vehicle",
    "paraphrasing": "Vehicle, Long"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michel G",
    "paraphrasing": "Michel G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark D",
    "paraphrasing": "D, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Timothy W",
    "paraphrasing": "Timothy W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "White Swan",
    "paraphrasing": "WhiteSwan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sam Felix",
    "paraphrasing": "Felix, Sam"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tobias R",
    "paraphrasing": "Tobias R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Peter Christensen",
    "paraphrasing": "Christensen, Peter"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Blake B",
    "paraphrasing": "B Blake"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steve R",
    "paraphrasing": "Steve R."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Blue Marker",
    "paraphrasing": "BlueMarker"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bootstrap Surrogate",
    "paraphrasing": "Surrogate Bootstrap"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Embedded Assessment",
    "paraphrasing": "Assessment - Embedded"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Darren James",
    "paraphrasing": "James, Darren"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jose G",
    "paraphrasing": "G, Jose"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John David",
    "paraphrasing": "David John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex G",
    "paraphrasing": "Alex G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Seth K",
    "paraphrasing": "Seth K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Guys Math",
    "paraphrasing": "Math Guys"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Matthew Skelton",
    "paraphrasing": "Skelton, Matthew"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Stevenson",
    "paraphrasing": "Stevenson, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mouse Hello",
    "paraphrasing": "Hello Mouse"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James A",
    "paraphrasing": "A. James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "tom m",
    "paraphrasing": "Tom M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sultan Abraham",
    "paraphrasing": "Abraham Sultan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "statistically hopeless",
    "paraphrasing": "hopelessly statistical"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Richardson",
    "paraphrasing": "Richardson, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul G",
    "paraphrasing": "Paul G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Samuel Peter",
    "paraphrasing": "Peter, Samuel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mohamed Shaban",
    "paraphrasing": "Shaban, Mohamed"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bob S",
    "paraphrasing": "Bob S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Keith G",
    "paraphrasing": "Keith G."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tree Frog",
    "paraphrasing": "TreeFrog"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dave M",
    "paraphrasing": "Dave M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tom P",
    "paraphrasing": "Tom P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex P",
    "paraphrasing": "Alex P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J Kelly",
    "paraphrasing": "Kelly, J"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Andrews",
    "paraphrasing": "Andrews, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jim A",
    "paraphrasing": "Jim A."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "decision maker",
    "paraphrasing": "key decision-maker"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kim Prince",
    "paraphrasing": "Prince, Kim"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mooing Duck",
    "paraphrasing": "MooingDuck"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brian S",
    "paraphrasing": "Brian S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Charlie S",
    "paraphrasing": "Charlie S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James L",
    "paraphrasing": "L. James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris C",
    "paraphrasing": "Chris C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Grad student",
    "paraphrasing": "Student, graduate"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "James Mac",
    "paraphrasing": "Mac, James"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "St Vincent",
    "paraphrasing": "St. Vincent"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bob Green",
    "paraphrasing": "Green, Bob"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dan C",
    "paraphrasing": "Dan C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stella J",
    "paraphrasing": "J Stella"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kenneth L",
    "paraphrasing": "Kenneth L."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stats Rocks",
    "paraphrasing": "StatsRocks"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David Mckee",
    "paraphrasing": "Mckee, David"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Old Pro",
    "paraphrasing": "Pro, Old"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Claire G",
    "paraphrasing": "G, Claire"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy Li",
    "paraphrasing": "Li, Andy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Leroy Tyrone",
    "paraphrasing": "Tyrone, Leroy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tyler S",
    "paraphrasing": "Tyler S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Steve S",
    "paraphrasing": "Steve S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris M",
    "paraphrasing": "Chris M."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "MIT Coder",
    "paraphrasing": "MITCoder"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "David W",
    "paraphrasing": "David W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Gerald Edgar",
    "paraphrasing": "Gerald, Edgar"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Josh W",
    "paraphrasing": "Josh W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jason C",
    "paraphrasing": "Jason C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex I",
    "paraphrasing": "Alex I."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephen Thomas",
    "paraphrasing": "Thomas, Stephen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R Hill",
    "paraphrasing": "R. Hill"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jose Luis",
    "paraphrasing": "Luis, Jose"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Max Wen",
    "paraphrasing": "Wen, Max"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dylan I",
    "paraphrasing": "Dylan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jackson Tale",
    "paraphrasing": "Tale Jackson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "confused guy",
    "paraphrasing": "A confused guy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alan K",
    "paraphrasing": "Alan K."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew Min",
    "paraphrasing": "Min, Andrew"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eddie C",
    "paraphrasing": "Eddie C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "William Harmer",
    "paraphrasing": "Harmer, William"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bernard C",
    "paraphrasing": "Bernard C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Douglas Clark",
    "paraphrasing": "Clark, Douglas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brian Z",
    "paraphrasing": "Brian Z."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mike Eng",
    "paraphrasing": "Eng, Mike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "confused student",
    "paraphrasing": "student who is confused"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "P Thompson",
    "paraphrasing": "P. Thompson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jim T",
    "paraphrasing": "Jim T."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tom Ryan",
    "paraphrasing": "Ryan, Tom"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nicolas J",
    "paraphrasing": "J Nicolas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sandy K",
    "paraphrasing": "K Sandy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Walt W",
    "paraphrasing": "Walt W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Angus P",
    "paraphrasing": "Angus P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Student tea",
    "paraphrasing": "Tea student"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Diana Maria",
    "paraphrasing": "Maria Diana"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Frank D",
    "paraphrasing": "D, Frank"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tim H",
    "paraphrasing": "Tim H."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "S Chapman",
    "paraphrasing": "S. Chapman"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andy S",
    "paraphrasing": "Andy S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "S Pike",
    "paraphrasing": "S. Pike"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Josh Marcus",
    "paraphrasing": "Marcus, Josh"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Anthony Tyler",
    "paraphrasing": "Tyler, Anthony"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jose R",
    "paraphrasing": "R Jose"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "horse hair",
    "paraphrasing": "horsehair"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Emmet B",
    "paraphrasing": "B, Emmet"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrei V",
    "paraphrasing": "Andrei V."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Paul B",
    "paraphrasing": "B, Paul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sara Catherine",
    "paraphrasing": "Catherine Sara"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Esteban PS",
    "paraphrasing": "Esteban P S"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robin J",
    "paraphrasing": "J Robin"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Eli S",
    "paraphrasing": "Eli S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris Brent",
    "paraphrasing": "Brent, Chris"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Gaby P",
    "paraphrasing": "Gaby P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ran Nathan",
    "paraphrasing": "Nathan Ran"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brian P",
    "paraphrasing": "Brian P."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tiger peng",
    "paraphrasing": "Peng Tiger"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Carson Paul",
    "paraphrasing": "Paul Carson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Janine W",
    "paraphrasing": "Janine W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "W Kim",
    "paraphrasing": "Kim, W"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "R freak",
    "paraphrasing": "R. freak"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Clive Nicholas",
    "paraphrasing": "Nicholas, Clive"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bert Lee",
    "paraphrasing": "Lee, Bert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Craig Williams",
    "paraphrasing": "Williams, Craig"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "happiness designer",
    "paraphrasing": "designer of happiness"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Tom S",
    "paraphrasing": "Tom S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Michael James",
    "paraphrasing": "James, Michael"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Vincent Wen",
    "paraphrasing": "Wen, Vincent"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Master Funky",
    "paraphrasing": "Funky Master"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "kyle k",
    "paraphrasing": "kyle kyle"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Coding Mash",
    "paraphrasing": "CodingMash"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ben Ernest",
    "paraphrasing": "Ernest, Ben"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "prosody context",
    "paraphrasing": "prosody's context"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew M",
    "paraphrasing": "M. Andrew"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "D midas",
    "paraphrasing": "D. midas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Antony C",
    "paraphrasing": "C, Antony"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stack Tracer",
    "paraphrasing": "StackTracer"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Joe W",
    "paraphrasing": "Joe W."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "russ port",
    "paraphrasing": "russport"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jack Lei",
    "paraphrasing": "Lei, Jack"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex Johnson",
    "paraphrasing": "Johnson, Alex"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nick J",
    "paraphrasing": "J Nick"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Manuel Q",
    "paraphrasing": "Manuel Q."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Dr Dave",
    "paraphrasing": "Dave, Dr"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "j riot",
    "paraphrasing": "j. riot"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Glenn W",
    "paraphrasing": "W. Glenn"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "A Ram",
    "paraphrasing": "Ram A"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J SAND",
    "paraphrasing": "J. Sand"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sophia J",
    "paraphrasing": "J Sophia"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ryan S",
    "paraphrasing": "Ryan S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Darren J",
    "paraphrasing": "Darren J."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Canadian Luke",
    "paraphrasing": "Luke from Canada"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "machine learner",
    "paraphrasing": "a machine learner"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Vince S",
    "paraphrasing": "Vince S."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Programming Novice",
    "paraphrasing": "Novice programmer"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mark Anderson",
    "paraphrasing": "Anderson, Mark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Nikolai Felix",
    "paraphrasing": "Nikolai, Felix"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Manuel",
    "paraphrasing": "Manuel, John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "delhi shower",
    "paraphrasing": "delhi.shower"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Brandon Chad",
    "paraphrasing": "Chad, Brandon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "private private",
    "paraphrasing": "private user"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Austen Gary",
    "paraphrasing": "Gary Austen"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The Norwegian",
    "paraphrasing": "Norwegian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Confused Omar",
    "paraphrasing": "Omar, confused"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephen C",
    "paraphrasing": "Stephen C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Andrew D",
    "paraphrasing": "Andrew D."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "john michael",
    "paraphrasing": "Michael John"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Ross Smith",
    "paraphrasing": "Smith, Ross"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "ben au",
    "paraphrasing": "ben.au"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Outlaw Lemur",
    "paraphrasing": "Lemur Outlaw"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alex C",
    "paraphrasing": "Alex C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert K",
    "paraphrasing": "K Robert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Scott C",
    "paraphrasing": "Scott C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Robert Lu",
    "paraphrasing": "Lu, Robert"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mia Maria",
    "paraphrasing": "Maria Mia"
  },
  {
    "database_id": "sing_contest",
    "table": "songs",
    "column": "english_translation",
    "original_value": "The voice",
    "paraphrasing": "The song's lyrics"
  },
  {
    "database_id": "sing_contest",
    "table": "songs",
    "column": "english_translation",
    "original_value": "My dear",
    "paraphrasing": "My beloved"
  },
  {
    "database_id": "sing_contest",
    "table": "songs",
    "column": "english_translation",
    "original_value": "Clear water",
    "paraphrasing": "Clear, pure water"
  },
  {
    "database_id": "car_1",
    "table": "car_names",
    "column": "model",
    "original_value": " volkswagen",
    "paraphrasing": "Volkswagen"
  },
  {
    "database_id": "student_club",
    "table": "expense",
    "column": "expense_description",
    "original_value": "Club shirts",
    "paraphrasing": "Shirts for the club"
  },
  {
    "database_id": "student_club",
    "table": "expense",
    "column": "expense_description",
    "original_value": "Alumni Glass",
    "paraphrasing": "Glass for alumni event"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "March Meeting",
    "paraphrasing": "Meeting in March"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "Spring Elections",
    "paraphrasing": "Elections in Spring"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "April Speaker",
    "paraphrasing": "Speaker in April"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "March Speaker",
    "paraphrasing": "Speaker in March"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "October Speaker",
    "paraphrasing": "Speaker in October"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "February Speaker",
    "paraphrasing": "Speaker in February"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "September Speaker",
    "paraphrasing": "Speaker in September"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "Fall Elections",
    "paraphrasing": "Elections in the Fall"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "January Meeting",
    "paraphrasing": "Meeting in January"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "February Meeting",
    "paraphrasing": "Meeting in February"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "October Meeting",
    "paraphrasing": "October's meeting"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "November Speaker",
    "paraphrasing": "Speaker in November"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "November Meeting",
    "paraphrasing": "November's meeting"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "Graffiti Removal",
    "paraphrasing": "Removing graffiti"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "Community Theater",
    "paraphrasing": "Community Theatre"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "January Speaker",
    "paraphrasing": "Speaker in January"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "April Meeting",
    "paraphrasing": "April's Meeting"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "Yearly Kickoff",
    "paraphrasing": "Annual Kickoff"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "event_name",
    "original_value": "September Meeting",
    "paraphrasing": "Meeting in September"
  },
  {
    "database_id": "european_football_2",
    "table": "team",
    "column": "team_long_name",
    "original_value": "Wolverhampton Wanderers",
    "paraphrasing": "Wolverhampton Wanderers FC"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "Physics Department",
    "paraphrasing": "Department of Physics"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "Psychology Department",
    "paraphrasing": "Department of Psychology"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "Biology Department",
    "paraphrasing": "Biology Dept."
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "English Department",
    "paraphrasing": "Department of English"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "History Department",
    "paraphrasing": "Department of History"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "Music Department",
    "paraphrasing": "Department of Music"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "department",
    "original_value": "Management Department",
    "paraphrasing": "Management"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "added clarification",
    "paraphrasing": "Clarification added"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "good point",
    "paraphrasing": "That's a good observation"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "great explanation",
    "paraphrasing": "Excellent explanation"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Thanks Procrastinator",
    "paraphrasing": "Thanks to Procrastinator"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "interesting suggestion",
    "paraphrasing": "Good suggestion"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "with replacement",
    "paraphrasing": "with replacment"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Geometric likelihood",
    "paraphrasing": "Likelihood based on geometry"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "correction made",
    "paraphrasing": "Corrected"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Classification mainly",
    "paraphrasing": "Mainly classification"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "clarified above",
    "paraphrasing": "As mentioned above"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Maximum Likelihood",
    "paraphrasing": "Maximum likelihood estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Question edited",
    "paraphrasing": "Edited question"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "references added",
    "paraphrasing": "Added references"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Prediction error",
    "paraphrasing": "Error in prediction"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Beautiful plots",
    "paraphrasing": "Lovely charts"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Unfortunately no",
    "paraphrasing": "No, unfortunately"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Edited response",
    "paraphrasing": "Response updated"
  },
  {
    "database_id": "student_club",
    "table": "budget",
    "column": "category",
    "original_value": "Advertisement",
    "paraphrasing": "Advertising"
  },
  {
    "database_id": "student_club",
    "table": "budget",
    "column": "category",
    "original_value": "Speaker Gifts",
    "paraphrasing": "Gifts for speakers"
  },
  {
    "database_id": "bike_racing",
    "table": "bike",
    "column": "material",
    "original_value": "carbon fiber",
    "paraphrasing": "carbon fibre"
  },
  {
    "database_id": "wta_1",
    "table": "matches",
    "column": "tourney_name",
    "original_value": "Luxembourg",
    "paraphrasing": "Luxembourg Open"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "language",
    "original_value": "Chinese Simplified",
    "paraphrasing": "Simplified Chinese"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "language",
    "original_value": "Chinese Traditional",
    "paraphrasing": "Traditional Chinese"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Legendary Artifact",
    "paraphrasing": "Legendary item"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Legendary Land",
    "paraphrasing": "Land, Legendary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Artifact Land",
    "paraphrasing": "Land Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Legendary Enchantment",
    "paraphrasing": "Enchantment of legendary type"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "World Enchantment",
    "paraphrasing": "Enchantment of the World"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Snow Artifact",
    "paraphrasing": "Artifact Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Summon Wolf",
    "paraphrasing": "Summoning a Wolf"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Legendary Sorcery",
    "paraphrasing": "Sorcery card, legendary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Snow Enchantment",
    "paraphrasing": "Enchantment Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Snow Sorcery",
    "paraphrasing": "Sorcery Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Snow Instant",
    "paraphrasing": "Instant Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Ongoing Scheme",
    "paraphrasing": "Scheme in progress"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Basic Land",
    "paraphrasing": "Land card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Summon Dragon",
    "paraphrasing": "Summon a Dragon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Summon Goblin",
    "paraphrasing": "Summon a Goblin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Summon Knights",
    "paraphrasing": "Knights that summon"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Anderson Luis",
    "paraphrasing": "Luis Anderson"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Andre Andre",
    "paraphrasing": "Andre, Andre"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Antonio Tomas",
    "paraphrasing": "Tomas, Antonio"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Antonio Xavier",
    "paraphrasing": "Xavier, Antonio"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Benjamin Leroy",
    "paraphrasing": "Leroy, Benjamin"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Carlos Daniel",
    "paraphrasing": "Daniel, Carlos"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Carlos Manuel",
    "paraphrasing": "Manuel, Carlos"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Carlos Tomas",
    "paraphrasing": "Tomas, Carlos"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Cesar Fernando",
    "paraphrasing": "Fernando, Cesar"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Christie Elliot",
    "paraphrasing": "Elliot Christie"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Christopher Johnston",
    "paraphrasing": "Johnston, Christopher"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Collins John",
    "paraphrasing": "John Collins"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "David Hubert",
    "paraphrasing": "Hubert, David"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Donovan Leon",
    "paraphrasing": "Leon Donovan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Fernando Lewis",
    "paraphrasing": "Lewis, Fernando"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Frederic Jay",
    "paraphrasing": "Jay, Frederic"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Garry Kenneth",
    "paraphrasing": "Kenneth Garry"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Gregory Christ",
    "paraphrasing": "Christ, Gregory"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "James Vincent",
    "paraphrasing": "Vincent, James"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jose Angel",
    "paraphrasing": "Angel, Jose"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jose Carlos",
    "paraphrasing": "Carlos, Jose"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Joshua John",
    "paraphrasing": "John Joshua"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Julian Esteban",
    "paraphrasing": "Esteban, Julian"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Luis Carlos",
    "paraphrasing": "Carlos, Luis"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Luis Manuel",
    "paraphrasing": "Manuel, Luis"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Luis Pedro",
    "paraphrasing": "Pedro, Luis"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Manuel Victor",
    "paraphrasing": "Victor, Manuel"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Martial Robin",
    "paraphrasing": "Robin Martial"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Martin Scott",
    "paraphrasing": "Scott, Martin"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Matthew James",
    "paraphrasing": "James, Matthew"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Mauricio Antonio",
    "paraphrasing": "Antonio, Mauricio"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Miguel Angel",
    "paraphrasing": "Angel Miguel"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Miguel Pedro",
    "paraphrasing": "Pedro, Miguel"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Mitchell Donald",
    "paraphrasing": "Donald Mitchell"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Nathan Junior",
    "paraphrasing": "Junior, Nathan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Nathan Thomas",
    "paraphrasing": "Thomas, Nathan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Paddy John",
    "paraphrasing": "John Paddy"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Robert Malcolm",
    "paraphrasing": "Malcolm, Robert"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Rodgers Kola",
    "paraphrasing": "Kola Rodgers"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Rodrigo Antonio",
    "paraphrasing": "Antonio, Rodrigo"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Rodrigo Hernandez",
    "paraphrasing": "Rodriguez Hernandez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Santiago Leonardo",
    "paraphrasing": "Leonardo, Santiago"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Success Isaac",
    "paraphrasing": "Isaac Success"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "William Gustavo",
    "paraphrasing": "Gustavo, William"
  },
  {
    "database_id": "battle_death",
    "table": "ship",
    "column": "location",
    "original_value": "SW Approaches",
    "paraphrasing": "Southwest Approaches"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Legendary Artifact",
    "paraphrasing": "Artifact of legendary status"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Wall",
    "paraphrasing": "Wall Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Creature",
    "paraphrasing": "Enchant a Creature"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Land",
    "paraphrasing": "Land Enchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Enchantment",
    "paraphrasing": "Enchantment Enchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Artifact",
    "paraphrasing": "Enchant an Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Continuous Artifact",
    "paraphrasing": "Artifact that is continuous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Mono Artifact",
    "paraphrasing": "Artifact that is Mono"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Artifact Creature",
    "paraphrasing": "Creature Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Poly Artifact",
    "paraphrasing": "Artifact Poly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Legendary Land",
    "paraphrasing": "Land, Legendary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Artifact Land",
    "paraphrasing": "Land Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Mana Source",
    "paraphrasing": "Source of Mana"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Permanent",
    "paraphrasing": "Enchant a Permanent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Legendary Enchantment",
    "paraphrasing": "Enchantment of Legendary type"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant World",
    "paraphrasing": "Enchant the World"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Plains",
    "paraphrasing": "Plains Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Island",
    "paraphrasing": "Island Enchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Swamp",
    "paraphrasing": "Swamp Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Mountain",
    "paraphrasing": "Mountain Enchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Forest",
    "paraphrasing": "Enchanted Forest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Snow Artifact",
    "paraphrasing": "Artifact Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "World Enchantment",
    "paraphrasing": "Enchantment of the World"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Summon Wolf",
    "paraphrasing": "Summoning a Wolf"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchantment Land",
    "paraphrasing": "Land of Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Legendary Sorcery",
    "paraphrasing": "Sorcery card, legendary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Snow Enchantment",
    "paraphrasing": "Enchantment Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Equipment",
    "paraphrasing": "Equip Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Snow Sorcery",
    "paraphrasing": "Sorcery Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Snow Instant",
    "paraphrasing": "Instant Snow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Ongoing Scheme",
    "paraphrasing": "Scheme in progress"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Basic Land",
    "paraphrasing": "Land - Basic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Enchant Player",
    "paraphrasing": "Enchant the player"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Legendary Creature",
    "paraphrasing": "Legendary monster"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "high grade",
    "original_value": "K",
    "paraphrasing": "Kindergarten"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "high grade",
    "original_value": "Post Secondary",
    "paraphrasing": "Beyond High School"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "location",
    "original_value": "Campus Common",
    "paraphrasing": "Common area on campus"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "location",
    "original_value": "Various locations",
    "paraphrasing": "At multiple locations"
  },
  {
    "database_id": "battle_death",
    "table": "ship",
    "column": "disposition_of_ship",
    "original_value": "Sank",
    "paraphrasing": "Went down"
  },
  {
    "database_id": "real_estate_rentals",
    "table": "features",
    "column": "feature_name",
    "original_value": "swimming pool",
    "paraphrasing": "pool on site"
  },
  {
    "database_id": "real_estate_rentals",
    "table": "features",
    "column": "feature_name",
    "original_value": "high building",
    "paraphrasing": "tall building"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Agricultural Communication",
    "paraphrasing": "Communication in Agriculture"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Biological Engineering",
    "paraphrasing": "Engineering, Biological"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Communication Studies",
    "paraphrasing": "Studies in Communication"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Applied Economics",
    "paraphrasing": "Economics, Applied"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Global Communication",
    "paraphrasing": "Communication, Global"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Surgical Technician",
    "paraphrasing": "Surgical Tech"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Chemistry Teaching",
    "paraphrasing": "Teaching Chemistry"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Technology Systems",
    "paraphrasing": "Systems Technology"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Automotive Technology",
    "paraphrasing": "Technology, Automotive"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Agricultural Science",
    "paraphrasing": "Agricultural Sciences"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Aerospace Studies",
    "paraphrasing": "Aerospace program"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Environmental Studies",
    "paraphrasing": "Studies in Environmental Science"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Recreation Administration",
    "paraphrasing": "Administration in Recreation"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Business Education",
    "paraphrasing": "Education in Business"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Physics Teaching",
    "paraphrasing": "Teaching Physics"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Agricultural Education",
    "paraphrasing": "Education in Agriculture"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Music Therapy",
    "paraphrasing": "Therapy in Music"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Nutrition Science",
    "paraphrasing": "Science in Nutrition"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "International Business",
    "paraphrasing": "Business, International"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Mathematics Education",
    "paraphrasing": "Education in Mathematics"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Environmental Engineering",
    "paraphrasing": "Engineering, Environmental"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "American Studies",
    "paraphrasing": "U.S. Studies"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Welding Technology",
    "paraphrasing": "Welding Tech"
  },
  {
    "database_id": "student_club",
    "table": "major",
    "column": "major_name",
    "original_value": "Art History",
    "paraphrasing": "History of Art"
  },
  {
    "database_id": "student_transcripts_tracking",
    "table": "addresses",
    "column": "city",
    "original_value": "Port Evanston",
    "paraphrasing": "Evanston, Port"
  },
  {
    "database_id": "student_transcripts_tracking",
    "table": "addresses",
    "column": "city",
    "original_value": "South Palma",
    "paraphrasing": "Palma South"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "superhero_name",
    "original_value": "The Cape",
    "paraphrasing": "Cape"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Unlimited Edition",
    "paraphrasing": "Unlimited set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Fourth Edition",
    "paraphrasing": "Fourth Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Fifth Edition",
    "paraphrasing": "Fifth Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Seventh Edition",
    "paraphrasing": "Seventh Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "The Dark",
    "paraphrasing": "Dark Set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Archenemy Schemes",
    "paraphrasing": "Archenemy's Schemes"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Legacy Championship",
    "paraphrasing": "Championship Legacy"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Vintage Championship",
    "paraphrasing": "Championship Vintage"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Promotional Schemes",
    "paraphrasing": "Promotional offers"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Celebration Cards",
    "paraphrasing": "Cards for Celebration"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Conspiracy Promos",
    "paraphrasing": "Promotional Conspiracy cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Conflux Promos",
    "paraphrasing": "Promos for Conflux"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Dissension Promos",
    "paraphrasing": "Dissension promotional cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Eventide Promos",
    "paraphrasing": "Eventide promotional cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Exodus Promos",
    "paraphrasing": "Promos for Exodus"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Gatecrash Promos",
    "paraphrasing": "Gatecrash Promotional Cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Promotional Planes",
    "paraphrasing": "Planes - Promotional Set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Invasion Promos",
    "paraphrasing": "Invasion Promotional Cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Judgment Promos",
    "paraphrasing": "Promos for Judgment"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Legions Promos",
    "paraphrasing": "Legions Promotional Set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Magazine Inserts",
    "paraphrasing": "Inserts from magazines"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Nationals Promos",
    "paraphrasing": "National Promos"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Odyssey Promos",
    "paraphrasing": "Odyssey Promotional Set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Onslaught Promos",
    "paraphrasing": "Onslaught Promotional Cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Prophecy Promos",
    "paraphrasing": "Prophecy Promotional Set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Redemption Program",
    "paraphrasing": "Program for redemption"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Resale Promos",
    "paraphrasing": "Resale Promotional Sets"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Scourge Promos",
    "paraphrasing": "Scourge Promotional cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Stronghold Promos",
    "paraphrasing": "Stronghold Promotional Cards"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Tempest Promos",
    "paraphrasing": "Promos for Tempest"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Torment Promos",
    "paraphrasing": "Promotional cards for Torment"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Vanguard Series",
    "paraphrasing": "Vanguard set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "name",
    "original_value": "Treasure Chest",
    "paraphrasing": "Chest of Treasure"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "type",
    "original_value": "Guest Speaker",
    "paraphrasing": "Speaker event"
  },
  {
    "database_id": "student_club",
    "table": "event",
    "column": "type",
    "original_value": "Community Service",
    "paraphrasing": "Service to the community"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "First strike",
    "paraphrasing": "Strike first"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Double strike",
    "paraphrasing": "Strike twice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Investigate",
    "paraphrasing": "Look into"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Cumulative upkeep",
    "paraphrasing": "Upkeep is cumulative"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Tempting offer",
    "paraphrasing": "An attractive proposition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Forecast",
    "paraphrasing": "Predict the future"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Split second",
    "paraphrasing": "Split-second"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Join forces",
    "paraphrasing": "Work together"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Spell mastery",
    "paraphrasing": "Mastery of spells"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Fateful hour",
    "paraphrasing": "An hour of fate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Hidden agenda",
    "paraphrasing": "Agenda is hidden"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Replicate",
    "paraphrasing": "Copy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Battle Cry",
    "paraphrasing": "Cry of Battle"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Detain",
    "paraphrasing": "Hold up"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "keywords",
    "original_value": "Foretell",
    "paraphrasing": "Predict the future"
  },
  {
    "database_id": "bbc_channels",
    "table": "program",
    "column": "title",
    "original_value": "Another Country",
    "paraphrasing": "A Different Country"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "Understanding DB",
    "paraphrasing": "Understanding Databases"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "Summer Show",
    "paraphrasing": "Show for Summer"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "Data base",
    "paraphrasing": "Database"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "Customer reviews",
    "paraphrasing": "Reviews from customers"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "Learning French",
    "paraphrasing": "French Learning"
  },
  {
    "database_id": "cre_Doc_Template_Mgt",
    "table": "documents",
    "column": "document_name",
    "original_value": "About Korea",
    "paraphrasing": "Regarding Korea"
  },
  {
    "database_id": "student_club",
    "table": "income",
    "column": "source",
    "original_value": "Dues",
    "paraphrasing": "Membership fees"
  },
  {
    "database_id": "student_club",
    "table": "income",
    "column": "source",
    "original_value": "Fundraising",
    "paraphrasing": "Funds raised"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "low grade",
    "original_value": "K",
    "paraphrasing": "Kindergarten"
  },
  {
    "database_id": "formula_1",
    "table": "constructors",
    "column": "name",
    "original_value": "Team Lotus",
    "paraphrasing": "Lotus Team"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Tenth Edition",
    "paraphrasing": "10th Edition"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Fourth Edition",
    "paraphrasing": "Fourth Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Fifth Dawn",
    "paraphrasing": "Fifth Edition Dawn"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Fifth Edition",
    "paraphrasing": "Fifth Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Seventh Edition",
    "paraphrasing": "Seventh Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Ninth Edition",
    "paraphrasing": "Ninth Edition set"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "The Dark",
    "paraphrasing": "Dark"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "The List",
    "paraphrasing": "List"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "mcmname",
    "original_value": "Resale Promos",
    "paraphrasing": "Promos for resale"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "educational option type",
    "original_value": "Continuation School",
    "paraphrasing": "Continuation high school"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "educational option type",
    "original_value": "Opportunity School",
    "paraphrasing": "School with opportunity program"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "diagnosis",
    "original_value": "brain infarction",
    "paraphrasing": "brain infarct"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "diagnosis",
    "original_value": "Adult Still",
    "paraphrasing": "Adult Still's disease"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "diagnosis",
    "original_value": "Bleeding Colitis",
    "paraphrasing": "Colitis with bleeding"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "diagnosis",
    "original_value": "Photosensitivities",
    "paraphrasing": "Sensitivity to photos"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "diagnosis",
    "original_value": "collagen disease",
    "paraphrasing": "disease of the collagen"
  },
  {
    "database_id": "financial",
    "table": "district",
    "column": "a3",
    "original_value": "west Bohemia",
    "paraphrasing": "Western Bohemia"
  },
  {
    "database_id": "financial",
    "table": "district",
    "column": "a3",
    "original_value": "north Bohemia",
    "paraphrasing": "Northern Bohemia"
  },
  {
    "database_id": "financial",
    "table": "district",
    "column": "a3",
    "original_value": "east Bohemia",
    "paraphrasing": "Eastern Bohemia"
  },
  {
    "database_id": "financial",
    "table": "district",
    "column": "a3",
    "original_value": "north Moravia",
    "paraphrasing": "Moravia, north"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Martin Meyer",
    "paraphrasing": "Meyer, Martin"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Valdez Couch",
    "paraphrasing": "Couch Valdez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "White Vinson",
    "paraphrasing": "Vinson White"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Coleman Jr",
    "paraphrasing": "Coleman, Jr."
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Alvarez Ruiz",
    "paraphrasing": "Ruiz, Alvarez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Gonzalez Marin",
    "paraphrasing": "Marin Gonzalez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Rodriguez Chavez",
    "paraphrasing": "Chavez Rodriguez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Garcia Bowman",
    "paraphrasing": "Bowman Garcia"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Helm Torres",
    "paraphrasing": "Torres Helm"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "O Riley",
    "paraphrasing": "O'Riley"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Marquez Martinez",
    "paraphrasing": "Martinez Marquez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Torres Flores",
    "paraphrasing": "Flores, Torres"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Hall Johnson",
    "paraphrasing": "Johnson Hall"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Lower Lowe",
    "paraphrasing": "Lower Lowe School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Parker Taylor",
    "paraphrasing": "Taylor Parker"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Stokes Mack",
    "paraphrasing": "Mack Stokes"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "De Bond",
    "paraphrasing": "De Bond School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Kraft Orozco",
    "paraphrasing": "Orozco Kraft"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Contreras Smith",
    "paraphrasing": "Smith Contreras"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Smith Jackson",
    "paraphrasing": "Jackson Smith"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Cole Anderson",
    "paraphrasing": "Anderson Cole"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Graves Brown",
    "paraphrasing": "Brown Graves"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Fox V",
    "paraphrasing": "Fox Vocational"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Bennett Porter",
    "paraphrasing": "Porter Bennett"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Del Llano",
    "paraphrasing": "Del Llano School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Sharp Buhr",
    "paraphrasing": "Sharp Buhr Elementary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Van Court",
    "paraphrasing": "Van Court School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Riley Mendoza",
    "paraphrasing": "Mendoza, Riley"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Johnson Leon",
    "paraphrasing": "Leon Johnson"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Fisher Gibson",
    "paraphrasing": "Gibson Fisher"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Chavez Torres",
    "paraphrasing": "Torres, Chavez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Murphy Brewer",
    "paraphrasing": "Brewer Murphy"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Visualization Libraries",
    "paraphrasing": "Libraries for visualization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "forecasting handbooks",
    "paraphrasing": "handbooks for forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Displaying data",
    "paraphrasing": "Data is being displayed"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistics Jokes",
    "paraphrasing": "Jokes about statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "conditional probability",
    "paraphrasing": "probability, given the condition"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Normalizing data",
    "paraphrasing": "Data normalization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Metaphysic problem",
    "paraphrasing": "A problem with metaphysics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Tracking Algorithms",
    "paraphrasing": "Algorithms being tracked"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Forecasting handbooks",
    "paraphrasing": "Handbooks for forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Model suggestion",
    "paraphrasing": "Suggestion for a model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistics Proof",
    "paraphrasing": "Proof of statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression Proof",
    "paraphrasing": "Proof of regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Validating Questionnaires",
    "paraphrasing": "Questionnaires being validated"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Validating questionnaires",
    "paraphrasing": "Questionnaires are being validated"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Lagrange function",
    "paraphrasing": "Lagrange's function"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Representative sampling",
    "paraphrasing": "Sampling to represent"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistics Collaboration",
    "paraphrasing": "Collaboration on statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistics collaboration",
    "paraphrasing": "Collaboration on statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Worst Classifier",
    "paraphrasing": "The worst classifier"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Worst classifier",
    "paraphrasing": "The worst classifier"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Threshold Level",
    "paraphrasing": "Level of threshold"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "LASSO assumptions",
    "paraphrasing": "LASSO model assumptions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical landscape",
    "paraphrasing": "Statistical overview of the current situation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "diffuse initialization",
    "paraphrasing": "initialization that is diffuse"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "auto optimization",
    "paraphrasing": "automatic optimization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pivot Functions",
    "paraphrasing": "Functions for pivoting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Test Statistics",
    "paraphrasing": "Statistics for testing"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "median adjustment",
    "paraphrasing": "average modification"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "graphics encyclopedia",
    "paraphrasing": "graphics and encyclopedia"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Graphics encyclopedia",
    "paraphrasing": "An encyclopedia of graphics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "multiple comparison",
    "paraphrasing": "comparisons involving multiple tests"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Forecasting methods",
    "paraphrasing": "Methods for forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interaction effect",
    "paraphrasing": "Effect of interaction"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "pairwise exclusions",
    "paraphrasing": "exclusions in pairs"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pairwise exclusions",
    "paraphrasing": "Pairwise exclusion of items"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Subsample correlation",
    "paraphrasing": "Correlation from a subsample"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multiple histograms",
    "paraphrasing": "Several histograms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Testing normality",
    "paraphrasing": "Testing if normal"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Variable transformation",
    "paraphrasing": "Transformation of variable"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "probability question",
    "paraphrasing": "question about probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing percentages",
    "paraphrasing": "Percentages being compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sequential patterns",
    "paraphrasing": "Patterns in sequence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "performance comparison",
    "paraphrasing": "Comparison of performance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Forecasts uncertainty",
    "paraphrasing": "Uncertainty in forecasts"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical Label",
    "paraphrasing": "A statistical label"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Distribution Statistics",
    "paraphrasing": "Statistics of distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical quote",
    "paraphrasing": "A statistical quote"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Data evaluation",
    "paraphrasing": "Evaluating data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Prediction interval",
    "paraphrasing": "Prediction intervals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Assessing linearity",
    "paraphrasing": "Evaluating if it's linear"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpreting results",
    "paraphrasing": "Results interpretation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpreting CI",
    "paraphrasing": "Interpreting Continuous Integration"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "multiple comparisons",
    "paraphrasing": "several comparisons"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Repeated Measurements",
    "paraphrasing": "Measurements taken repeatedly"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "optimization question",
    "paraphrasing": "Question about optimization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "correlation matrix",
    "paraphrasing": "matrix of correlations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "functional distributions",
    "paraphrasing": "distributions of functionality"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Normality tests",
    "paraphrasing": "Tests for normality"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "composite variable",
    "paraphrasing": "variable composed of multiple values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "forecasting question",
    "paraphrasing": "Question about forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Forecasting question",
    "paraphrasing": "A question about forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Distribution fitting",
    "paraphrasing": "Distribution fit"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sample weighting",
    "paraphrasing": "Weighting of samples"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Business forecasting",
    "paraphrasing": "Forecasting for business"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Hierarchical regression",
    "paraphrasing": "Hierarchical regression analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Entropy Optimization",
    "paraphrasing": "Optimizing entropy"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Averaging images",
    "paraphrasing": "Images being averaged"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sequential testing",
    "paraphrasing": "Testing sequentially"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Marginalizing probability",
    "paraphrasing": "Probability of marginalization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Analyze proportions",
    "paraphrasing": "Analysis of proportions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Estimating prices",
    "paraphrasing": "Prices are being estimated"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calculate ratings",
    "paraphrasing": "Calculate the ratings"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sufficient statistics",
    "paraphrasing": "Enough statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical insignificance",
    "paraphrasing": "Not statistically significant"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Hypothesis test",
    "paraphrasing": "Test hypothesis"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression equation",
    "paraphrasing": "Equation for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Identifying outliers",
    "paraphrasing": "Identifying data points that deviate significantly"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability that",
    "paraphrasing": "The likelihood of"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "repeated measures",
    "paraphrasing": "measures repeated"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "positive estimator",
    "paraphrasing": "estimator that is positive"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Positive estimator",
    "paraphrasing": "Estimator is positive"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "probability distribution",
    "paraphrasing": "distribution of probabilities"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Classifying spectra",
    "paraphrasing": "Classifying of spectra"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Kernel Selection",
    "paraphrasing": "Selection of kernel"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Simulating distributions",
    "paraphrasing": "Simulations of distributions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability problem",
    "paraphrasing": "A probability problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Parameter estimation",
    "paraphrasing": "Estimating parameters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multivariate analysis",
    "paraphrasing": "Analysis using multiple variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Symmetrical regression",
    "paraphrasing": "Regression symmetry"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "correlation statistics",
    "paraphrasing": "statistics on correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "explanatory model",
    "paraphrasing": "model explaining"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "subsample bootstrapping",
    "paraphrasing": "bootstrapping a subsample"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Subsample bootstrapping",
    "paraphrasing": "Bootstrapping with subsampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Equivalent events",
    "paraphrasing": "Events that are the same"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Predictive Probabilities",
    "paraphrasing": "Probabilities that predict"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Hypothesis testing",
    "paraphrasing": "Testing hypotheses"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical modelling",
    "paraphrasing": "Statistical modeling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Convergence problem",
    "paraphrasing": "Problem with convergence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Optimization problem",
    "paraphrasing": "An optimization problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "significant variables",
    "paraphrasing": "important variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Showing independence",
    "paraphrasing": "Demonstrating independence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multiple comparisons",
    "paraphrasing": "Several comparisons"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "sampling weight",
    "paraphrasing": "Weight for sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sample analysis",
    "paraphrasing": "Analysis sample"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "conditional mean",
    "paraphrasing": "mean, conditional"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Expectation notations",
    "paraphrasing": "Notations for expectations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Model comparison",
    "paraphrasing": "Comparing models"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Server Monitoring",
    "paraphrasing": "Monitoring the server"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Causation implication",
    "paraphrasing": "Implication of causation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Dirichlet posterior",
    "paraphrasing": "Dirichlet posterior distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Reliable factors",
    "paraphrasing": "Factors that are reliable"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Projection Analysis",
    "paraphrasing": "Analysis of projections"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Random Investment",
    "paraphrasing": "Investment at random"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pearson Correlation",
    "paraphrasing": "Correlation, Pearson"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multilevel analysis",
    "paraphrasing": "Analysis at multiple levels"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "principal component",
    "paraphrasing": "main component"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Expectation Subscript",
    "paraphrasing": "Expectation of Subscript"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Computing combinations",
    "paraphrasing": "Calculating combinations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Correlation analysis",
    "paraphrasing": "Analysis of correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Feature importance",
    "paraphrasing": "Importance of feature"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Categorical coefficients",
    "paraphrasing": "Coefficients that are categorical"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "deletion residuals",
    "paraphrasing": "remnants of deletion"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Subgroup analyses",
    "paraphrasing": "Analyses of subgroups"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Deletion residuals",
    "paraphrasing": "Remnants of deletion"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "About Covariance",
    "paraphrasing": "Regarding Covariance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability Problem",
    "paraphrasing": "A probability problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "hypothesis testing",
    "paraphrasing": "testing hypotheses"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "lambda determination",
    "paraphrasing": "lambda function determination"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Welch Statistic",
    "paraphrasing": "Statistic by Welch"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Welch statistic",
    "paraphrasing": "Statistic by Welch"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Assigning weights",
    "paraphrasing": "Assigning weight values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Model specification",
    "paraphrasing": "Specification of the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Scale parameter",
    "paraphrasing": "Parameter for scaling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Incidence density",
    "paraphrasing": "Density of incidence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "proportions test",
    "paraphrasing": "test of proportions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Descriptive Table",
    "paraphrasing": "Table description"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Explaining Variance",
    "paraphrasing": "Explaining the variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "partial correlation",
    "paraphrasing": "correlation, partial"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Partial correlation",
    "paraphrasing": "Correlation, partial"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "sketch distribution",
    "paraphrasing": "distribution sketch"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Distributed Median",
    "paraphrasing": "Median distributed"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Ordered combinations",
    "paraphrasing": "Combinations, ordered"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Model Identification",
    "paraphrasing": "Identifying the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "census questionnaire",
    "paraphrasing": "questionnaire for the census"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Seasonal variation",
    "paraphrasing": "Variation in seasons"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Distribution help",
    "paraphrasing": "Help with distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Classification Problem",
    "paraphrasing": "A classification problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Repeated measures",
    "paraphrasing": "Repeated measurements"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Normal distribution",
    "paraphrasing": "Distribution is normal"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Estimation Technique",
    "paraphrasing": "Estimation methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpreting graphs",
    "paraphrasing": "Interpreted graphs"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Transforming variables",
    "paraphrasing": "Variables are being transformed"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistics question",
    "paraphrasing": "Question about statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "HMM initialization",
    "paraphrasing": "Initialization of HMM"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Confounding variables",
    "paraphrasing": "Variables that confound"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Divergence interpretation",
    "paraphrasing": "Interpretation of divergence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Matching curves",
    "paraphrasing": "Curves that match"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "LASSO Estimator",
    "paraphrasing": "LASSO estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Classification rate",
    "paraphrasing": "Rate of classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "normality distribution",
    "paraphrasing": "normal distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Basics statistics",
    "paraphrasing": "Basic statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Basic statistics",
    "paraphrasing": "Statistics overview"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calculating Expectation",
    "paraphrasing": "Calculating expected value"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Quantifying homogeneity",
    "paraphrasing": "Quantifying the level of homogeneity"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "categorical items",
    "paraphrasing": "items categorized"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing models",
    "paraphrasing": "Models being compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "running regressions",
    "paraphrasing": "Running regression tests"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Running regressions",
    "paraphrasing": "Running regression tests"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Distance metric",
    "paraphrasing": "Distance measure"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Standardizing Data",
    "paraphrasing": "Data standardization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Standardizing data",
    "paraphrasing": "Data standardization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Category responses",
    "paraphrasing": "Responses categorized"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Share repurchase",
    "paraphrasing": "Repurchase of shares"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Skewness formula",
    "paraphrasing": "Formula for skewness"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "variate transformation",
    "paraphrasing": "transformation of variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interview question",
    "paraphrasing": "A question for an interview"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interaction interpretation",
    "paraphrasing": "How interactions are interpreted"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regressions Analysis",
    "paraphrasing": "Analysis of regressions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "quantifying heterogeneity",
    "paraphrasing": "quantifying the heterogeneity"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Quantifying heterogeneity",
    "paraphrasing": "Quantifying the heterogeneity"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sales forecasting",
    "paraphrasing": "Sales forecasts"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability calculation",
    "paraphrasing": "Calculating probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Transforming Data",
    "paraphrasing": "Data transformation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Averaging Correlations",
    "paraphrasing": "Correlations being averaged"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Prey preference",
    "paraphrasing": "Preference for prey"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Independence test",
    "paraphrasing": "Test for independence"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pairwise comparisons",
    "paraphrasing": "Comparisons of pairs"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability Questions",
    "paraphrasing": "Questions about probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Posterior density",
    "paraphrasing": "Density in the posterior"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistic Question",
    "paraphrasing": "Question about statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Outliers identification",
    "paraphrasing": "Identifying outliers"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Combining errors",
    "paraphrasing": "Errors combined"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Parameter Estimates",
    "paraphrasing": "Estimates for parameters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Questionnaire design",
    "paraphrasing": "Designing a questionnaire"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calculating percentiles",
    "paraphrasing": "Calculating percentile values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Model Estimation",
    "paraphrasing": "Estimating the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "compare histograms",
    "paraphrasing": "Comparing histograms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Frequency Distribution",
    "paraphrasing": "Distribution of frequency"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Stationary Check",
    "paraphrasing": "Check for stationary"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression Predictions",
    "paraphrasing": "Predictions for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Similarity algorithms",
    "paraphrasing": "Algorithms for similarity"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Descriptive statistics",
    "paraphrasing": "Statistics describing the data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calculating probability",
    "paraphrasing": "Calculating the probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Growth analysis",
    "paraphrasing": "Analysis of growth"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "simultaneous equations",
    "paraphrasing": "equations at the same time"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Compute probability",
    "paraphrasing": "Calculate probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Testing linearity",
    "paraphrasing": "Testing if it's linear"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression Methods",
    "paraphrasing": "Methods for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression methods",
    "paraphrasing": "Methods for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pearson corelation",
    "paraphrasing": "Pearson correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pearson correlation",
    "paraphrasing": "Correlation, Pearson"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Order Statistics",
    "paraphrasing": "Statistics for orders"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression Question",
    "paraphrasing": "Question about regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Simulation study",
    "paraphrasing": "A simulation study"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability Calculation",
    "paraphrasing": "Calculating probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multiple hypothesis",
    "paraphrasing": "Several hypotheses"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Cleaning corpus",
    "paraphrasing": "Corpus cleaning"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Posterior Probability",
    "paraphrasing": "Probability after observation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Posterior probability",
    "paraphrasing": "Probability after observation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "multivariate regression",
    "paraphrasing": "regression using multiple variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "experimental design",
    "paraphrasing": "design experiment"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpolation problem",
    "paraphrasing": "Problem with interpolation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Posterior distribution",
    "paraphrasing": "Distribution after observation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "interview question",
    "paraphrasing": "question for interview"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "likelihood clarification",
    "paraphrasing": "clarification of likelihood"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Likelihood clarification",
    "paraphrasing": "Clarification of likelihood"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Ordering ratios",
    "paraphrasing": "Ratios for ordering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Correlation Method",
    "paraphrasing": "Method of correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Word association",
    "paraphrasing": "Association of words"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Parameter Estimation",
    "paraphrasing": "Estimating parameters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Tricky Question",
    "paraphrasing": "A tricky question"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical Problem",
    "paraphrasing": "A statistical problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "identify category",
    "paraphrasing": "Find the category"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "detector confidence",
    "paraphrasing": "confidence of detector"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "lizards probability",
    "paraphrasing": "probability of lizards"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Lizards probability",
    "paraphrasing": "The probability of lizards"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Adding probabilities",
    "paraphrasing": "Adding probability values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "multiple imputation",
    "paraphrasing": "various imputation methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "moderation analysis",
    "paraphrasing": "analysis of moderation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "model estimation",
    "paraphrasing": "Estimating the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Uniform updating",
    "paraphrasing": "Updating consistently"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "price prediction",
    "paraphrasing": "Predicting the price"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Graph interpretation",
    "paraphrasing": "Interpreting the graph"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bayesian references",
    "paraphrasing": "References to Bayesian methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "recursive model",
    "paraphrasing": "model with recursion"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing quartiles",
    "paraphrasing": "Comparing the quartiles"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Business Statistics",
    "paraphrasing": "Statistics for business"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Survey Analysis",
    "paraphrasing": "Analysis of survey results"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Pooled variance",
    "paraphrasing": "Variance pooled"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Keyword Probabilities",
    "paraphrasing": "Probabilities for keywords"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Keyword probabilities",
    "paraphrasing": "Probabilities for keywords"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Causal Analysis",
    "paraphrasing": "Analysis of cause"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sample variance",
    "paraphrasing": "Variance sample"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression Terminology",
    "paraphrasing": "Regression terms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability Distribution",
    "paraphrasing": "Probability distributions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Forecasting Orders",
    "paraphrasing": "Orders forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Back Transformation",
    "paraphrasing": "Transformation back"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "statistics question",
    "paraphrasing": "Question about statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "dependent variables",
    "paraphrasing": "variables that depend on others"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Dependent variables",
    "paraphrasing": "Variables that depend on others"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Compare Frequencies",
    "paraphrasing": "Comparing frequencies"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bootstrap estimator",
    "paraphrasing": "Bootstrap estimate"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "sampling question",
    "paraphrasing": "Question for sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing estimators",
    "paraphrasing": "Estimators being compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calculating Probability",
    "paraphrasing": "Calculating the probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Discontinuity Regression",
    "paraphrasing": "Regression discontinuity"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Simulating returns",
    "paraphrasing": "Simulating return values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression clustering",
    "paraphrasing": "Regression and clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Conditional Risk",
    "paraphrasing": "Risk depending on conditions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Signal comparison",
    "paraphrasing": "Comparison of signals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "comparing estimators",
    "paraphrasing": "Comparing different estimators"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "coverage probability",
    "paraphrasing": "probability of coverage"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Coverage probability",
    "paraphrasing": "Probability of coverage"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Hierarchical classification",
    "paraphrasing": "Classification in a hierarchy"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression specification",
    "paraphrasing": "Specification for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Clustering Variable",
    "paraphrasing": "Variable clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Clustering Techniques",
    "paraphrasing": "Techniques for clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "deviance residuals",
    "paraphrasing": "residuals from deviance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Deviance Residuals",
    "paraphrasing": "Residual Deviations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability question",
    "paraphrasing": "A question about probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "clustering algorithm",
    "paraphrasing": "algorithm for clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "ordinals problem",
    "paraphrasing": "Problem with ordinals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Classification Accuracy",
    "paraphrasing": "Accuracy of classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing proportions",
    "paraphrasing": "Comparing ratios"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Dynamic Regression",
    "paraphrasing": "Dynamic regression models"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "maximizing frequency",
    "paraphrasing": "To maximize frequency"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Experiment design",
    "paraphrasing": "Experiment's design"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sensors categorization",
    "paraphrasing": "Categorization of sensors"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "cluster sampling",
    "paraphrasing": "sampling from clusters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Covariance help",
    "paraphrasing": "Help with covariance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Simultaneous Probability",
    "paraphrasing": "Probability at the same time"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sampling methods",
    "paraphrasing": "Methods for sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Poisson arrival",
    "paraphrasing": "Poisson arrivals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "cluster analysis",
    "paraphrasing": "analysis of clusters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Cluster analysis",
    "paraphrasing": "Analysis of clusters"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Data overlapping",
    "paraphrasing": "Overlapping data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Daily forecasting",
    "paraphrasing": "Daily forecasts"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Excluding factors",
    "paraphrasing": "Factors excluded"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Calendar Visualization",
    "paraphrasing": "Visualization of a calendar"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interval censoring",
    "paraphrasing": "Interval-censored data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Accelerometer normalization",
    "paraphrasing": "Normalization of accelerometer data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Classification accuracy",
    "paraphrasing": "Accuracy of classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "statistical method",
    "paraphrasing": "a statistical method"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sampling probability",
    "paraphrasing": "Probability of sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Significant difference",
    "paraphrasing": "A significant difference"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Regression problem",
    "paraphrasing": "A regression problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability exercise",
    "paraphrasing": "Exercise in probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Exponential bound",
    "paraphrasing": "Bound exponentially"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Text Recommendations",
    "paraphrasing": "Recommendations for text"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Uncertainty analysis",
    "paraphrasing": "Analysis of uncertainty"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Outlier problems",
    "paraphrasing": "Problems with outliers"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Lagged Dependents",
    "paraphrasing": "Dependents with lag"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Incomplete questionnaires",
    "paraphrasing": "Questionnaires are not yet complete"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "poisson probability",
    "paraphrasing": "probability using poisson distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Poisson probability",
    "paraphrasing": "Probability using Poisson distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Baseline probability",
    "paraphrasing": "Probability at baseline"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Neuroscience Equations",
    "paraphrasing": "Equations for Neuroscience"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "clustering accuracy",
    "paraphrasing": "Accuracy of clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Log approximation",
    "paraphrasing": "Approximation of log"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Optimal Allocation",
    "paraphrasing": "Optimal allocation of resources"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Covariance estimation",
    "paraphrasing": "Estimating covariance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "variable reduction",
    "paraphrasing": "reducing variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Walking recognition",
    "paraphrasing": "Recognition of people walking"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Relative Confidence",
    "paraphrasing": "Confidence level"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Significance factors",
    "paraphrasing": "Factors of significance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Statistical tests",
    "paraphrasing": "Statistical testing"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpreting orthogonality",
    "paraphrasing": "Interpreting the concept of orthogonality"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Optional Features",
    "paraphrasing": "Features that are optional"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "weighted regression",
    "paraphrasing": "regression with weights"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Weighted regression",
    "paraphrasing": "Regression with weights"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing Histogram",
    "paraphrasing": "A comparison of histograms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "weka clustering",
    "paraphrasing": "Weka for clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Weka clustering",
    "paraphrasing": "Weka for clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing polynomials",
    "paraphrasing": "Polynomial comparison"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Measure precision",
    "paraphrasing": "Measuring precision"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Normalized likelihoods",
    "paraphrasing": "Likelihoods, normalized"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Inequality proof",
    "paraphrasing": "Proof of inequality"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Data Transformation",
    "paraphrasing": "Transforming data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Data transformation",
    "paraphrasing": "Transforming data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "conditional expectations",
    "paraphrasing": "expectations, conditional"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Random Sampling",
    "paraphrasing": "Sampling at random"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sampling distance",
    "paraphrasing": "Distance for sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Multiple testing",
    "paraphrasing": "Testing was done multiple times"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Unknown formula",
    "paraphrasing": "Formula not identified"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "San Andrea",
    "paraphrasing": "San Andreas"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "San Joaquin",
    "paraphrasing": "San Joaquin City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Butte City",
    "paraphrasing": "Butte"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "La Canada",
    "paraphrasing": "La Ca\u00f1ada"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Walnut Valley",
    "paraphrasing": "Walnut Valley City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "East Irvine",
    "paraphrasing": "Irvine, East"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "La Port",
    "paraphrasing": "LaPort"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Valley Home",
    "paraphrasing": "Valley Home City"
  },
  {
    "database_id": "card_games",
    "table": "sets",
    "column": "block",
    "original_value": "Arena League",
    "paraphrasing": "League Arena"
  },
  {
    "database_id": "university_rank",
    "table": "major",
    "column": "major_name",
    "original_value": "Healthcare Management",
    "paraphrasing": "Management in Healthcare"
  },
  {
    "database_id": "university_rank",
    "table": "major",
    "column": "major_name",
    "original_value": "Urban Education",
    "paraphrasing": "Education, urban"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "San Andrea",
    "paraphrasing": "San Andreas"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "San Joaquin",
    "paraphrasing": "San Joaquin City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Red Crest",
    "paraphrasing": "Redcrest"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "La Canada",
    "paraphrasing": "La Ca\u00f1ada"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Walnut Valley",
    "paraphrasing": "Walnut Valley City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Rolling Hills",
    "paraphrasing": "Rolling Hills City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "East Irvine",
    "paraphrasing": "Irvine East"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "La Port",
    "paraphrasing": "LaPort"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Bonita",
    "paraphrasing": "Bonita City"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "L Karen",
    "paraphrasing": "Karen L"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Bernardo",
    "paraphrasing": "Bernardo Elementary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Alice",
    "paraphrasing": "Alice Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "JoAnne",
    "paraphrasing": "Jo Anne"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "La Royce",
    "paraphrasing": "LaRoyce"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Sue Marie",
    "paraphrasing": "Marie Sue"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Wing Kwan",
    "paraphrasing": "Kwan Wing"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Marry",
    "paraphrasing": "Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Rose Anne",
    "paraphrasing": "Anne Rose"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Ana Maria",
    "paraphrasing": "Maria Ana"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Louise",
    "paraphrasing": "Louise Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Jane",
    "paraphrasing": "Jane Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Rae Ann",
    "paraphrasing": "Raeann"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "RoseMary",
    "paraphrasing": "Rose Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Jose Juan",
    "paraphrasing": "Juan Jose"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "August",
    "paraphrasing": "Aug."
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Rosa Maria",
    "paraphrasing": "Maria Rosa"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Jose Luis",
    "paraphrasing": "Luis, Jose"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "RoseMarie",
    "paraphrasing": "Rose Marie"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Lou",
    "paraphrasing": "Lou Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Maria Elena",
    "paraphrasing": "Elena Maria"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Kelley Jean",
    "paraphrasing": "Jean Kelley"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Ellen",
    "paraphrasing": "Ellen Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Kate",
    "paraphrasing": "Kate Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Forest",
    "paraphrasing": "Forest High School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Beth",
    "paraphrasing": "Beth Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Anne",
    "paraphrasing": "Anne Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Rose",
    "paraphrasing": "Rose, Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Ann",
    "paraphrasing": "Ann Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Maria Luz",
    "paraphrasing": "Luz, Maria"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Valerie Ann",
    "paraphrasing": "Ann Valerie"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Juan Carlos",
    "paraphrasing": "Carlos, Juan"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Jude",
    "paraphrasing": "Jude, Mary"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Jo Ann",
    "paraphrasing": "Joann"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Norma Jeanne",
    "paraphrasing": "Jeanne Norma"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Mary Pat",
    "paraphrasing": "Mary, Pat"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "MaryEllen",
    "paraphrasing": "Mary Ellen"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Turkmenian",
    "paraphrasing": "Turkmen"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Indian Languages",
    "paraphrasing": "Languages of India"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Azerbaijani",
    "paraphrasing": "Azerbaijani language"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Creole English",
    "paraphrasing": "English Creole"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Canton Chinese",
    "paraphrasing": "Chinese, Canton"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Creole French",
    "paraphrasing": "French Creole"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Belorussian",
    "paraphrasing": "Belarusian"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Maya Languages",
    "paraphrasing": "Languages of the Maya people"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Eskimo Languages",
    "paraphrasing": "Eskimo language"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Haiti Creole",
    "paraphrasing": "Haitian Creole"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Tadzhik",
    "paraphrasing": "Tajik"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Mixed Languages",
    "paraphrasing": "Combination of languages"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Mandarin Chinese",
    "paraphrasing": "Chinese, Mandarin"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Chin",
    "paraphrasing": "Chinese"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Polynesian Languages",
    "paraphrasing": "Polynesian language"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Fries",
    "paraphrasing": "Frisian"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Papuan Languages",
    "paraphrasing": "Papuan language family"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Nubian Languages",
    "paraphrasing": "Nubian language"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "charter funding type",
    "original_value": "Directly funded",
    "paraphrasing": "Funded directly"
  },
  {
    "database_id": "california_schools",
    "table": "frpm",
    "column": "charter funding type",
    "original_value": "Locally funded",
    "paraphrasing": "Funded locally"
  },
  {
    "database_id": "european_football_2",
    "table": "team_attributes",
    "column": "buildupplaydribblingclass",
    "original_value": "Little",
    "paraphrasing": "Not much emphasis on dribbling"
  },
  {
    "database_id": "european_football_2",
    "table": "team_attributes",
    "column": "buildupplaydribblingclass",
    "original_value": "Lots",
    "paraphrasing": "A lot of dribbling"
  },
  {
    "database_id": "european_football_2",
    "table": "player_attributes",
    "column": "preferred_foot",
    "original_value": "right",
    "paraphrasing": "right footed"
  },
  {
    "database_id": "european_football_2",
    "table": "player_attributes",
    "column": "preferred_foot",
    "original_value": "left",
    "paraphrasing": "left foot"
  },
  {
    "database_id": "formula_1",
    "table": "constructors",
    "column": "nationality",
    "original_value": "East German",
    "paraphrasing": "German, East"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "forename",
    "original_value": "Rodger",
    "paraphrasing": "Roger"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Spun off",
    "paraphrasing": "Lost control and spun out"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Driver Seat",
    "paraphrasing": "Driver's Seat"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Water pressure",
    "paraphrasing": "Pressure of water"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Broken wing",
    "paraphrasing": "Wing is broken"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Oil leak",
    "paraphrasing": "Oil leakage"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Wheel rim",
    "paraphrasing": "Rim of the wheel"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Water leak",
    "paraphrasing": "Leak in the water system"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Engine fire",
    "paraphrasing": "Fire in the engine"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Tyre puncture",
    "paraphrasing": "Puncture to tyre"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Fuel rig",
    "paraphrasing": "Fueling equipment"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Power loss",
    "paraphrasing": "Loss of power"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Safety concerns",
    "paraphrasing": "Concerns for safety"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Not restarted",
    "paraphrasing": "Has not been restarted"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Driver unwell",
    "paraphrasing": "Driver is sick"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Fatal accident",
    "paraphrasing": "Serious crash resulting in fatality"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Eye injury",
    "paraphrasing": "Injury to the eye"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Water pipe",
    "paraphrasing": "Pipe containing water"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Engine misfire",
    "paraphrasing": "Misfiring engine"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Collision damage",
    "paraphrasing": "Damage from collision"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "doctype",
    "original_value": "Administration Only",
    "paraphrasing": "For administration only"
  },
  {
    "database_id": "formula_1",
    "table": "circuits",
    "column": "name",
    "original_value": "Pescara Circuit",
    "paraphrasing": "Circuit of Pescara"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "county",
    "original_value": "Contra Costa",
    "paraphrasing": "Contra Costa County"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "county",
    "original_value": "Placer",
    "paraphrasing": "Placer County"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Variance components",
    "paraphrasing": "Components of variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Forecasting handbooks",
    "paraphrasing": "Handbooks for forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability Interpretations",
    "paraphrasing": "Interpretations of Probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Orthogonal parametrization",
    "paraphrasing": "Parametrization with orthogonality"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistics Jokes",
    "paraphrasing": "Jokes about statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Normalizing data",
    "paraphrasing": "Data normalization"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Asymptotic power",
    "paraphrasing": "Power as it approaches a limit"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Tracking Algorithms",
    "paraphrasing": "Algorithms being tracked"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Model suggestion",
    "paraphrasing": "Suggestion for a model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Validating questionnaires",
    "paraphrasing": "Questionnaire validation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistics collaboration",
    "paraphrasing": "Collaboration on statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Worst classifier",
    "paraphrasing": "Worst classification model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "LASSO assumptions",
    "paraphrasing": "Assumptions of LASSO"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistical landscape",
    "paraphrasing": "Landscape of statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pivot functions",
    "paraphrasing": "Functions for pivoting"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Test Statistics",
    "paraphrasing": "Statistics from testing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bayes classifier",
    "paraphrasing": "Bayes classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "vote population",
    "paraphrasing": "population voting"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Graphics encyclopedia",
    "paraphrasing": "Encyclopedia of graphics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Classifying spectra",
    "paraphrasing": "Classifying spectral data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Forecasting methods",
    "paraphrasing": "Methods for forecasting"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pairwise exclusions",
    "paraphrasing": "Exclusions, pairwise"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability inequalities",
    "paraphrasing": "Inequalities regarding probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Testing normality",
    "paraphrasing": "Testing if data is normal"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "probability question",
    "paraphrasing": "Question about probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bayesian estimators",
    "paraphrasing": "Bayesian estimation methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Correlation matrix",
    "paraphrasing": "Matrix of correlations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Distribution fitting",
    "paraphrasing": "Fitting distributions"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample weighting",
    "paraphrasing": "Weighting example"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Business forecasting",
    "paraphrasing": "Forecasting for business"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Restricted permutations",
    "paraphrasing": "Permutations restricted"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Structural shifts",
    "paraphrasing": "Changes in structure"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Averaging images",
    "paraphrasing": "Images averaging"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sequential testing",
    "paraphrasing": "Testing sequentially"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Online clustering",
    "paraphrasing": "Clustering online"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Marginalizing probability",
    "paraphrasing": "Probability of marginalization"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Analyze proportions",
    "paraphrasing": "Proportions analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interaction terms",
    "paraphrasing": "Terms for interaction"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Estimating prices",
    "paraphrasing": "Prices estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sufficient statistics",
    "paraphrasing": "Statistics are sufficient"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculate ratings",
    "paraphrasing": "Calculating ratings"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Significance tests",
    "paraphrasing": "Tests of significance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistical insignificance",
    "paraphrasing": "Lack of statistical significance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Hypothesis test",
    "paraphrasing": "Test hypothesis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression equation",
    "paraphrasing": "Equation for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Identifying outliers",
    "paraphrasing": "Finding outliers"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Clustering distributions",
    "paraphrasing": "Distributions of clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sufficient Statistic",
    "paraphrasing": "Sufficient statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Positive estimator",
    "paraphrasing": "Estimator is positive"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Kernel Selection",
    "paraphrasing": "Selecting a Kernel"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Simulating distributions",
    "paraphrasing": "Simulations of distributions"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Symmetrical regression",
    "paraphrasing": "Regression symmetry"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "correlation statistics",
    "paraphrasing": "statistics on correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Subsample bootstrapping",
    "paraphrasing": "Bootstrapping with subsampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Equivalent events",
    "paraphrasing": "Events that are equivalent"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Predictive Probabilities",
    "paraphrasing": "Probabilities that predict"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistical modelling",
    "paraphrasing": "Statistical modeling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Weak Convergence",
    "paraphrasing": "Convergence is weak"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Basic Probability",
    "paraphrasing": "Probability basics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Convergence problem",
    "paraphrasing": "Problem with convergence"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Optimization problem",
    "paraphrasing": "Problem with optimization"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Showing independence",
    "paraphrasing": "Displaying independence"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiple comparisons",
    "paraphrasing": "Comparisons of multiple types"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Conditional Expectation",
    "paraphrasing": "Expectation conditionally"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sampling Distribution",
    "paraphrasing": "Distribution sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample analysis",
    "paraphrasing": "Analysis sample"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "conditional mean",
    "paraphrasing": "mean, conditional"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Expectation notations",
    "paraphrasing": "Notations for expectations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Model comparison",
    "paraphrasing": "Comparing models"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Server Monitoring",
    "paraphrasing": "Monitoring the server"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Causation implication",
    "paraphrasing": "Implication of causation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Dirichlet posterior",
    "paraphrasing": "Dirichlet process posterior"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Reliable factors",
    "paraphrasing": "Factors that are reliable"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Random Investment",
    "paraphrasing": "Investment - Random"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Maximizing choice",
    "paraphrasing": "Maximizing options"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Expectation Subscript",
    "paraphrasing": "Expected Subscript"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Computing combinations",
    "paraphrasing": "Combinations in computing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Correlation analysis",
    "paraphrasing": "Analysis of correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Feature importance",
    "paraphrasing": "Importance of feature"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Categorical coefficients",
    "paraphrasing": "Coefficients by category"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Deletion residuals",
    "paraphrasing": "Residuals after deletion"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Subgroup analyses",
    "paraphrasing": "Analyses of subgroups"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "About Covariance",
    "paraphrasing": "Covariance information"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confidence interval",
    "paraphrasing": "Interval of confidence"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Distribution function",
    "paraphrasing": "Function distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Welch statistic",
    "paraphrasing": "Statistic by Welch"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Density Clustering",
    "paraphrasing": "Clustering by Density"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Assigning weights",
    "paraphrasing": "Weights assignment"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Scale parameter",
    "paraphrasing": "Parameter for scaling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Incidence density",
    "paraphrasing": "Density of incidents"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Explaining Variance",
    "paraphrasing": "Understanding Variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Credibility Intervals",
    "paraphrasing": "Intervals of credibility"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Partial correlation",
    "paraphrasing": "Correlation, partial"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Differential Entropy",
    "paraphrasing": "Entropy, Differential"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "sketch distribution",
    "paraphrasing": "distribution sketch"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Normal Distribution",
    "paraphrasing": "Distribution, Normal"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Distributed Median",
    "paraphrasing": "Median Calculation Across Distributed Systems"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Attitude scaling",
    "paraphrasing": "Scaling attitudes"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Ordered combinations",
    "paraphrasing": "Combinations, ordered"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Model Identification",
    "paraphrasing": "Identifying the Model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "census questionnaire",
    "paraphrasing": "questionnaire for the census"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Distribution help",
    "paraphrasing": "Help with distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiple Regression",
    "paraphrasing": "Regression, multiple"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Fisher information",
    "paraphrasing": "Information from Fisher"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Maximum Likelihood",
    "paraphrasing": "Maximum Likelihood Estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Randomization Tests",
    "paraphrasing": "Tests using randomization"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Repeated measures",
    "paraphrasing": "Measures repeated"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Estimation Technique",
    "paraphrasing": "Technique for estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Categorical model",
    "paraphrasing": "Model for categories"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interpreting graphs",
    "paraphrasing": "Graphs interpretation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Transforming variables",
    "paraphrasing": "Variables transformation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "HMM initialization",
    "paraphrasing": "Initialization of HMM"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confounding variables",
    "paraphrasing": "Variables that confound"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Divergence interpretation",
    "paraphrasing": "Interpreting divergence"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Matching curves",
    "paraphrasing": "Curves that match"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "LASSO Estimator",
    "paraphrasing": "LASSO Estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Hypothesis Testing",
    "paraphrasing": "Testing Hypotheses"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Classification rate",
    "paraphrasing": "Rate of classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Borrowing strength",
    "paraphrasing": "Strength borrowing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Combining covariances",
    "paraphrasing": "Covariances combined"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multidimensional scaling",
    "paraphrasing": "Multidimensional scaling techniques"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability distributions",
    "paraphrasing": "Distributions of probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Quantifying homogeneity",
    "paraphrasing": "Measuring homogeneity"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Covariance Matrices",
    "paraphrasing": "Covariance Matrix"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Point estimator",
    "paraphrasing": "Estimator point"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Comparing models",
    "paraphrasing": "Models compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Standardizing data",
    "paraphrasing": "Data standardization"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Share repurchase",
    "paraphrasing": "Repurchase of shares"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "variate transformation",
    "paraphrasing": "transformation of variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Median bootstrap",
    "paraphrasing": "Bootstrap median"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Quantifying heterogeneity",
    "paraphrasing": "Measuring heterogeneity"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sales forecasting",
    "paraphrasing": "Forecasting sales"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Averaging Correlations",
    "paraphrasing": "Correlations Averaging"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Independence test",
    "paraphrasing": "Test for independence"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pairwise comparisons",
    "paraphrasing": "Comparisons of pairs"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability Questions",
    "paraphrasing": "Questions about probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Random variables",
    "paraphrasing": "Variables, random"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Posterior density",
    "paraphrasing": "Density in the posterior"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Creating Correlations",
    "paraphrasing": "Correlations being created"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Outliers identification",
    "paraphrasing": "Identifying outliers"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Combining errors",
    "paraphrasing": "Errors combined"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Activation Functions",
    "paraphrasing": "Functions for activation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Parameter Estimates",
    "paraphrasing": "Estimates for parameters"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Questionnaire design",
    "paraphrasing": "Designing a questionnaire"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating percentiles",
    "paraphrasing": "Calculating percentile values"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Model Estimation",
    "paraphrasing": "Estimating the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample Balancing",
    "paraphrasing": "Balancing samples"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Comparing histograms",
    "paraphrasing": "Histograms compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Frequency Distribution",
    "paraphrasing": "Distribution Frequency"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression Predictions",
    "paraphrasing": "Predictions for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Spurious correlation",
    "paraphrasing": "A spurious correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Similarity algorithms",
    "paraphrasing": "Algorithms for measuring similarity"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating probability",
    "paraphrasing": "Probability calculation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Growth analysis",
    "paraphrasing": "Analysis of growth"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "simultaneous equations",
    "paraphrasing": "equations at the same time"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Compute probability",
    "paraphrasing": "Calculate probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Testing linearity",
    "paraphrasing": "Testing if linearity holds"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression methods",
    "paraphrasing": "Methods for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pearson correlation",
    "paraphrasing": "Correlation, Pearson"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Order Statistics",
    "paraphrasing": "Statistics on orders"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Propensity Score",
    "paraphrasing": "Propensity Scores"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability Calculation",
    "paraphrasing": "Calculating probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiple hypothesis",
    "paraphrasing": "Several hypotheses"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Cleaning corpus",
    "paraphrasing": "Corpus cleaning"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Posterior probability",
    "paraphrasing": "Probability after the data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multivariate regression",
    "paraphrasing": "Multivariate regression analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "experimental design",
    "paraphrasing": "design experiment"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interpolation problem",
    "paraphrasing": "Problem with interpolation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interview question",
    "paraphrasing": "Question from interview"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Likelihood clarification",
    "paraphrasing": "Clarification of likelihood"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Fitting distributions",
    "paraphrasing": "Distributions fitting"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Ordering ratios",
    "paraphrasing": "Ratios for ordering"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Correlation Method",
    "paraphrasing": "Method for correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "correlation coefficient",
    "paraphrasing": "coefficient correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Word association",
    "paraphrasing": "Association of words"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Parameter Estimation",
    "paraphrasing": "Estimating parameters"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistical Problem",
    "paraphrasing": "Problem with statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "detector confidence",
    "paraphrasing": "Confidence of detector"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Model specification",
    "paraphrasing": "Specification of the model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Lizards probability",
    "paraphrasing": "Probability of lizards"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pattern Clustering",
    "paraphrasing": "Clustering Patterns"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "multiple imputation",
    "paraphrasing": "imputation, multiple"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "moderation analysis",
    "paraphrasing": "analysis of moderation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Keyword clustering",
    "paraphrasing": "Clustering keywords"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Uniform updating",
    "paraphrasing": "Updating consistently"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "price prediction",
    "paraphrasing": "Predicting prices"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bayesian references",
    "paraphrasing": "References for Bayesian methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "recursive model",
    "paraphrasing": "model recursive"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Brisk algorithm",
    "paraphrasing": "Algorithm is quite fast"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Business Statistics",
    "paraphrasing": "Statistics for Business"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Survey Analysis",
    "paraphrasing": "Analysis of survey results"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Pooled variance",
    "paraphrasing": "Variance pooling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Keyword probabilities",
    "paraphrasing": "Probabilities of keywords"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Berry inversion",
    "paraphrasing": "Inversion of Berry"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Causal Analysis",
    "paraphrasing": "Analysis of causal factors"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample variance",
    "paraphrasing": "Variance sample"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression Terminology",
    "paraphrasing": "Terminology of regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability Distribution",
    "paraphrasing": "Distribution of probabilities"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Back Transformation",
    "paraphrasing": "Transformation Back"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Combining variables",
    "paraphrasing": "Variables combined"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Dependent variables",
    "paraphrasing": "Variables that depend on others"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Compare Frequencies",
    "paraphrasing": "Comparing frequencies"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Combinatorial Probability",
    "paraphrasing": "Probability, Combinatorial"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "sampling question",
    "paraphrasing": "Question about sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating Probability",
    "paraphrasing": "Probability Calculation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Discontinuity Regression",
    "paraphrasing": "Regression Discontinuity"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Simulating returns",
    "paraphrasing": "Returns simulation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Recursive System",
    "paraphrasing": "System recursion"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression clustering",
    "paraphrasing": "Clustering for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Efficient estimators",
    "paraphrasing": "Estimators that are efficient"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Coverage probability",
    "paraphrasing": "Probability of coverage"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Hierarchical classification",
    "paraphrasing": "Classification in a hierarchy"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression specification",
    "paraphrasing": "Specification for regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Clustering Variable",
    "paraphrasing": "Variable clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Clustering Techniques",
    "paraphrasing": "Techniques for Clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Channel capacity",
    "paraphrasing": "Capacity of channel"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Deviance Residuals",
    "paraphrasing": "Residual Deviations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Matrix decomposition",
    "paraphrasing": "Decomposition of matrices"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Variable Selection",
    "paraphrasing": "Selecting variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Piecewise regression",
    "paraphrasing": "Regression using piecewise functions"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Classification accuracy",
    "paraphrasing": "Accuracy of classification"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Comparing proportions",
    "paraphrasing": "Proportions comparison"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Dynamic Regression",
    "paraphrasing": "Regression, dynamic"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Estimating Equations",
    "paraphrasing": "Equations for estimation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Experiment design",
    "paraphrasing": "Design of experiment"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Random Variable",
    "paraphrasing": "Variable, Random"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sensors categorization",
    "paraphrasing": "Categorization of sensors"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Feature Selection",
    "paraphrasing": "Selecting features"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Covariance help",
    "paraphrasing": "Help with covariance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Simultaneous Probability",
    "paraphrasing": "Probability occurring at the same time"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sampling methods",
    "paraphrasing": "Methods for sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Poisson arrival",
    "paraphrasing": "Poisson arrivals"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Cluster analysis",
    "paraphrasing": "Analysis of clusters"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Data overlapping",
    "paraphrasing": "Overlapping data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Daily forecasting",
    "paraphrasing": "Forecasting daily"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Excluding factors",
    "paraphrasing": "Factors not included"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calendar Visualization",
    "paraphrasing": "Visualization of a calendar"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interval censoring",
    "paraphrasing": "Interval-censored data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Accelerometer normalization",
    "paraphrasing": "Normalization of accelerometer data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "statistical method",
    "paraphrasing": "statistical methods"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sampling probability",
    "paraphrasing": "Probability of sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Data separability",
    "paraphrasing": "Separating data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Significant difference",
    "paraphrasing": "Substantial difference"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Granger causality",
    "paraphrasing": "Causality using Granger"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Explaining away",
    "paraphrasing": "Explaining this"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression Analysis",
    "paraphrasing": "Analysis of regressions"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression problem",
    "paraphrasing": "Regression issue"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multivariate Interpolation",
    "paraphrasing": "Interpolation with multiple variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Probability exercise",
    "paraphrasing": "Exercise on probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Performance metric",
    "paraphrasing": "Metric for performance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Uncertainty analysis",
    "paraphrasing": "Analysis of uncertainty"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Outlier problems",
    "paraphrasing": "Problems with outliers"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Lagged Dependents",
    "paraphrasing": "Dependents with lag"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Incomplete questionnaires",
    "paraphrasing": "Questionnaires are not yet complete"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Neuroscience Equations",
    "paraphrasing": "Equations in Neuroscience"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "clustering accuracy",
    "paraphrasing": "Accuracy of clustering"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Log approximation",
    "paraphrasing": "Approximation of logs"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Optimal Allocation",
    "paraphrasing": "Best way to allocate resources"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Covariance estimation",
    "paraphrasing": "Estimating covariance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Threshold Models",
    "paraphrasing": "Models with thresholds"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "variable reduction",
    "paraphrasing": "reducing variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Geographic regression",
    "paraphrasing": "Regression based on geographic data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Walking recognition",
    "paraphrasing": "Recognition while walking"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Relative Confidence",
    "paraphrasing": "Confidence levels compared"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Significance factors",
    "paraphrasing": "Factors that are significant"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Naive forecasting",
    "paraphrasing": "Forecasting, naive"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Polynomial Kernel",
    "paraphrasing": "Kernel using polynomials"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Statistical tests",
    "paraphrasing": "Tests for statistics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interpreting orthogonality",
    "paraphrasing": "Orthogonality interpretation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Optional Features",
    "paraphrasing": "Features that are optional"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Weighted regression",
    "paraphrasing": "Weighted regression analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Weka clustering",
    "paraphrasing": "Weka clustering issues"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Comparing polynomials",
    "paraphrasing": "Polynomial comparison"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Martingale residuals",
    "paraphrasing": "Martingale's residuals"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Measure precision",
    "paraphrasing": "Precision measurement"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Normalized likelihoods",
    "paraphrasing": "Likelihoods, normalized"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Data transformation",
    "paraphrasing": "Transforming data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "conditional expectations",
    "paraphrasing": "expectations, conditional"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Random Sampling",
    "paraphrasing": "Sampling at random"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiple testing",
    "paraphrasing": "Testing multiple scenarios"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Unknown formula",
    "paraphrasing": "Formula not identified"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Charles Chandler",
    "paraphrasing": "Chandler, Charles"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Lucas Bishop",
    "paraphrasing": "Bishop, Lucas"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Donald Gill",
    "paraphrasing": "Gill, Donald"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Tabitha Smith",
    "paraphrasing": "Smith, Tabitha"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Kevin Sidney",
    "paraphrasing": "Sidney, Kevin"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Christopher Summers",
    "paraphrasing": "Summers, Christopher"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Ronald Raymond",
    "paraphrasing": "Raymond, Ronald"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Henry Hall",
    "paraphrasing": "Hall, Henry"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Jonathan Hart",
    "paraphrasing": "Hart, Jonathan"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Christopher Bradley",
    "paraphrasing": "Bradley, Christopher"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Kevin Sydney",
    "paraphrasing": "Sydney, Kevin"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Robert Parr",
    "paraphrasing": "Bob Parr"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "James Arthur",
    "paraphrasing": "Arthur, James"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Kurt Wagner",
    "paraphrasing": "Wagner, Kurt"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Maxwell Jordan",
    "paraphrasing": "Jordan, Maxwell"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Douglas Scott",
    "paraphrasing": "Scott, Douglas"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Anna Marie",
    "paraphrasing": "Marie, Anna"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Everett Thomas",
    "paraphrasing": "Thomas, Everett"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "symptoms",
    "original_value": "finger ulcer",
    "paraphrasing": "ulcer on finger"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "symptoms",
    "original_value": "brain infarction",
    "paraphrasing": "Stroke due to brain infarction"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "symptoms",
    "original_value": "multiple thrombosis",
    "paraphrasing": "several thromboses"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "examination",
    "column": "symptoms",
    "original_value": "leg ulcer",
    "paraphrasing": "ulcer on leg"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Accelerated Healing",
    "paraphrasing": "Rapid recovery"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Dimensional Awareness",
    "paraphrasing": "Awareness of dimensions"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Cold Resistance",
    "paraphrasing": "Resistance to cold"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Absorption",
    "paraphrasing": "Absorbing energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Danger Sense",
    "paraphrasing": "Sense of danger"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Underwater breathing",
    "paraphrasing": "Breathing underwater"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Weapons Master",
    "paraphrasing": "Master of weapons"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Augmentation",
    "paraphrasing": "Augmentation of power"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Animal Attributes",
    "paraphrasing": "Attributes of animals"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Longevity",
    "paraphrasing": "Extended lifespan"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Super Strength",
    "paraphrasing": "Strength, super"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Armor",
    "paraphrasing": "Armor made of energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Blasts",
    "paraphrasing": "Blasts of energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Duplication",
    "paraphrasing": "Ability to duplicate"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Size Changing",
    "paraphrasing": "Changing size"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Density Control",
    "paraphrasing": "Control over density"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Astral Travel",
    "paraphrasing": "Travel astrally"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Audio Control",
    "paraphrasing": "Control of sound"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Super Speed",
    "paraphrasing": "Enhanced Speed"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Death Touch",
    "paraphrasing": "Touch of Death"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Senses",
    "paraphrasing": "Heightened senses"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Beams",
    "paraphrasing": "Beams of energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Dimensional Travel",
    "paraphrasing": "Travel between dimensions"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Sense",
    "paraphrasing": "Sense of power"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Element Control",
    "paraphrasing": "Control of elements"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Astral Projection",
    "paraphrasing": "Projecting astrally"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Electrical Transport",
    "paraphrasing": "Transport via electricity"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Fire Control",
    "paraphrasing": "Control of fire"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Memory",
    "paraphrasing": "Improved memory"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Constructs",
    "paraphrasing": "Constructs of energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Force Fields",
    "paraphrasing": "Fields of force"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Nullifier",
    "paraphrasing": "Nullifies powers"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Radiation Control",
    "paraphrasing": "Control of radiation"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Substance Secretion",
    "paraphrasing": "Secretion of substances"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Photographic Reflexes",
    "paraphrasing": "Reflexes, photographic"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Seismic Power",
    "paraphrasing": "Power to create seismic waves"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Mind Control",
    "paraphrasing": "Control of minds"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Fire Resistance",
    "paraphrasing": "Resistance to fire"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Absorption",
    "paraphrasing": "Absorption of power"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Hearing",
    "paraphrasing": "Hearing is enhanced"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Animal Control",
    "paraphrasing": "Ability to control animals"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Natural Armor",
    "paraphrasing": "Natural protection"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Sight",
    "paraphrasing": "Improved vision"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Molecular Manipulation",
    "paraphrasing": "Manipulation of molecules"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Heat Generation",
    "paraphrasing": "Generating heat"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Suit",
    "paraphrasing": "Suit with powers"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Mind Blast",
    "paraphrasing": "Blast with the mind"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Probability Manipulation",
    "paraphrasing": "Manipulating probabilities"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Gravity Control",
    "paraphrasing": "Control of gravity"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Light Control",
    "paraphrasing": "Control of light"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Manipulation",
    "paraphrasing": "Manipulation of energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Heat Resistance",
    "paraphrasing": "Resistance to heat"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Natural Weapons",
    "paraphrasing": "Weapons from nature"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Time Travel",
    "paraphrasing": "Travel through time"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Smell",
    "paraphrasing": "Stronger sense of smell"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Hair Manipulation",
    "paraphrasing": "Control of hair"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Changing Armor",
    "paraphrasing": "Armor changing"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Power Cosmic",
    "paraphrasing": "Cosmic Power"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Water Control",
    "paraphrasing": "Control of water"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Radiation Immunity",
    "paraphrasing": "Immunity to radiation"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Spatial Awareness",
    "paraphrasing": "Awareness of surroundings"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Energy Resistance",
    "paraphrasing": "Resistance to energy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Telepathy Resistance",
    "paraphrasing": "Resistance to telepathy"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Portal Creation",
    "paraphrasing": "Creating portals"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Plant Control",
    "paraphrasing": "Control of plants"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Sonic Scream",
    "paraphrasing": "Scream with sonic force"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Time Manipulation",
    "paraphrasing": "Manipulation of time"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Enhanced Touch",
    "paraphrasing": "Touch enhanced"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Magic Resistance",
    "paraphrasing": "Resistance to magic"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Radiation Absorption",
    "paraphrasing": "Absorbing radiation"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Intuitive aptitude",
    "paraphrasing": "A natural ability to understand things"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Wind Control",
    "paraphrasing": "Control of the wind"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Super Breath",
    "paraphrasing": "Enhanced breathing capabilities"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Matter Absorption",
    "paraphrasing": "Absorbing matter"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "The Force",
    "paraphrasing": "Force"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Radar Sense",
    "paraphrasing": "Sense of radar"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Weather Control",
    "paraphrasing": "Control the weather"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Web Creation",
    "paraphrasing": "Creating webs"
  },
  {
    "database_id": "superhero",
    "table": "superpower",
    "column": "power_name",
    "original_value": "Reality Warping",
    "paraphrasing": "Warping reality"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "patient",
    "column": "diagnosis",
    "original_value": "relapsing",
    "paraphrasing": "recurrent episodes"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "patient",
    "column": "diagnosis",
    "original_value": "seronegative RA",
    "paraphrasing": "RA, seronegative"
  },
  {
    "database_id": "thrombosis_prediction",
    "table": "patient",
    "column": "diagnosis",
    "original_value": "Adult STILL",
    "paraphrasing": "Adult-onset Still's disease"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "CAN",
    "paraphrasing": "Canada"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "COL",
    "paraphrasing": "Colombia"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "LUX",
    "paraphrasing": "Luxembourg"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "BRA",
    "paraphrasing": "Brazil"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "ECU",
    "paraphrasing": "Ecuador"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "MAR",
    "paraphrasing": "Morocco"
  },
  {
    "database_id": "wta_1",
    "table": "players",
    "column": "country_code",
    "original_value": "LIE",
    "paraphrasing": "Liechtenstein"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Alameda Unified",
    "paraphrasing": "Alameda Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Berkeley Unified",
    "paraphrasing": "Berkeley Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Emery Unified",
    "paraphrasing": "Emery Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Fremont Unified",
    "paraphrasing": "Fremont Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Hayward Unified",
    "paraphrasing": "Hayward Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Newark Unified",
    "paraphrasing": "Newark Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Oakland Unified",
    "paraphrasing": "Oakland Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Dublin Unified",
    "paraphrasing": "Dublin Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Jackson Unified",
    "paraphrasing": "Jackson Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Chico Unified",
    "paraphrasing": "Chico Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Durham Unified",
    "paraphrasing": "Durham Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Maxwell Unified",
    "paraphrasing": "Maxwell Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Williams Unified",
    "paraphrasing": "Williams Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Antioch Unified",
    "paraphrasing": "Antioch Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Martinez Unified",
    "paraphrasing": "Martinez Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Clovis Unified",
    "paraphrasing": "Clovis Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Fowler Unified",
    "paraphrasing": "Fowler Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Fresno Unified",
    "paraphrasing": "Fresno Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Orange Center",
    "paraphrasing": "Orange Center Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Sanger Unified",
    "paraphrasing": "Sanger Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Selma Unified",
    "paraphrasing": "Selma Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Central Unified",
    "paraphrasing": "Central Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Kerman Unified",
    "paraphrasing": "Kerman Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Washington Unified",
    "paraphrasing": "Washington Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Willows Unified",
    "paraphrasing": "Willows Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Hamilton Unified",
    "paraphrasing": "Hamilton Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Peninsula Union",
    "paraphrasing": "Peninsula Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Imperial Unified",
    "paraphrasing": "Imperial Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Bishop Unified",
    "paraphrasing": "Bishop Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Bakersfield City",
    "paraphrasing": "Bakersfield City District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Greenfield Union",
    "paraphrasing": "Greenfield Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Kern High",
    "paraphrasing": "Kern High School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lakeside Union",
    "paraphrasing": "Lakeside Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "McFarland Unified",
    "paraphrasing": "McFarland Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Mojave Unified",
    "paraphrasing": "Mojave Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Standard Elementary",
    "paraphrasing": "Standard Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Taft City",
    "paraphrasing": "Taft City Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Arcadia Unified",
    "paraphrasing": "Arcadia Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Bellflower Unified",
    "paraphrasing": "Bellflower Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Bonita Unified",
    "paraphrasing": "Bonita Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Burbank Unified",
    "paraphrasing": "Burbank School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Glendale Unified",
    "paraphrasing": "Glendale Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Inglewood Unified",
    "paraphrasing": "Inglewood Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lowell Joint",
    "paraphrasing": "Lowell Joint School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Monrovia Unified",
    "paraphrasing": "Monrovia Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Paramount Unified",
    "paraphrasing": "Paramount Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Pasadena Unified",
    "paraphrasing": "Pasadena Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Pomona Unified",
    "paraphrasing": "Pomona Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Torrance Unified",
    "paraphrasing": "Torrance Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Compton Unified",
    "paraphrasing": "Compton Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Rowland Unified",
    "paraphrasing": "Rowland Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Alhambra Unified",
    "paraphrasing": "Alhambra Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Yosemite Unified",
    "paraphrasing": "Yosemite Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Shoreline Unified",
    "paraphrasing": "Shoreline Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Mendocino Unified",
    "paraphrasing": "Mendocino Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Delhi Elementary",
    "paraphrasing": "Delhi Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Livingston Union",
    "paraphrasing": "Livingston Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Weaver Union",
    "paraphrasing": "Weaver Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Delhi Unified",
    "paraphrasing": "Delhi Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Bridgeport Elementary",
    "paraphrasing": "Bridgeport Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Carmel Unified",
    "paraphrasing": "Carmel Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Pacific Elementary",
    "paraphrasing": "Pacific Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Gonzales Unified",
    "paraphrasing": "Gonzales Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Anaheim Elementary",
    "paraphrasing": "Anaheim Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Capistrano Unified",
    "paraphrasing": "Capistrano Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Centralia Elementary",
    "paraphrasing": "Centralia Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Fullerton Elementary",
    "paraphrasing": "Fullerton Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Ocean View",
    "paraphrasing": "Ocean View School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Orange Unified",
    "paraphrasing": "Orange Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Irvine Unified",
    "paraphrasing": "Irvine Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Colfax Elementary",
    "paraphrasing": "Colfax Elementary School"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Eureka Union",
    "paraphrasing": "Eureka Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Banning Unified",
    "paraphrasing": "Banning Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Beaumont Unified",
    "paraphrasing": "Beaumont Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Riverside Unified",
    "paraphrasing": "Riverside Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Jefferson Elementary",
    "paraphrasing": "Jefferson Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Needles Unified",
    "paraphrasing": "Needles Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Rialto Unified",
    "paraphrasing": "Rialto Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Victor Elementary",
    "paraphrasing": "Victor Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Upland Unified",
    "paraphrasing": "Upland Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Cardiff Elementary",
    "paraphrasing": "Cardiff School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Coronado Unified",
    "paraphrasing": "Coronado Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Escondido Union",
    "paraphrasing": "Escondido Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "National Elementary",
    "paraphrasing": "National Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Vista Unified",
    "paraphrasing": "Vista Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Carlsbad Unified",
    "paraphrasing": "Carlsbad Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Oceanside Unified",
    "paraphrasing": "Oceanside Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Warner Unified",
    "paraphrasing": "Warner Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lincoln Unified",
    "paraphrasing": "Lincoln Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Linden Unified",
    "paraphrasing": "Linden Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lodi Unified",
    "paraphrasing": "Lodi Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Ripon Unified",
    "paraphrasing": "Ripon Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Stockton Unified",
    "paraphrasing": "Stockton Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Phillips Elementary",
    "paraphrasing": "Phillips Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Coast Unified",
    "paraphrasing": "Coast Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "College Elementary",
    "paraphrasing": "College Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Campbell Union",
    "paraphrasing": "Campbell Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Evergreen Elementary",
    "paraphrasing": "Evergreen Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lakeside Joint",
    "paraphrasing": "Lakeside Joint District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Luther Burbank",
    "paraphrasing": "Luther Burbank School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Union Elementary",
    "paraphrasing": "Union Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Metro Education",
    "paraphrasing": "Metro Education District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Buckeye Elementary",
    "paraphrasing": "Buckeye Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Columbia Elementary",
    "paraphrasing": "Columbia Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Enterprise Elementary",
    "paraphrasing": "Enterprise Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Junction Elementary",
    "paraphrasing": "Junction Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Gateway Unified",
    "paraphrasing": "Gateway Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Dixon Unified",
    "paraphrasing": "Dixon Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Travis Unified",
    "paraphrasing": "Travis Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Windsor Unified",
    "paraphrasing": "Windsor Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Ceres Unified",
    "paraphrasing": "Ceres Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Riverbank Elementary",
    "paraphrasing": "Riverbank Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Riverbank Unified",
    "paraphrasing": "Riverbank Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Waterford Unified",
    "paraphrasing": "Waterford Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Browns Elementary",
    "paraphrasing": "Browns Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Evergreen Union",
    "paraphrasing": "Evergreen Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Lindsay Unified",
    "paraphrasing": "Lindsay Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Exeter Unified",
    "paraphrasing": "Exeter Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Columbia Union",
    "paraphrasing": "Columbia Union School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Jamestown Elementary",
    "paraphrasing": "Jamestown Elementary School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Twain Harte",
    "paraphrasing": "Twain Harte School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Fillmore Unified",
    "paraphrasing": "Fillmore Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Ventura Unified",
    "paraphrasing": "Ventura Unified School District"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Esparto Unified",
    "paraphrasing": "Esparto Unified School District"
  },
  {
    "database_id": "car_1",
    "table": "continents",
    "column": "continent",
    "original_value": "america",
    "paraphrasing": "North America"
  },
  {
    "database_id": "car_1",
    "table": "countries",
    "column": "countryname",
    "original_value": "korea",
    "paraphrasing": "South Korea"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "fundingtype",
    "original_value": "Directly funded",
    "paraphrasing": "Funded directly"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "fundingtype",
    "original_value": "Locally funded",
    "paraphrasing": "Funded locally"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Contaminated Bond",
    "paraphrasing": "Bond, contaminated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Academy Researchers",
    "paraphrasing": "Researchers from the Academy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Air Elemental",
    "paraphrasing": "Elemental Air"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Remove Soul",
    "paraphrasing": "Take out Soul"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sage Owl",
    "paraphrasing": "Owl Sage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Consume Spirit",
    "paraphrasing": "Consume a Spirit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Drain",
    "paraphrasing": "Drain Essence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fugitive Wizard",
    "paraphrasing": "Wizard, the Fugitive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hate Weaver",
    "paraphrasing": "Hateweaver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lightning Elemental",
    "paraphrasing": "Elemental Lightning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Canopy Spider",
    "paraphrasing": "Spider Canopy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Giant Spider",
    "paraphrasing": "Large Spider"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grizzly Bears",
    "paraphrasing": "Bears, Grizzly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Joiner Adept",
    "paraphrasing": "Adept, Joiner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Legacy Weapon",
    "paraphrasing": "Weapon from the Legacy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Telling Time",
    "paraphrasing": "Telling the Time"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Treasure Hunter",
    "paraphrasing": "Treasure Hunter card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tundra Wolves",
    "paraphrasing": "Wolves of the Tundra"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underworld Dreams",
    "paraphrasing": "Dreams of the Underworld"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unholy Strength",
    "paraphrasing": "Unholy power"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Bats",
    "paraphrasing": "Bats, Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stronghold Discipline",
    "paraphrasing": "Stronghold, Discipline"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Youthful Knight",
    "paraphrasing": "Knight, Youthful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steadfast Guard",
    "paraphrasing": "Steadfastness Guard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animate Wall",
    "paraphrasing": "Wall Animate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Consecrate Land",
    "paraphrasing": "Consecrated Land"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Ward",
    "paraphrasing": "Ward against Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Healing Salve",
    "paraphrasing": "Salve for healing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reverse Damage",
    "paraphrasing": "Damage Reversal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Savannah Lions",
    "paraphrasing": "Lions of Savannah"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Bodyguard",
    "paraphrasing": "Bodyguard, Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animate Artifact",
    "paraphrasing": "Artifact that animates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Copy Artifact",
    "paraphrasing": "Artifact Copy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Magical Hack",
    "paraphrasing": "Hack, Magical"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Phantom Monster",
    "paraphrasing": "Monster Phantom"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pirate Ship",
    "paraphrasing": "Ship for Pirates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steal Artifact",
    "paraphrasing": "Take Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Water Elemental",
    "paraphrasing": "Elemental Water"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Demonic Attorney",
    "paraphrasing": "Demonic Lawyer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "False Orders",
    "paraphrasing": "Orders that are false"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Instill Energy",
    "paraphrasing": "Energy Instill"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Mammoth",
    "paraphrasing": "Mammoth War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Copper Tablet",
    "paraphrasing": "Tablet of Copper"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusionary Mask",
    "paraphrasing": "Mask of Illusion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wooden Sphere",
    "paraphrasing": "Sphere of Wood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Boon Reflection",
    "paraphrasing": "Boon's Reflection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crib Swap",
    "paraphrasing": "Swap Crib"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fencing Ace",
    "paraphrasing": "Ace of Fencing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Land Tax",
    "paraphrasing": "Tax on Land"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Revoke Existence",
    "paraphrasing": "Revoke this card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Apprentice Wizard",
    "paraphrasing": "Wizard Apprentice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corridor Monitor",
    "paraphrasing": "Monitor of the Corridor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Thought Reflection",
    "paraphrasing": "Reflection Thought"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Costly Plunder",
    "paraphrasing": "Plunder, Costly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Supernatural Stamina",
    "paraphrasing": "Stamina, Supernatural"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wound Reflection",
    "paraphrasing": "Reflection Wound"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bloodshot Trainee",
    "paraphrasing": "Trainee, Bloodshot"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rage Reflection",
    "paraphrasing": "Reflection of Rage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rolling Earthquake",
    "paraphrasing": "Earthquake, Rolling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crop Rotation",
    "paraphrasing": "Rotation of crops"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Greater Good",
    "paraphrasing": "The Greater Good"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Explorer",
    "paraphrasing": "Explorer, Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hidden Stockpile",
    "paraphrasing": "Stockpile, hidden"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Weapons Trainer",
    "paraphrasing": "Trainer, Weapons"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Clone Shell",
    "paraphrasing": "Shell Clone"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expedition Map",
    "paraphrasing": "Map for Expedition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Golem Artisan",
    "paraphrasing": "Artisan Golem"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "High Market",
    "paraphrasing": "High card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reverse Polarity",
    "paraphrasing": "Polarity Reverse"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Erg Raiders",
    "paraphrasing": "Erg Raider cards"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sorceress Queen",
    "paraphrasing": "Queen Sorceress"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Divine Transformation",
    "paraphrasing": "Transformation, Divine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fortified Area",
    "paraphrasing": "Area that is fortified"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Giant Strength",
    "paraphrasing": "Strength, Giant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bronze Tablet",
    "paraphrasing": "Tablet of Bronze"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Armed Response",
    "paraphrasing": "Response to Attack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disruption Aura",
    "paraphrasing": "Disruption's Aura"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Thought Courier",
    "paraphrasing": "Thought-Kourier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ferocious Charge",
    "paraphrasing": "Charge, Ferocious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gemstone Array",
    "paraphrasing": "Array of Gemstones"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Infused Arrows",
    "paraphrasing": "Arrows, Infused"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Possessed Portal",
    "paraphrasing": "Portal, Possessed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blessed Wine",
    "paraphrasing": "Wine, Blessed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Labyrinth Minotaur",
    "paraphrasing": "Minotaur of the Labyrinth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Memory Lapse",
    "paraphrasing": "Lapse of Memory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reef Pirates",
    "paraphrasing": "Pirates of the Reef"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Wretched",
    "paraphrasing": "Wretched"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cat Warriors",
    "paraphrasing": "Warriors of Cats"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Craw Giant",
    "paraphrasing": "Giant Craw"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wolverine Pack",
    "paraphrasing": "Wolverine's Pack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serpent Generator",
    "paraphrasing": "Generator Serpent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Infantry Veteran",
    "paraphrasing": "Veteran Infantryman"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Longbow Archer",
    "paraphrasing": "Archer, Longbow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pearl Dragon",
    "paraphrasing": "Dragon Pearl"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Resistance Fighter",
    "paraphrasing": "Fighter of the Resistance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Standing Troops",
    "paraphrasing": "Troops standing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Staunch Defenders",
    "paraphrasing": "Defenders, Staunch"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Painful Memories",
    "paraphrasing": "Memories that cause pain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unseen Walker",
    "paraphrasing": "Walker, Unseen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charcoal Diamond",
    "paraphrasing": "Diamond of Charcoal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fire Diamond",
    "paraphrasing": "Diamond of Fire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lead Golem",
    "paraphrasing": "Golem, Lead"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Marble Diamond",
    "paraphrasing": "Diamond Marble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Moss Diamond",
    "paraphrasing": "Diamond Moss"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blessed Reversal",
    "paraphrasing": "Reversed Blessing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crossbow Infantry",
    "paraphrasing": "Infantry with Crossbows"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elite Archers",
    "paraphrasing": "Archers, Elite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Intrepid Hero",
    "paraphrasing": "Hero, Intrepid"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seasoned Marshal",
    "paraphrasing": "Marshal with experience"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Arcane Laboratory",
    "paraphrasing": "Arcane Lab"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fleeting Image",
    "paraphrasing": "Image, Fleeting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Monstrous Growth",
    "paraphrasing": "Growth, Monstrous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Thorn Elemental",
    "paraphrasing": "Elemental Thorn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pit Trap",
    "paraphrasing": "Pitfall Trap"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Master Decoy",
    "paraphrasing": "Decoy Master"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flash Counter",
    "paraphrasing": "Counter Flash"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Intruder Alarm",
    "paraphrasing": "Alarm Intruder"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Merchant Scroll",
    "paraphrasing": "Scroll of the Merchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sever Soul",
    "paraphrasing": "Soul Sever"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Emperor Crocodile",
    "paraphrasing": "Crocodile Emperor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Living Terrain",
    "paraphrasing": "Terrain, Living"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Brass Herald",
    "paraphrasing": "Herald Brass"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Foot Soldiers",
    "paraphrasing": "Soldiers, Foot"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pegasus Charger",
    "paraphrasing": "Pegasus, Charger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Cavalier",
    "paraphrasing": "Cavalier, Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Imaginary Pet",
    "paraphrasing": "A fictional pet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Griffin Protector",
    "paraphrasing": "Protector Griffin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Accumulated Knowledge",
    "paraphrasing": "Knowledge accumulated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Retraction Helix",
    "paraphrasing": "Retraction of Helix"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Returned Phalanx",
    "paraphrasing": "Phalanx Returned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stampede Driver",
    "paraphrasing": "Driver Stampede"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Modification",
    "paraphrasing": "Modification of Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aether Inspector",
    "paraphrasing": "Inspector Aether"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bastion Enforcer",
    "paraphrasing": "Bastion, Enforcer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Restoration Specialist",
    "paraphrasing": "Specialist in Restoration"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Efficient Construction",
    "paraphrasing": "Construction, Efficient"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mechanized Production",
    "paraphrasing": "Production, Mechanized"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reverse Engineer",
    "paraphrasing": "Engineer in Reverse"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ironclad Revolutionary",
    "paraphrasing": "Revolutionary Ironclad"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Resourceful Return",
    "paraphrasing": "Return of the Resourceful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Destructive Tampering",
    "paraphrasing": "Tampering that destroys"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enraged Giant",
    "paraphrasing": "Giant, Enraged"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frontline Rebel",
    "paraphrasing": "Rebel Frontline"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scrapper Champion",
    "paraphrasing": "Scrapper, Champion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Siege Modification",
    "paraphrasing": "Modification for Siege"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Prey Upon",
    "paraphrasing": "Prey on"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Augmenting Automaton",
    "paraphrasing": "Automaton that augments"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Foundry Assembler",
    "paraphrasing": "Foundry Assembly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inspiring Statuary",
    "paraphrasing": "Statuary that inspires"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Prizefighter Construct",
    "paraphrasing": "Prizefighter card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Renegade Map",
    "paraphrasing": "Renegade's Map"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Watchful Automaton",
    "paraphrasing": "Automaton, Watchful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lightning Strike",
    "paraphrasing": "Strike of Lightning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Compulsory Rest",
    "paraphrasing": "Required Break"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fan Bearer",
    "paraphrasing": "Bearer Fan"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "As Foretold",
    "paraphrasing": "As it was predicted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Compelling Argument",
    "paraphrasing": "A Compelling Argument"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Labyrinth Guardian",
    "paraphrasing": "Labyrinth's Guardian"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lay Claim",
    "paraphrasing": "Claim a card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Final Reward",
    "paraphrasing": "Reward at the end"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ruthless Sniper",
    "paraphrasing": "Sniper, Ruthless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Brute Strength",
    "paraphrasing": "Strength, Brute"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deem Worthy",
    "paraphrasing": "Deem it worthy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harsh Mentor",
    "paraphrasing": "Mentor, Harsh"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Violent Impact",
    "paraphrasing": "Impact, Violent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shed Weakness",
    "paraphrasing": "Weakness to shed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Irrigated Farmland",
    "paraphrasing": "Farmland, irrigated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stone Quarry",
    "paraphrasing": "Quarry of Stone"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unconventional Tactics",
    "paraphrasing": "Tactics that are unconventional"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Guide",
    "paraphrasing": "Guide, Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Strategic Planning",
    "paraphrasing": "Planning strategically"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Firebrand Archer",
    "paraphrasing": "Archer, Firebrand"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Open Fire",
    "paraphrasing": "Fire, Open"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Puncturing Blow",
    "paraphrasing": "Blow that punctures"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collected Company",
    "paraphrasing": "Company Collected"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pride Sovereign",
    "paraphrasing": "Sovereign Pride"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirage Mirror",
    "paraphrasing": "Mirror Mirage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gather Specimens",
    "paraphrasing": "Collect samples"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Memory Erosion",
    "paraphrasing": "Erosion of Memory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Skill Borrower",
    "paraphrasing": "Borrowing Skill"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Puppet Conjurer",
    "paraphrasing": "Conjurer Puppet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Incurable Ogre",
    "paraphrasing": "Ogre, Incurable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Predator Dragon",
    "paraphrasing": "Dragon Predator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Court Archers",
    "paraphrasing": "Archers Court"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lush Growth",
    "paraphrasing": "Abundant vegetation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hindering Light",
    "paraphrasing": "Light, Hindering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sigil Blessing",
    "paraphrasing": "Sigil's Blessing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tower Gargoyle",
    "paraphrasing": "Gargoyle Tower"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seasoned Tactician",
    "paraphrasing": "A skilled strategist"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Carrier Pigeons",
    "paraphrasing": "Pigeons Carrier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Awesome Presence",
    "paraphrasing": "Presence, Awesome"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fevered Strength",
    "paraphrasing": "Strength, Fevered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Misinformation",
    "paraphrasing": "False information"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Swamp Mosquito",
    "paraphrasing": "Mosquito from the Swamp"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Spark",
    "paraphrasing": "Death's Spark"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enslaved Scout",
    "paraphrasing": "Scout, Enslaved"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deadly Insect",
    "paraphrasing": "Dangerous Bug"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Impassioned Orator",
    "paraphrasing": "Orator, Impassioned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inspiring Commander",
    "paraphrasing": "Inspiring, Commander"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiritual Guardian",
    "paraphrasing": "Guardian Spiritual"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tactical Advantage",
    "paraphrasing": "Advantage, Tactical"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overflowing Insight",
    "paraphrasing": "Insight, overflowing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sworn Guardian",
    "paraphrasing": "Guardian, Sworn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cruel Cut",
    "paraphrasing": "Cut, Cruel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sanitarium Skeleton",
    "paraphrasing": "Skeleton from Sanitarium"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Skeleton Archer",
    "paraphrasing": "Archer Skeleton"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unlikely Aid",
    "paraphrasing": "Aid that is unlikely"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Opportunist",
    "paraphrasing": "Opportunist Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Burn Bright",
    "paraphrasing": "Bright Burn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nest Robber",
    "paraphrasing": "Robber Nest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rabid Bite",
    "paraphrasing": "Bite, Rabid"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sentinel Spider",
    "paraphrasing": "Spider Sentinel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Titanic Growth",
    "paraphrasing": "Growth of the Titanic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Diversionary Tactics",
    "paraphrasing": "Tactics to divert attention"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Evasive Action",
    "paraphrasing": "Evasive maneuver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wild Research",
    "paraphrasing": "Research Wild"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aether Mutation",
    "paraphrasing": "Mutation of Aether"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Consume Strength",
    "paraphrasing": "Strength Consumption"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Guided Passage",
    "paraphrasing": "Passage with guidance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Minotaur Illusionist",
    "paraphrasing": "Illusionist Minotaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overgrown Estate",
    "paraphrasing": "Estate, Overgrown"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Colossal Might",
    "paraphrasing": "Might, Colossal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Predatory Advantage",
    "paraphrasing": "Advantage, Predatory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Violent Outburst",
    "paraphrasing": "Outburst, Violent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Captured Sunlight",
    "paraphrasing": "Sunlight Captured"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sigil Captain",
    "paraphrasing": "Sigil's Captain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spellbound Dragon",
    "paraphrasing": "Dragon, Spellbound"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stun Sniper",
    "paraphrasing": "Stunner Sniper"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Messenger Falcons",
    "paraphrasing": "Falcons Messenger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Extractor Demon",
    "paraphrasing": "Demon Extractor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Infectious Horror",
    "paraphrasing": "Horror, Infectious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inferno Trap",
    "paraphrasing": "Trap, Inferno"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forgotten Ancient",
    "paraphrasing": "Ancient Forgotten"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Moorish Cavalry",
    "paraphrasing": "Cavalry of Moorish origin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Elephant",
    "paraphrasing": "Elephant of War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Merchant Ship",
    "paraphrasing": "Ship belonging to a merchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Goblin Mutant",
    "paraphrasing": "Mutant Goblin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serrated Arrows",
    "paraphrasing": "Arrows, Serrated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Artifact Ward",
    "paraphrasing": "Ward, Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Power Artifact",
    "paraphrasing": "Artifact of Power"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Transmute Artifact",
    "paraphrasing": "Artifact Transmute"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Artifact Possession",
    "paraphrasing": "Possession of Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Favorable Winds",
    "paraphrasing": "Winds are favorable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fleeting Distraction",
    "paraphrasing": "A momentary distraction"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Second Guess",
    "paraphrasing": "Guess the second card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stern Mentor",
    "paraphrasing": "Mentor Stern"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stolen Goods",
    "paraphrasing": "Goods that were stolen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Wind",
    "paraphrasing": "Deathwind"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Renegade Demon",
    "paraphrasing": "Demon Renegade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dangerous Wager",
    "paraphrasing": "Risky Bet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dual Casting",
    "paraphrasing": "Casting, Dual"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Malicious Intent",
    "paraphrasing": "Intent, Malicious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vigilante Justice",
    "paraphrasing": "Justice, Vigilante"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Abundant Growth",
    "paraphrasing": "Growth is abundant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bower Passage",
    "paraphrasing": "Passage Bower"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Joint Assault",
    "paraphrasing": "Assault Joint"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Terrifying Presence",
    "paraphrasing": "Presence, Terrifying"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Haunted Guardian",
    "paraphrasing": "Guardian, Haunted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blaring Recruiter",
    "paraphrasing": "Recruiter, Blaring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Proud Mentor",
    "paraphrasing": "Mentor, Proud"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Game Plan",
    "paraphrasing": "Plan for the game"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fan Favorite",
    "paraphrasing": "A popular card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stunning Reversal",
    "paraphrasing": "Reversal, Stunning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cheering Fanatic",
    "paraphrasing": "Fanatic who cheers"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stadium Vendors",
    "paraphrasing": "Vendors at the Stadium"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stolen Strategy",
    "paraphrasing": "Strategy that was stolen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Combo Attack",
    "paraphrasing": "Attack Combo"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Decorated Champion",
    "paraphrasing": "Champion, Decorated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Generous Patron",
    "paraphrasing": "A Generous Patron"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Luxury Suite",
    "paraphrasing": "Suite, Luxury"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grotesque Mutation",
    "paraphrasing": "Mutation, Grotesque"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Slum Reaper",
    "paraphrasing": "Slum's Reaper"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battle Rampart",
    "paraphrasing": "Rampart Battle"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unflinching Courage",
    "paraphrasing": "Courage, unflinching"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ruin Processor",
    "paraphrasing": "Processor Ruin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Courier Griffin",
    "paraphrasing": "Griffin Courier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fortified Rampart",
    "paraphrasing": "Rampart, Fortified"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inspired Charge",
    "paraphrasing": "Charge, Inspired"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Adverse Conditions",
    "paraphrasing": "Difficult circumstances"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Incubator Drone",
    "paraphrasing": "Drone Incubator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Exert Influence",
    "paraphrasing": "Influence exertion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Carrier Thrall",
    "paraphrasing": "Thrall Carrier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dutiful Return",
    "paraphrasing": "Return of Duty"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Earthen Arms",
    "paraphrasing": "Arms of the Earth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pathway Arrows",
    "paraphrasing": "Arrows Pathway"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Quarantine Field",
    "paraphrasing": "Field in Quarantine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ruination Guide",
    "paraphrasing": "Ruination's Guide"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spell Shrivel",
    "paraphrasing": "Shrivel Spell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tightening Coils",
    "paraphrasing": "Coils that are tightening"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Turn Against",
    "paraphrasing": "Turn to face adversity"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Slab Hammer",
    "paraphrasing": "Hammer Slab"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerie Worshippers",
    "paraphrasing": "Worshippers of Aerie"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grisly Transformation",
    "paraphrasing": "Transformation, Grisly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pain Seer",
    "paraphrasing": "Painseeing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shrike Harpy",
    "paraphrasing": "Harpy Shrike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiteful Returned",
    "paraphrasing": "Returned Spiteful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Culling Mark",
    "paraphrasing": "Mark of Culling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enshrined Memories",
    "paraphrasing": "Memories, Enshrined"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nourishing Shoal",
    "paraphrasing": "Shoal of Nourishment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unchecked Growth",
    "paraphrasing": "Growth, unchecked"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Gallery",
    "paraphrasing": "Gallery Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Advance Scout",
    "paraphrasing": "Advance Scout card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disruptive Student",
    "paraphrasing": "Student who is disruptive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gorilla Warrior",
    "paraphrasing": "Warrior Gorilla"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Feeder",
    "paraphrasing": "Feeder Spike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Worker",
    "paraphrasing": "Worker Spike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerie Mystics",
    "paraphrasing": "Mystics of Aerie"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Entity",
    "paraphrasing": "Entity Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unexpectedly Absent",
    "paraphrasing": "Absent without notice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Brilliant Plan",
    "paraphrasing": "A brilliant plan"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deep Analysis",
    "paraphrasing": "In-depth Analysis"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Diviner Spirit",
    "paraphrasing": "Spirit Diviner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Furnace Celebration",
    "paraphrasing": "Celebration of the Furnace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sudden Demise",
    "paraphrasing": "Sudden Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Witch Hunt",
    "paraphrasing": "Witchhunt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pristine Talisman",
    "paraphrasing": "Talisman in pristine condition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grim Backwoods",
    "paraphrasing": "Backwoods Grim"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Benevolent Offering",
    "paraphrasing": "Offering of Benevolence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Domineering Will",
    "paraphrasing": "Will to Domineer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Intellectual Offering",
    "paraphrasing": "Offering of intellect"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Incite Rebellion",
    "paraphrasing": "Stir up revolt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lifeblood Hydra",
    "paraphrasing": "Hydra, Lifeblood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pestilence Demon",
    "paraphrasing": "Pestilence, Demon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Argentum Armor",
    "paraphrasing": "Argentum's Armor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gargoyle Castle",
    "paraphrasing": "Gargoyle's Castle"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bastion Protector",
    "paraphrasing": "Protector Bastion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Command Beacon",
    "paraphrasing": "Beacon Command"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Celestial Ancient",
    "paraphrasing": "Ancient Celestial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Monk Idealist",
    "paraphrasing": "Idealist Monk"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mystic Retrieval",
    "paraphrasing": "Retrieval of Mystic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Experiment One",
    "paraphrasing": "Experiment 1"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spider Spawning",
    "paraphrasing": "Spider Spawn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Psychosis Crawler",
    "paraphrasing": "Psychosis, Crawler"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Manifold Insights",
    "paraphrasing": "Insights from the Manifold"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cruel Entertainment",
    "paraphrasing": "Entertainment, Cruel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Parting Thoughts",
    "paraphrasing": "Thoughts for parting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Divergent Transformations",
    "paraphrasing": "Transformations, Divergent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ancient Excavation",
    "paraphrasing": "Excavation, Ancient"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Migratory Route",
    "paraphrasing": "A path of migration"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chief Engineer",
    "paraphrasing": "The Chief Engineer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collective Voyage",
    "paraphrasing": "Voyage, Collective"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Den Protector",
    "paraphrasing": "Protector of the Den"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Far Wanderings",
    "paraphrasing": "Wanderings from Afar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Artifact Mutation",
    "paraphrasing": "Mutation of Artifact"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rugged Highlands",
    "paraphrasing": "Highlands, Rugged"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Kindred Discovery",
    "paraphrasing": "Discovery of Kindred"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Captivating Vampire",
    "paraphrasing": "Vampire, Captivating"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Skeletal Vampire",
    "paraphrasing": "Vampire, Skeletal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tithe Drinker",
    "paraphrasing": "The Tithe Drinker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Boreas Charger",
    "paraphrasing": "Boreas, the Charger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Loyal Subordinate",
    "paraphrasing": "A loyal subordinate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fury Storm",
    "paraphrasing": "Storm of Fury"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Loyal Guardian",
    "paraphrasing": "Guardian, Loyal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Coveted Jewel",
    "paraphrasing": "Jewel, highly desired"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dismantling Blow",
    "paraphrasing": "Blow to dismantle"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Borderland Explorer",
    "paraphrasing": "Borderland's Explorer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Explosive Vegetation",
    "paraphrasing": "Explosive Plants"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hunting Wilds",
    "paraphrasing": "Hunting in the Wilds"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hydra Omnivore",
    "paraphrasing": "Hydra that eats everything"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sudden Substitution",
    "paraphrasing": "Substitution, Sudden"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wildfire Devils",
    "paraphrasing": "Wild Devils, Wildfire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pristine Angel",
    "paraphrasing": "Pristine Angel card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Roc Egg",
    "paraphrasing": "Roc's Egg"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Storm Herd",
    "paraphrasing": "Herd Storm"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Clever Impersonator",
    "paraphrasing": "Impersonator, Clever"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Asylum Visitor",
    "paraphrasing": "Visitor from the Asylum"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nightshade Assassin",
    "paraphrasing": "Nightshade, Assassin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fiery Temper",
    "paraphrasing": "Temper, Fiery"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Momentous Fall",
    "paraphrasing": "Momentous Autumn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Growing Ranks",
    "paraphrasing": "Increasing Ranks"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Decoy Gambit",
    "paraphrasing": "Gambit, Decoy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fierce Guardianship",
    "paraphrasing": "Guardianship, Fierce"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Psychic Impetus",
    "paraphrasing": "Psychic boost"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Souvenir Snatcher",
    "paraphrasing": "Souvenir card snatcher"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Species Specialist",
    "paraphrasing": "Specialist in Species"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Selective Adaptation",
    "paraphrasing": "Adapting Selectively"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sanctuary Blade",
    "paraphrasing": "Sanctuary's Blade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Twinning Staff",
    "paraphrasing": "Staff of Twinning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Responder",
    "paraphrasing": "Responder, Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bounty Agent",
    "paraphrasing": "Agent Bounty"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frontline Medic",
    "paraphrasing": "Medic on the Frontline"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shared Animosity",
    "paraphrasing": "Animosity, Shared"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Evolution Charm",
    "paraphrasing": "Evolution's Charm"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Villainous Wealth",
    "paraphrasing": "Wealth of the Villainous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unclaimed Territory",
    "paraphrasing": "Territory, Unclaimed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Otherworldly Journey",
    "paraphrasing": "Journey to another world"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dampen Thought",
    "paraphrasing": "Thought Dampening"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Graceful Adept",
    "paraphrasing": "Adept, Graceful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wandering Ones",
    "paraphrasing": "The Wandering Ones"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Night Dealings",
    "paraphrasing": "Dealings at Night"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Villainous Ogre",
    "paraphrasing": "Ogre, Villainous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hearth Kami",
    "paraphrasing": "Hearth of Kami"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pain Kami",
    "paraphrasing": "Pain, Kami"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wear Away",
    "paraphrasing": "Erode"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Indestructible Aura",
    "paraphrasing": "Aura that cannot be destroyed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Witch Hunter",
    "paraphrasing": "Hunter of Witches"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enchantment Alteration",
    "paraphrasing": "Alteration Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Fallen",
    "paraphrasing": "Fallen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Loyal Retainers",
    "paraphrasing": "Retainers, Loyal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spell Crumple",
    "paraphrasing": "Spell Crumble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frontier Explorer",
    "paraphrasing": "Explorer, Frontier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Priority Avenger",
    "paraphrasing": "Avenger, Priority"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animate Spell",
    "paraphrasing": "Spell animation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Biting Remark",
    "paraphrasing": "A biting remark"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Innocuous Insect",
    "paraphrasing": "Insect, Innocuous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Learned Learner",
    "paraphrasing": "Learner, Learned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corrupted Key",
    "paraphrasing": "Key that is corrupted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "High Troller",
    "paraphrasing": "High Roller"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Problematic Volcano",
    "paraphrasing": "Volcano, Problematic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Experiment Five",
    "paraphrasing": "Experiment number five"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Patient Turtle",
    "paraphrasing": "Turtle, Patient"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Personal Decoy",
    "paraphrasing": "Decoy card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Waste Land",
    "paraphrasing": "The Waste Land"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Prison Term",
    "paraphrasing": "A prison term"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Benevolent Blessing",
    "paraphrasing": "Blessing of Benevolence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "First Response",
    "paraphrasing": "First card played"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Kor Cartographer",
    "paraphrasing": "Kor's Cartographer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Squad Captain",
    "paraphrasing": "Captain of the Squad"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forceful Denial",
    "paraphrasing": "Denial, Forceful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Laboratory Drudge",
    "paraphrasing": "Laboratory Minion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Skilled Animator",
    "paraphrasing": "Talented Animator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nightshade Harvester",
    "paraphrasing": "Nightshade, Harvester"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Opposition Agent",
    "paraphrasing": "Agent of Opposition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Burning Anger",
    "paraphrasing": "Anger Burning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Foundry Inspector",
    "paraphrasing": "Foundry's Inspector"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pennon Blade",
    "paraphrasing": "Blade Pennon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Workshop Assistant",
    "paraphrasing": "Assistant at the Workshop"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spectator Seating",
    "paraphrasing": "Seating for spectators"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Timely Ward",
    "paraphrasing": "Ward, Timely"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Generous Gift",
    "paraphrasing": "A Generous Gift"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Weight Advantage",
    "paraphrasing": "Advantage in weight"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Smuggler Captain",
    "paraphrasing": "Captain Smuggler"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deputized Protester",
    "paraphrasing": "A Deputized Protester"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Followed Footsteps",
    "paraphrasing": "Following Footsteps"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Keepsake Gorgon",
    "paraphrasing": "Gorgon Keepsake"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mausoleum Turnkey",
    "paraphrasing": "Mausoleum's Turnkey"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wild Pair",
    "paraphrasing": "Pair of wilds"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Carnage Gladiator",
    "paraphrasing": "Gladiator Carnage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Advantageous Proclamation",
    "paraphrasing": "Proclamation with advantage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Immediate Action",
    "paraphrasing": "Action needed immediately"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Iterative Analysis",
    "paraphrasing": "Analysis that iterates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sentinel Dispatch",
    "paraphrasing": "Dispatch from the Sentinel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unexpected Potential",
    "paraphrasing": "Potential that is unexpected"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Council Guardian",
    "paraphrasing": "Guardian of the Council"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enraged Revolutionary",
    "paraphrasing": "Revolutionary, Enraged"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ignition Team",
    "paraphrasing": "Team Ignition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aether Searcher",
    "paraphrasing": "Searcher of Aether"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deal Broker",
    "paraphrasing": "Broker Deal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Courier Hawk",
    "paraphrasing": "Hawk Courier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pride Guardian",
    "paraphrasing": "Guardian of Pride"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stave Off",
    "paraphrasing": "Ward off"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Controlled Instincts",
    "paraphrasing": "Instincts, Controlled"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cumber Stone",
    "paraphrasing": "Stone Cumber"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Worldly Counsel",
    "paraphrasing": "Counsel of the World"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ignite Disorder",
    "paraphrasing": "Disorder, Ignite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Quenchable Fire",
    "paraphrasing": "Fire that can be quenched"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wandering Goblins",
    "paraphrasing": "Goblins Wandering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scattershot Archer",
    "paraphrasing": "Scattershot, Archer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fusion Elemental",
    "paraphrasing": "Elemental Fusion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chilling Shade",
    "paraphrasing": "Shade, Chilling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lightning Storm",
    "paraphrasing": "Storm of Lightning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aurochs Herd",
    "paraphrasing": "Aurochs' Herd"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steam Spitter",
    "paraphrasing": "Steamspitter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blizzard Specter",
    "paraphrasing": "Blizzard's Specter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Flare",
    "paraphrasing": "Flare Essence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Terrain Generator",
    "paraphrasing": "Generator Terrain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flame Javelin",
    "paraphrasing": "Javelin Flame"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Puppet Strings",
    "paraphrasing": "Strings of Puppets"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hornet Cannon",
    "paraphrasing": "Hornet's Cannon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Power Armor",
    "paraphrasing": "Power armour"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Allied Strategies",
    "paraphrasing": "Strategies Allied"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Razor Barrier",
    "paraphrasing": "Barrier, Razor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Contagion Clasp",
    "paraphrasing": "Clasp of Contagion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scroll Thief",
    "paraphrasing": "Scroll, Thief"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flood Plain",
    "paraphrasing": "Floodplain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Searing Blaze",
    "paraphrasing": "Blazing Searing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overwhelming Intellect",
    "paraphrasing": "Intellect, overwhelming"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Outcasts",
    "paraphrasing": "Outcasts, Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daily Regimen",
    "paraphrasing": "A Daily Regimen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Miraculous Recovery",
    "paraphrasing": "Recovery, Miraculous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dragon Blood",
    "paraphrasing": "Dragon's Blood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Volt Charge",
    "paraphrasing": "Charge with Volt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Treasured Find",
    "paraphrasing": "A treasured find"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dauntless Onslaught",
    "paraphrasing": "Dauntless, Onslaught"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Precinct Captain",
    "paraphrasing": "Captain of the Precinct"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Induce Despair",
    "paraphrasing": "Cause despair"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tower Geist",
    "paraphrasing": "Tower Spirit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sharpened Pitchfork",
    "paraphrasing": "Pitchfork, Sharpened"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Compelling Deterrence",
    "paraphrasing": "Deterrence, Compelling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tooth Collector",
    "paraphrasing": "Collector of Teeth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voyager Staff",
    "paraphrasing": "Staff of Voyager"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Maze Sentinel",
    "paraphrasing": "Maze's Sentinel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trait Doctoring",
    "paraphrasing": "Doctoring Trait"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Uncovered Clues",
    "paraphrasing": "Clues uncovered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hired Torturer",
    "paraphrasing": "The Hired Torturer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Possibility Storm",
    "paraphrasing": "Potential Storm"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pilfered Plans",
    "paraphrasing": "Plans that were pilfered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sin Collector",
    "paraphrasing": "The Sin Collector"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Jester",
    "paraphrasing": "Jester Spike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steeling Stance",
    "paraphrasing": "Taking a Stance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pain Magnification",
    "paraphrasing": "Magnified Pain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Palliation Accord",
    "paraphrasing": "Accord of Palliation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Walking Archive",
    "paraphrasing": "Archive Walker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harrowing Journey",
    "paraphrasing": "A Harrowing Journey"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vengeful Vampire",
    "paraphrasing": "Vampire, Vengeful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forge Devil",
    "paraphrasing": "Devil Forge"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Russet Wolves",
    "paraphrasing": "Russet's Wolves"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daring Archaeologist",
    "paraphrasing": "The Daring Archaeologist"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pegasus Courser",
    "paraphrasing": "Courser Pegasus"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tempest Djinn",
    "paraphrasing": "Djinn Tempest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dread Shade",
    "paraphrasing": "Dreadshade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Final Parting",
    "paraphrasing": "Last card played"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stronghold Confessor",
    "paraphrasing": "Stronghold's Confessor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Radiating Lightning",
    "paraphrasing": "Radiant Lightning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Jousting Lance",
    "paraphrasing": "Lance for Jousting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grave Robbers",
    "paraphrasing": "Robbers of the Grave"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nameless Race",
    "paraphrasing": "Race without a name"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reflecting Mirror",
    "paraphrasing": "Mirror, Reflecting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stone Calendar",
    "paraphrasing": "Calendar Stone"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Barge",
    "paraphrasing": "Barge War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Last Word",
    "paraphrasing": "Final Word"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rebuking Ceremony",
    "paraphrasing": "Ceremony of Rebuke"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serum Powder",
    "paraphrasing": "Powder of Serum"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enduring Victory",
    "paraphrasing": "Victory that endures"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fate Forgotten",
    "paraphrasing": "Forgotten Fate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Myth Realized",
    "paraphrasing": "Myth, Realized"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sandstorm Charger",
    "paraphrasing": "Sandstorm's Charger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusory Gains",
    "paraphrasing": "Gains that are illusory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Palace Familiar",
    "paraphrasing": "Familiar Palace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ultimate Price",
    "paraphrasing": "The Ultimate Price"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lose Calm",
    "paraphrasing": "Lose your cool"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Revealing Wind",
    "paraphrasing": "Revealing the Wind"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tread Upon",
    "paraphrasing": "Step on"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Relief Captain",
    "paraphrasing": "Captain Relief"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Interloper",
    "paraphrasing": "Vampire, the Interloper"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Noble",
    "paraphrasing": "Noble Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aggravated Assault",
    "paraphrasing": "Aggravated Assault card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Acclaimed Contender",
    "paraphrasing": "A Contender that is acclaimed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Beloved Princess",
    "paraphrasing": "Princess Beloved"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charming Prince",
    "paraphrasing": "Prince Charming"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fortifying Provisions",
    "paraphrasing": "Provisions being fortified"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Venerable Knight",
    "paraphrasing": "Knight, Venerable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Midnight Clock",
    "paraphrasing": "Clock at Midnight"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overwhelmed Apprentice",
    "paraphrasing": "Apprentice feeling overwhelmed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unexplained Vision",
    "paraphrasing": "Vision, unexplained"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Malevolent Noble",
    "paraphrasing": "Noble, Malevolent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Memory Theft",
    "paraphrasing": "Theft of Memory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fervent Champion",
    "paraphrasing": "Champion Fervent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Opportunistic Dragon",
    "paraphrasing": "Dragon, Opportunistic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seven Dwarves",
    "paraphrasing": "The Seven Dwarves"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Giant Opportunity",
    "paraphrasing": "Large Chance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wildwood Tracker",
    "paraphrasing": "Wildwood's Tracker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Doom Foretold",
    "paraphrasing": "Doom, Foretold"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inspiring Veteran",
    "paraphrasing": "Veteran, Inspiring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elite Headhunter",
    "paraphrasing": "Headhunter, Elite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heraldic Banner",
    "paraphrasing": "Banner, Heraldic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Signpost Scarecrow",
    "paraphrasing": "Signpost, Scarecrow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spinning Wheel",
    "paraphrasing": "Wheel card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Weapon Rack",
    "paraphrasing": "Rack as a weapon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gingerbread Cabin",
    "paraphrasing": "Gingerbread's Cabin"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Workshop Elders",
    "paraphrasing": "Elders Workshop"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Quiet Speculation",
    "paraphrasing": "Speculation, Quiet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sprite Noble",
    "paraphrasing": "Noble Sprite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Borrowed Grace",
    "paraphrasing": "Grace, borrowed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collective Effort",
    "paraphrasing": "Working together"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Courageous Outrider",
    "paraphrasing": "Outrider, Courageous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Selfless Spirit",
    "paraphrasing": "Spirit, Selfless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Subjugator Angel",
    "paraphrasing": "Angel Subjugator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Contingency Plan",
    "paraphrasing": "Plan for contingencies"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Identity Thief",
    "paraphrasing": "The Identity Thief"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Summary Dismissal",
    "paraphrasing": "Dismissal Summary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Take Inventory",
    "paraphrasing": "Inventory check"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cemetery Recruitment",
    "paraphrasing": "Recruitment from the Cemetery"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Prying Questions",
    "paraphrasing": "Questions that pry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ruthless Disposal",
    "paraphrasing": "Disposal, Ruthless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Strange Augmentation",
    "paraphrasing": "Unusual Enhancement"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Cutthroat",
    "paraphrasing": "Cutthroat Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Abandon Reason",
    "paraphrasing": "Reason for abandoning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bold Impaler",
    "paraphrasing": "Impaler, Bold"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Borrowed Hostility",
    "paraphrasing": "Hostility, Borrowed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Make Mischief",
    "paraphrasing": "Cause trouble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Backwoods Survivalists",
    "paraphrasing": "Survivalists of the Backwoods"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hamlet Captain",
    "paraphrasing": "Captain Hamlet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Patrol Signaler",
    "paraphrasing": "Patrol Signaller"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Soul Reap",
    "paraphrasing": "Soul Reap Card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hotheaded Giant",
    "paraphrasing": "Giant, Hotheaded"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Impelled Giant",
    "paraphrasing": "Giant, Impelled"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bloom Tender",
    "paraphrasing": "Tender Bloom"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bloodied Ghost",
    "paraphrasing": "Ghost, Bloodied"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Sheen",
    "paraphrasing": "Sheen, Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Leering Emblem",
    "paraphrasing": "Emblem, Leering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Limited Resources",
    "paraphrasing": "Resources are limited"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scare Tactics",
    "paraphrasing": "Tactics to scare"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Monstrous Hound",
    "paraphrasing": "Hound, Monstrous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Temple Garden",
    "paraphrasing": "Garden Temple"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Suspension Field",
    "paraphrasing": "Field of Suspension"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Servo Exhibition",
    "paraphrasing": "Exhibition of Servo"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spore Flower",
    "paraphrasing": "Flower Spore"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Changeling Hero",
    "paraphrasing": "Hero Changeling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Funeral Charm",
    "paraphrasing": "Charm for funerals"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Glittering Wish",
    "paraphrasing": "A Glittering Wish"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Knowledge Pool",
    "paraphrasing": "Pool of Knowledge"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Channel Harm",
    "paraphrasing": "Harm Channel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wandering Champion",
    "paraphrasing": "Champion who wanders"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enhanced Awareness",
    "paraphrasing": "Greater awareness"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Neutralizing Blast",
    "paraphrasing": "Blast that neutralizes"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Supplant Form",
    "paraphrasing": "Form of Supplant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grave Strength",
    "paraphrasing": "Strength of the Grave"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cached Defenses",
    "paraphrasing": "Defenses, Cached"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Formless Nurturing",
    "paraphrasing": "Nurturing, Formless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cunning Strike",
    "paraphrasing": "A cunning strike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harsh Sustenance",
    "paraphrasing": "Sustenance, Harsh"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Leaden Fists",
    "paraphrasing": "Fists of Lead"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Arcanum Wings",
    "paraphrasing": "Arcanum's Wings"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bitter Ordeal",
    "paraphrasing": "A Bitter Ordeal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Storm Entity",
    "paraphrasing": "Storm Creature"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Quiet Disrepair",
    "paraphrasing": "Disrepair, Quiet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stolen Identity",
    "paraphrasing": "Identity theft"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gather Courage",
    "paraphrasing": "Courage, Gather"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Privileged Position",
    "paraphrasing": "Position of privilege"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pit Fight",
    "paraphrasing": "Fight Pit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dramatic Reversal",
    "paraphrasing": "Reversal, Dramatic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inspiring Captain",
    "paraphrasing": "Captain, Inspiring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hatching Plans",
    "paraphrasing": "Plans for hatching"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Predatory Focus",
    "paraphrasing": "Focus, Predatory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blind Hunter",
    "paraphrasing": "Hunter, Blind"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blade Instructor",
    "paraphrasing": "Instructor Blade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Candlelight Vigil",
    "paraphrasing": "Vigil, Candlelight"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sworn Companions",
    "paraphrasing": "Companions, Sworn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dazzling Lights",
    "paraphrasing": "Lights, Dazzling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enhanced Surveillance",
    "paraphrasing": "Improved Monitoring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Maximize Altitude",
    "paraphrasing": "Maximize your altitude"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Radical Idea",
    "paraphrasing": "A Radical Idea"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unexplained Disappearance",
    "paraphrasing": "The Unexplained Disappearance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Burglar Rat",
    "paraphrasing": "Rat Burglar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hired Poisoner",
    "paraphrasing": "The Hired Poisoner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mausoleum Secrets",
    "paraphrasing": "Secrets of the Mausoleum"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Book Devourer",
    "paraphrasing": "Devourer, Book"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Maximize Velocity",
    "paraphrasing": "Maximize speed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Torch Courier",
    "paraphrasing": "Courier Torch"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Circuitous Route",
    "paraphrasing": "A winding path"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "District Guide",
    "paraphrasing": "District's Guide"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pelt Collector",
    "paraphrasing": "Collector Pelt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sprouting Renewal",
    "paraphrasing": "Renewal Sprouting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disinformation Campaign",
    "paraphrasing": "Campaign of Disinformation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Erstwhile Trooper",
    "paraphrasing": "Trooper, Erstwhile"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hammer Dropper",
    "paraphrasing": "Hammer Dropper card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Join Shields",
    "paraphrasing": "Shields Join"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Thought Erasure",
    "paraphrasing": "Thought-Erasure"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ancestor Dragon",
    "paraphrasing": "Dragon Ancestor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aggressive Instinct",
    "paraphrasing": "Instinct, Aggressive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Knight Watch",
    "paraphrasing": "Watch Knight"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Murder Investigation",
    "paraphrasing": "Investigation into a murder"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shielded Passage",
    "paraphrasing": "Passage, Shielded"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Incursion Specialist",
    "paraphrasing": "Specialist in Incursion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Last Thoughts",
    "paraphrasing": "Final Thoughts"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spell Rupture",
    "paraphrasing": "Rupture Spell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Contaminated Ground",
    "paraphrasing": "Ground, Contaminated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corpse Blockade",
    "paraphrasing": "Blockade of the Corpse"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Killing Glare",
    "paraphrasing": "Glare of Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Syndicate Enforcer",
    "paraphrasing": "Enforcer of the Syndicate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Furious Resistance",
    "paraphrasing": "Resistance, Furious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Madcap Skills",
    "paraphrasing": "Skills, Madcap"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Massive Raid",
    "paraphrasing": "Large Scale Attack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forced Adaptation",
    "paraphrasing": "Adaptation, Forced"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serene Remembrance",
    "paraphrasing": "Remembrance, Serene"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Foundry Champion",
    "paraphrasing": "Foundry's Champion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unexpected Results",
    "paraphrasing": "Results were unexpected"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Armored Transport",
    "paraphrasing": "Transport, Armored"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Glaring Spotlight",
    "paraphrasing": "Spotlight, Glaring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heart Sliver",
    "paraphrasing": "Heart's Sliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Timely Reinforcements",
    "paraphrasing": "Reinforcements arriving on time"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gifts Given",
    "paraphrasing": "Gifts that were given"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trade Caravan",
    "paraphrasing": "Caravan Trade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heart Wolf",
    "paraphrasing": "Wolf of Hearts"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Root Spider",
    "paraphrasing": "Spider Root"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Menacing Ogre",
    "paraphrasing": "Ogre, Menacing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ivy Elemental",
    "paraphrasing": "Elemental Ivy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wizard Replica",
    "paraphrasing": "Wizard card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cunning Survivor",
    "paraphrasing": "Survivor, Cunning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Imaginary Threats",
    "paraphrasing": "Threats, Imaginary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Proven Combatant",
    "paraphrasing": "A skilled fighter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Without Weakness",
    "paraphrasing": "No Weakness"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tenacious Hunter",
    "paraphrasing": "Hunter, Tenacious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enduring Renewal",
    "paraphrasing": "Renewal that endures"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusionary Forces",
    "paraphrasing": "Forces, Illusionary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusionary Terrain",
    "paraphrasing": "Terrain, Illusionary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusionary Wall",
    "paraphrasing": "Wall of Illusion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pestilence Rats",
    "paraphrasing": "Rats of Pestilence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Barbarian Guides",
    "paraphrasing": "Barbarian's Guides"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Filter",
    "paraphrasing": "Filter Essence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gorilla Pack",
    "paraphrasing": "Pack of Gorillas"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stunted Growth",
    "paraphrasing": "Growth is stunted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Centaur Archer",
    "paraphrasing": "Centaur, Archer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ghostly Flame",
    "paraphrasing": "Flame, Ghostly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Chariot",
    "paraphrasing": "Chariot of War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Coordinated Charge",
    "paraphrasing": "Coordinated attack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Perimeter Sergeant",
    "paraphrasing": "Sergeant, Perimeter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Splendor Mare",
    "paraphrasing": "Splendor, Mare"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Valiant Rescuer",
    "paraphrasing": "Rescuer, Valiant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reconnaissance Mission",
    "paraphrasing": "Mission for reconnaissance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Startling Development",
    "paraphrasing": "A startling development"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wingspan Mentor",
    "paraphrasing": "Wingspan's Mentor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blood Curdle",
    "paraphrasing": "Blood Curdle card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heartless Act",
    "paraphrasing": "Act without heart"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unbreakable Bond",
    "paraphrasing": "Bond that cannot be broken"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forbidden Friendship",
    "paraphrasing": "Friendship Forbidden"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heightened Reflexes",
    "paraphrasing": "Reflexes, heightened"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tentative Connection",
    "paraphrasing": "A possible connection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unpredictable Cyclone",
    "paraphrasing": "Cyclone, unpredictable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Migration Path",
    "paraphrasing": "Path to Migration"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Channeled Force",
    "paraphrasing": "Force, Channeled"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sprite Dragon",
    "paraphrasing": "Dragon Sprite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fury Charm",
    "paraphrasing": "Charm of Fury"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hoarding Dragon",
    "paraphrasing": "Dragon Hoarding"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Predation",
    "paraphrasing": "Predation, Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harsh Judgment",
    "paraphrasing": "Severe Punishment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Protective Sphere",
    "paraphrasing": "Sphere of Protection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pure Reflection",
    "paraphrasing": "Reflection, Pure"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Breaking Wave",
    "paraphrasing": "Wave Breaking"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scavenged Weaponry",
    "paraphrasing": "Weaponry found through scavenging"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Explosive Growth",
    "paraphrasing": "Growth, explosive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vigorous Charge",
    "paraphrasing": "Charge with vigor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Coalition Victory",
    "paraphrasing": "Coalition's Victory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ordered Migration",
    "paraphrasing": "Migration, Ordered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stalking Assassin",
    "paraphrasing": "Assassin who stalks"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ancient Spring",
    "paraphrasing": "Spring, Ancient"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Archaeological Dig",
    "paraphrasing": "Dig site"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battleground Geist",
    "paraphrasing": "Battlegeist Ground"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Manor Skeleton",
    "paraphrasing": "Skeleton Manor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Markov Patrician",
    "paraphrasing": "Patrician Markov"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Village Cannibals",
    "paraphrasing": "Cannibals from the Village"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grave Bramble",
    "paraphrasing": "Bramble Grave"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Travel Preparations",
    "paraphrasing": "Preparing for travel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Graveyard Shovel",
    "paraphrasing": "Shovel of the Graveyard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wooden Stake",
    "paraphrasing": "Stake made of wood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overwhelming Forces",
    "paraphrasing": "Forces, Overwhelming"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Temporal Manipulation",
    "paraphrasing": "Manipulation of time"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corsair Captain",
    "paraphrasing": "Captain Corsair"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battlefield Promotion",
    "paraphrasing": "Promotion to Battlefield"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Knightly Valor",
    "paraphrasing": "Knight's Valor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Departed Deckhand",
    "paraphrasing": "Deckhand who has departed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blood Host",
    "paraphrasing": "Host of Blood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fell Specter",
    "paraphrasing": "Fell, Specter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Launch Party",
    "paraphrasing": "Party to launch"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lawless Broker",
    "paraphrasing": "Broker, Lawless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Neonate",
    "paraphrasing": "Neonate Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gargoyle Sentinel",
    "paraphrasing": "Gargoyle, Sentinel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Riptide Laboratory",
    "paraphrasing": "Riptide Lab"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Oppressive Rays",
    "paraphrasing": "Rays, Oppressive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Formation",
    "paraphrasing": "Formation, Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daring Thief",
    "paraphrasing": "Thief, Daring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Triton Cavalry",
    "paraphrasing": "Triton's Cavalry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cruel Feeding",
    "paraphrasing": "Feeding, Cruel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nightmarish End",
    "paraphrasing": "End that is nightmarish"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Returned Reveler",
    "paraphrasing": "Reveler Returned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tormented Thoughts",
    "paraphrasing": "Thoughts, Tormented"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Colossal Heroics",
    "paraphrasing": "Heroic Colossus"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Market Festival",
    "paraphrasing": "Festival Market"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Solitary Confinement",
    "paraphrasing": "Solitaire Confinement"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vigilant Sentry",
    "paraphrasing": "Vigilance Sentry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hapless Researcher",
    "paraphrasing": "Researcher, Hapless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Wall",
    "paraphrasing": "Wall Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Earsplitting Rats",
    "paraphrasing": "Rats, Earsplitting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Book Burning",
    "paraphrasing": "Burning Book"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flaring Pain",
    "paraphrasing": "Pain that flares up"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Infectious Rage",
    "paraphrasing": "Rage, Infectious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Exoskeletal Armor",
    "paraphrasing": "Armor, Exoskeletal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stoic Farmer",
    "paraphrasing": "Farmer, Stoic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battlefield Raptor",
    "paraphrasing": "Battle Raptor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Story Seeker",
    "paraphrasing": "Storyseeker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Augury Raven",
    "paraphrasing": "Raven, Augury"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cosmos Charger",
    "paraphrasing": "Cosmos, Charger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fearless Liberator",
    "paraphrasing": "Liberator, Fearless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Smashing Success",
    "paraphrasing": "A Smashing Success"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mammoth Growth",
    "paraphrasing": "Growth of the Mammoth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Funeral Longboat",
    "paraphrasing": "Longboat for funerals"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Replicating Ring",
    "paraphrasing": "Ring that replicates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Glacial Floodplain",
    "paraphrasing": "Glacial Flood Plain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Valkyrie Harbinger",
    "paraphrasing": "Valkyrie, Harbinger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Canopy Tactician",
    "paraphrasing": "Tactician of the Canopy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Absorb Identity",
    "paraphrasing": "Steal another player's identity"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bearded Axe",
    "paraphrasing": "Axe, Bearded"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Consulate Surveillance",
    "paraphrasing": "Surveillance at the Consulate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Revoke Privileges",
    "paraphrasing": "Withdraw Rights"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trusty Companion",
    "paraphrasing": "A Trusty Companion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Visionary Augmenter",
    "paraphrasing": "Augmenter with Visionary ability"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ceremonious Rejection",
    "paraphrasing": "Rejection with ceremony"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Curio Vendor",
    "paraphrasing": "Vendor Curio"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Experimental Aviator",
    "paraphrasing": "Aviator, Experimental"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Failed Inspection",
    "paraphrasing": "Did not pass inspection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Paradoxical Outcome",
    "paraphrasing": "Outcome that is paradoxical"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shrewd Negotiation",
    "paraphrasing": "Negotiation, shrewd"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Extraction",
    "paraphrasing": "Extracting Essence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fortuitous Find",
    "paraphrasing": "A fortunate discovery"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Make Obsolete",
    "paraphrasing": "Render useless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Syndicate Trafficker",
    "paraphrasing": "Trafficker of the Syndicate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tidy Conclusion",
    "paraphrasing": "A neat finish"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underhanded Designs",
    "paraphrasing": "Designs, underhanded"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Madcap Experiment",
    "paraphrasing": "Madcap's Experiment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Speedway Fanatic",
    "paraphrasing": "Fanatic of Speedway"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dubious Challenge",
    "paraphrasing": "Challenge that is dubious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Durable Handicraft",
    "paraphrasing": "Handicraft that is durable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ornamental Courage",
    "paraphrasing": "Courage, Ornamental"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Engineered Might",
    "paraphrasing": "Might, Engineered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hazardous Conditions",
    "paraphrasing": "Conditions that are hazardous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Motorist",
    "paraphrasing": "Motorist Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animation Module",
    "paraphrasing": "Module for animation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fabrication Module",
    "paraphrasing": "Module for Fabrication"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sequestered Stash",
    "paraphrasing": "Hidden Cache"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "End Hostilities",
    "paraphrasing": "Hostilities must end"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Behemoth",
    "paraphrasing": "Behemoth War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Quiet Contemplation",
    "paraphrasing": "Contemplation, Quiet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Debilitating Injury",
    "paraphrasing": "Injury that debilitates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disowned Ancestor",
    "paraphrasing": "Ancestor who is disowned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Become Immense",
    "paraphrasing": "To become immense"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Incremental Growth",
    "paraphrasing": "Growth that is incremental"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Smoke Teller",
    "paraphrasing": "Teller of Smoke"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trap Essence",
    "paraphrasing": "Essence Trap"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enchanted Being",
    "paraphrasing": "Being enchanted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Remove Enchantments",
    "paraphrasing": "Take out Enchantments"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Part Water",
    "paraphrasing": "Water Part"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Avoid Fate",
    "paraphrasing": "Fate to be avoided"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Barbary Apes",
    "paraphrasing": "Barbary Apes card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wood Elemental",
    "paraphrasing": "Elemental Wood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mountain Stronghold",
    "paraphrasing": "Stronghold Mountain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lowland Tracker",
    "paraphrasing": "Lowland's Tracker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stoic Champion",
    "paraphrasing": "Champion who is stoic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Riptide Director",
    "paraphrasing": "Director Riptide"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Warped Researcher",
    "paraphrasing": "Researcher, Warped"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harpoon Sniper",
    "paraphrasing": "Harpoon, Sniper"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Protective Bubble",
    "paraphrasing": "Bubble, Protective"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Final Revels",
    "paraphrasing": "Final Revelations"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fodder Launch",
    "paraphrasing": "Launch Fodder"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hornet Harasser",
    "paraphrasing": "Hornet's Harasser"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Boggart Forager",
    "paraphrasing": "Boggart, Forager"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hunt Down",
    "paraphrasing": "Track Down"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Timber Protector",
    "paraphrasing": "Protector of Timber"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Woodland Guidance",
    "paraphrasing": "Guidance from the Woodlands"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Twinning Glass",
    "paraphrasing": "Glass Twinning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Palace Guard",
    "paraphrasing": "Palace's Guard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sphinx Ambassador",
    "paraphrasing": "Ambassador Sphinx"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Aristocrat",
    "paraphrasing": "Aristocrat Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Jackal Familiar",
    "paraphrasing": "Jackal's Familiar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Maritime Guard",
    "paraphrasing": "Guard, Maritime"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Time Reversal",
    "paraphrasing": "Reversal of Time"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stabbing Pain",
    "paraphrasing": "Painful stab"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cyclops Gladiator",
    "paraphrasing": "Cyclops, Gladiator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Destructive Force",
    "paraphrasing": "Force, Destructive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Volcanic Strength",
    "paraphrasing": "Strength of the Volcano"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Armored Warhorse",
    "paraphrasing": "Armored Horse"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Personal Sanctuary",
    "paraphrasing": "Sanctuary, Personal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Doubling Chant",
    "paraphrasing": "Chant for Doubling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Kite Shield",
    "paraphrasing": "Shield, Kite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Attended Knight",
    "paraphrasing": "Knight who attended"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Guardian Lions",
    "paraphrasing": "Lions, Guardian"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Falcon",
    "paraphrasing": "Falcon of War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reckless Brute",
    "paraphrasing": "Brute, Reckless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Illusionary Armor",
    "paraphrasing": "Armor, Illusionary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Warlord",
    "paraphrasing": "Warlord Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ephemeral Shields",
    "paraphrasing": "Shields, Ephemeral"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Meditation Puzzle",
    "paraphrasing": "Puzzle Meditation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Preeminent Captain",
    "paraphrasing": "Captain Preeminent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aeronaut Tinkerer",
    "paraphrasing": "Aeronaut, the Tinkerer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Military Intelligence",
    "paraphrasing": "Intelligence Gathering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aggressive Mining",
    "paraphrasing": "Mining aggressively"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Generator Servant",
    "paraphrasing": "Servant Generator"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Novice Knight",
    "paraphrasing": "Knight, Novice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Image",
    "paraphrasing": "Image Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Patient Rebuilding",
    "paraphrasing": "Rebuilding with patience"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Uncomfortable Chill",
    "paraphrasing": "A rather uncomfortable chill"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Abnormal Endurance",
    "paraphrasing": "Unusual Stamina"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hired Blade",
    "paraphrasing": "Blade, Hired"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Sovereign",
    "paraphrasing": "Sovereign Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Declare Dominance",
    "paraphrasing": "Establish dominance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aerial Engineer",
    "paraphrasing": "Engineer, Aerial"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heroic Reinforcements",
    "paraphrasing": "Reinforcements, Heroic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Explosive Apparatus",
    "paraphrasing": "Explosive device"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hanged Executioner",
    "paraphrasing": "Hanged Man"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Masterful Replication",
    "paraphrasing": "Replication, Masterful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pack Mastiff",
    "paraphrasing": "Mastiff Pack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Repeated Reverberation",
    "paraphrasing": "Reverberation, Repeated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ferocious Pup",
    "paraphrasing": "Ferocious Puppy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shared Summons",
    "paraphrasing": "Summons, Shared"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Colossus Hammer",
    "paraphrasing": "Hammer Colossus"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Diamond Knight",
    "paraphrasing": "Knight of Diamonds"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pattern Matcher",
    "paraphrasing": "Matching patterns"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daybreak Charger",
    "paraphrasing": "Daybreak's Charger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Makeshift Battalion",
    "paraphrasing": "Battalion, Makeshift"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Selfless Savior",
    "paraphrasing": "Savior, Selfless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Swift Response",
    "paraphrasing": "Quick Response"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Finishing Blow",
    "paraphrasing": "Final hit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Brash Taunter",
    "paraphrasing": "Taunter, Brash"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Conspicuous Snoop",
    "paraphrasing": "A Conspicuous Snoop"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Furious Rise",
    "paraphrasing": "Rise of Fury"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unleash Fury",
    "paraphrasing": "Fury Unleashed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Invigorating Surge",
    "paraphrasing": "Surge, Invigorating"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Track Down",
    "paraphrasing": "Find Track Down"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Indulging Patrician",
    "paraphrasing": "Patrician, Indulging"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chrome Replicator",
    "paraphrasing": "Chrome Replicator card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expose Evil",
    "paraphrasing": "Reveal Evil"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Suppression Bonds",
    "paraphrasing": "Bonds, Suppression"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Volunteer Reserves",
    "paraphrasing": "Reserves Volunteer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Calculated Dismissal",
    "paraphrasing": "Dismissal, Calculated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gone Missing",
    "paraphrasing": "Missing card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mystical Teachings",
    "paraphrasing": "Teachings, Mystical"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Silent Observer",
    "paraphrasing": "Observer, Silent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steady Progress",
    "paraphrasing": "Making headway"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Denied",
    "paraphrasing": "Denied Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dread Drone",
    "paraphrasing": "Dreadrone"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Instill Infection",
    "paraphrasing": "Instill a Infection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Returned Centaur",
    "paraphrasing": "Centaur that was returned"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Champion",
    "paraphrasing": "Champion Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Clip Wings",
    "paraphrasing": "Wings clipped"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hardy Veteran",
    "paraphrasing": "Veteran, Hardy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nest Invader",
    "paraphrasing": "Nest Invaders"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crenellated Wall",
    "paraphrasing": "Wall, Crenellated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Farmstead Gleaner",
    "paraphrasing": "Farmstead's Gleaner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Precursor Golem",
    "paraphrasing": "Golem Precursor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Banishment Decree",
    "paraphrasing": "Decree of Banishment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Distant Memories",
    "paraphrasing": "Memories from afar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Horrifying Revelation",
    "paraphrasing": "Revelation, Horrifying"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Virulent Wound",
    "paraphrasing": "Wound, Virulent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ogre Resister",
    "paraphrasing": "Ogre's Resister"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Training Drone",
    "paraphrasing": "Drone for training"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "False Defeat",
    "paraphrasing": "Defeat, False"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ghostly Visit",
    "paraphrasing": "A Ghostly Visit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stolen Grain",
    "paraphrasing": "Grain, Stolen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wei Infantry",
    "paraphrasing": "Infantry of Wei"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Dragon",
    "paraphrasing": "Dragon Zodiac"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Jungle Lion",
    "paraphrasing": "Lion of the Jungle"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trip Wire",
    "paraphrasing": "Wire Trip"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fire Tempest",
    "paraphrasing": "Tempest of Fire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Alluring Scent",
    "paraphrasing": "A card named Alluring Scent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stirring Address",
    "paraphrasing": "Address that stirs"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trustworthy Scout",
    "paraphrasing": "A reliable scout"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Valiant Changeling",
    "paraphrasing": "Changeling, Valiant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Smoke Shroud",
    "paraphrasing": "Shroud Smoke"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Changeling Outcast",
    "paraphrasing": "Outcast Changeling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rank Officer",
    "paraphrasing": "Officer Rank"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shatter Assumptions",
    "paraphrasing": "Shattering Assumptions"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Venomous Changeling",
    "paraphrasing": "Changeling, Venomous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scale Up",
    "paraphrasing": "Increase the scale"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unbound Flourishing",
    "paraphrasing": "Flourishing, Unbound"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collected Conjuring",
    "paraphrasing": "Conjuring, Collected"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Unsettled Mariner",
    "paraphrasing": "The Unsettled Mariner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dazzling Beauty",
    "paraphrasing": "Beauty, Dazzling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Favorable Destiny",
    "paraphrasing": "A good fortune"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Canopy Dragon",
    "paraphrasing": "Dragon Canopy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Preferred Selection",
    "paraphrasing": "Selection preferred"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Superior Numbers",
    "paraphrasing": "Numbers Superior"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Haunting Apparition",
    "paraphrasing": "Apparition, Haunting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Malignant Growth",
    "paraphrasing": "Harmful Bloom"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reflect Damage",
    "paraphrasing": "Damage reflection"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zebra Unicorn",
    "paraphrasing": "Unicorn Zebra"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spell Pierce",
    "paraphrasing": "Pierce Spell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Careful Consideration",
    "paraphrasing": "Thoughtful deliberation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cornered Market",
    "paraphrasing": "Market Cornered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fountain Watch",
    "paraphrasing": "Watch Fountain"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fresh Volunteers",
    "paraphrasing": "Volunteers, Fresh"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Revered Elder",
    "paraphrasing": "Elder, Revered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Security Detail",
    "paraphrasing": "Detail, Security"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiritual Focus",
    "paraphrasing": "Focus, Spiritual"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chameleon Spirit",
    "paraphrasing": "Spirit Chameleon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Customs Depot",
    "paraphrasing": "Depot Customs"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Extravagant Spirit",
    "paraphrasing": "Spirit, Extravagant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Tax",
    "paraphrasing": "Tax for War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cateran Enforcer",
    "paraphrasing": "Cateran's Enforcer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corrupt Official",
    "paraphrasing": "Official who is corrupt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Notorious Assassin",
    "paraphrasing": "Assassin, Notorious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blood Hound",
    "paraphrasing": "Bloodhound"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ceremonial Guard",
    "paraphrasing": "The Ceremonial Guard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hired Giant",
    "paraphrasing": "Giant Hired"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Territorial Dispute",
    "paraphrasing": "Dispute over territory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Venomous Dragonfly",
    "paraphrasing": "Dragonfly, Venomous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Credit Voucher",
    "paraphrasing": "Voucher for credit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Power Matrix",
    "paraphrasing": "Matrix Power"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Worry Beads",
    "paraphrasing": "Beads of worry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fencer Clique",
    "paraphrasing": "Fencer's Clique"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ink Dissolver",
    "paraphrasing": "Ink-Dissolver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Knowledge Exploitation",
    "paraphrasing": "Exploitation of Knowledge"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Morsel Theft",
    "paraphrasing": "Theft of Morsel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rage Forger",
    "paraphrasing": "Rage, the Forger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Awe Strike",
    "paraphrasing": "Strike of Awe"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Assert Authority",
    "paraphrasing": "Establish dominance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forge Armor",
    "paraphrasing": "Forge the Armor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Elemental",
    "paraphrasing": "Elemental War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elf Replica",
    "paraphrasing": "Elf card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Proteus Staff",
    "paraphrasing": "Staff of Proteus"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Soldier Replica",
    "paraphrasing": "Replica Soldier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trickster Mage",
    "paraphrasing": "Mage, the Trickster"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Divining Witch",
    "paraphrasing": "Witch of Divination"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animate Land",
    "paraphrasing": "Land Animate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Overlaid Terrain",
    "paraphrasing": "Terrain, overlaid"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pack Hunt",
    "paraphrasing": "Hunt Pack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Due Respect",
    "paraphrasing": "With all due respect"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Report",
    "paraphrasing": "Report for War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Defensive Stance",
    "paraphrasing": "A defensive stance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Numbing Dose",
    "paraphrasing": "Dose of Numbing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Furnace Scamp",
    "paraphrasing": "Scamp from the Furnace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Invader Parasite",
    "paraphrasing": "Parasite Invader"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Delaying Shield",
    "paraphrasing": "Shield that delays"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Devoted Caretaker",
    "paraphrasing": "A Devoted Caretaker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Earnest Fellowship",
    "paraphrasing": "Fellowship, Earnest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nomad Decoy",
    "paraphrasing": "Nomad, a Decoy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Resilient Wanderer",
    "paraphrasing": "Wanderer, Resilient"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tireless Tribe",
    "paraphrasing": "Tribe, Tireless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Careful Study",
    "paraphrasing": "Studying carefully"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Patron Wizard",
    "paraphrasing": "Wizard Patron"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pedantic Learning",
    "paraphrasing": "Learning that is pedantic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Thought Nibbler",
    "paraphrasing": "Thought-Nibbler"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Childhood Horror",
    "paraphrasing": "Horror from Childhood"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Morgue Theft",
    "paraphrasing": "Theft from the Morgue"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Repentant Vampire",
    "paraphrasing": "Vampire, Repentant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stalking Bloodsucker",
    "paraphrasing": "Bloodsucking Stalker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zombie Cannibal",
    "paraphrasing": "Cannibal Zombie"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chance Encounter",
    "paraphrasing": "A Chance Encounter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mine Layer",
    "paraphrasing": "Layer that mines"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Minotaur Explorer",
    "paraphrasing": "Explorer Minotaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Druid Lyrist",
    "paraphrasing": "Lyrist, the Druid"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nut Collector",
    "paraphrasing": "Collector of Nuts"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charmed Pendant",
    "paraphrasing": "Pendant Charmed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Centaur Garden",
    "paraphrasing": "Centaur's Garden"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Know Evil",
    "paraphrasing": "See Evil Know"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Blinding Drone",
    "paraphrasing": "Drone, Blinding"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Comparative Analysis",
    "paraphrasing": "Analysis of comparisons"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seed Guardian",
    "paraphrasing": "Guardian Seed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flayer Drone",
    "paraphrasing": "Drone Flayer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Strider Harness",
    "paraphrasing": "Strider's Harness"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Holdout Settlement",
    "paraphrasing": "Settlement Holdout"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Maelstrom",
    "paraphrasing": "Maelstrom"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stronghold Furnace",
    "paraphrasing": "Stronghold's Furnace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battlefield Medic",
    "paraphrasing": "Medic of the Battlefield"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crowd Favorites",
    "paraphrasing": "Popular cards"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Defensive Maneuvers",
    "paraphrasing": "Strategies for Defense"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Doubtless One",
    "paraphrasing": "One that is doubtless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Improvised Armor",
    "paraphrasing": "Armor, improvised"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Piety Charm",
    "paraphrasing": "Piety's Charm"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shared Triumph",
    "paraphrasing": "Triumph Shared"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Airborne Aid",
    "paraphrasing": "Aid from the Air"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Information Dealer",
    "paraphrasing": "Dealer of Information"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trickery Charm",
    "paraphrasing": "Charm of Trickery"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Break Open",
    "paraphrasing": "Open break"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Risky Move",
    "paraphrasing": "A risky move"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spitfire Handler",
    "paraphrasing": "Handler, Spitfire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Invigorating Boon",
    "paraphrasing": "A Boon that Invigorates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serpentine Basilisk",
    "paraphrasing": "Basilisk Serpentine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vitality Charm",
    "paraphrasing": "Charm of Vitality"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Furnace Layer",
    "paraphrasing": "Layer of the Furnace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "War Oracle",
    "paraphrasing": "Oracle of War"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Avaricious Dragon",
    "paraphrasing": "Dragon, Avaricious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Guardian Automaton",
    "paraphrasing": "Automaton Guardian"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Throwing Knife",
    "paraphrasing": "Knife, Throwing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Temple Elder",
    "paraphrasing": "Elder of the Temple"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Town Sentry",
    "paraphrasing": "Town's Sentry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Volunteer Militia",
    "paraphrasing": "Militia Volunteer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Apprentice Sorcerer",
    "paraphrasing": "Sorcerer Apprentice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Talas Explorer",
    "paraphrasing": "Talas, Explorer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Talas Merchant",
    "paraphrasing": "Talas' Merchant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Talas Warrior",
    "paraphrasing": "Talas' Warrior"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wind Sail",
    "paraphrasing": "Sail Wind"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bloodcurdling Scream",
    "paraphrasing": "A Bloodcurdling Scream"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cunning Giant",
    "paraphrasing": "Giant, Cunning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ogre Warrior",
    "paraphrasing": "Warrior Ogre"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "See Beyond",
    "paraphrasing": "Look Ahead"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Proposal",
    "paraphrasing": "A proposal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Phoenix Heart",
    "paraphrasing": "Heart of the Phoenix"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Glittering Lion",
    "paraphrasing": "Lion, Glittering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mercenary Informer",
    "paraphrasing": "Informer Mercenary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mine Bearer",
    "paraphrasing": "Bearer Mine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Troubled Healer",
    "paraphrasing": "Healer, Troubled"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Withdraw",
    "paraphrasing": "Take back"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rebel Informer",
    "paraphrasing": "Rebel Informer Card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steal Strength",
    "paraphrasing": "Take Strength from Opponent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Brawlers",
    "paraphrasing": "Brawlers, Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elephant Resurgence",
    "paraphrasing": "Resurgence of the Elephant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ghost Tactician",
    "paraphrasing": "Tactician, Ghost"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heroes Remembered",
    "paraphrasing": "Remembered Heroes"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Piracy Charm",
    "paraphrasing": "Charm of Piracy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sulfur Elemental",
    "paraphrasing": "Elemental Sulfur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Healing Leaves",
    "paraphrasing": "Leaves that heal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Noble Benefactor",
    "paraphrasing": "Benefactor, Noble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Guard Dogs",
    "paraphrasing": "Dogs Guard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Surprise Deployment",
    "paraphrasing": "Unexpected play"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sleeping Potion",
    "paraphrasing": "Potion for sleep"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Bomb",
    "paraphrasing": "Bomb of Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daring Leap",
    "paraphrasing": "A Daring Leap"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Destructive Flow",
    "paraphrasing": "Flow, Destructive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Malicious Advice",
    "paraphrasing": "Advice that is malicious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Marsh Crocodile",
    "paraphrasing": "Crocodile Marsh"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Meteor Crater",
    "paraphrasing": "Meteor Crater card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Staggering Insight",
    "paraphrasing": "Insight, staggering"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Peacekeeper Avatar",
    "paraphrasing": "Peacekeeper's Avatar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Border Guard",
    "paraphrasing": "Guard on the Border"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Devoted Hero",
    "paraphrasing": "Hero, Devoted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "False Peace",
    "paraphrasing": "Peace, False"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stern Marshal",
    "paraphrasing": "Marshal Stern"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Temporary Truce",
    "paraphrasing": "A Temporary Truce"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Capricious Sorcerer",
    "paraphrasing": "Sorcerer, Capricious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Arrogant Vampire",
    "paraphrasing": "Vampire, Arrogant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charging Bandits",
    "paraphrasing": "Bandits, Charging"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Craven Knight",
    "paraphrasing": "Knight, Craven"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mercenary Knight",
    "paraphrasing": "Knight, Mercenary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Minotaur Warrior",
    "paraphrasing": "Warrior Minotaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scorching Winds",
    "paraphrasing": "Winds, Scorching"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Plant Elemental",
    "paraphrasing": "Elemental Plant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Rooster",
    "paraphrasing": "Zodiac, Rooster"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Rabbit",
    "paraphrasing": "Rabbit Zodiac"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Tiger",
    "paraphrasing": "Zodiac's Tiger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Horse",
    "paraphrasing": "Zodiac's Horse"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Ox",
    "paraphrasing": "Zodiac's Ox"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Rat",
    "paraphrasing": "Zodiac's Rat"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Snake",
    "paraphrasing": "Zodiac's Snake"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Zodiac Goat",
    "paraphrasing": "Zodiac the Goat"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hostage Taker",
    "paraphrasing": "Hostage-Taker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gate Colossus",
    "paraphrasing": "Colossus Gate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mass Manipulation",
    "paraphrasing": "Manipulation of the Masses"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Precognitive Perception",
    "paraphrasing": "Perception of the future"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Alpha Status",
    "paraphrasing": "Status of Alpha"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seed Spark",
    "paraphrasing": "Spark Seed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Seasons Past",
    "paraphrasing": "Past Seasons"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Confirm Suspicions",
    "paraphrasing": "Confirm suspected cards"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dream Trawler",
    "paraphrasing": "Dream Trawler card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flanking Troops",
    "paraphrasing": "Troops flanking"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Broken Dam",
    "paraphrasing": "Dam, Broken"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Straw Soldiers",
    "paraphrasing": "Soldiers of Straw"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cunning Advisor",
    "paraphrasing": "Advisor, Cunning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Barbarian Horde",
    "paraphrasing": "Horde of Barbarians"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fire Bowman",
    "paraphrasing": "Bowman with Fire ability"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Independent Troops",
    "paraphrasing": "Troops, Independent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Renegade Troops",
    "paraphrasing": "Troops, Renegade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Taunting Challenge",
    "paraphrasing": "Challenge to taunt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Role Reversal",
    "paraphrasing": "Reversal of Roles"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mobilized District",
    "paraphrasing": "Mobilized District Card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Single Combat",
    "paraphrasing": "Combat, Single"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shadowed Caravel",
    "paraphrasing": "Shadow Caravel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Coveted Prize",
    "paraphrasing": "Prize that is coveted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Concerted Effort",
    "paraphrasing": "A concerted effort"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Suppression Field",
    "paraphrasing": "Field Suppression"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Copy Enchantment",
    "paraphrasing": "Duplicate Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Induce Paranoia",
    "paraphrasing": "Cause paranoia"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Infectious Host",
    "paraphrasing": "Host that is infectious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lurking Informant",
    "paraphrasing": "Informant, lurking"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cleansing Ray",
    "paraphrasing": "Ray of Cleansing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Siren Reaver",
    "paraphrasing": "Siren, Reaver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Arterial Flow",
    "paraphrasing": "Flow of Arteries"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mausoleum Harpy",
    "paraphrasing": "Mausoleum's Harpy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reaver Ambush",
    "paraphrasing": "Reaver's Ambush"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vampire Revenant",
    "paraphrasing": "Revenant Vampire"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Daring Buccaneer",
    "paraphrasing": "Buccaneer, Daring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Swaggering Corsair",
    "paraphrasing": "A swaggering corsair"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Resolute Watchdog",
    "paraphrasing": "Watchdog, Resolute"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Summary Judgment",
    "paraphrasing": "Judgment Summary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Syndicate Messenger",
    "paraphrasing": "Messenger of the Syndicate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vindictive Vampire",
    "paraphrasing": "Vampire, Vindictive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gates Ablaze",
    "paraphrasing": "Ablaze Gates"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rubble Reading",
    "paraphrasing": "Reading Rubble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spear Spewer",
    "paraphrasing": "Spear-Spewer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Final Payment",
    "paraphrasing": "Last payment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Imperious Oligarch",
    "paraphrasing": "Oligarch, Imperious"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Harmless Assault",
    "paraphrasing": "Assault, Harmless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Recurring Insight",
    "paraphrasing": "Insight that recurs"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shared Discovery",
    "paraphrasing": "Discovery Shared"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Venerated Teacher",
    "paraphrasing": "Teacher, Venerated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Explosive Revelation",
    "paraphrasing": "Revelation, Explosive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Leaf Arrow",
    "paraphrasing": "Arrow Leaf"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reinforced Bulwark",
    "paraphrasing": "Bulwark, Reinforced"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Security Blockade",
    "paraphrasing": "Blockade Security"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trained Caracal",
    "paraphrasing": "Caracal, trained"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inaction Injunction",
    "paraphrasing": "Injunction for Inaction"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Explosive Impact",
    "paraphrasing": "Impact, Explosive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lobber Crew",
    "paraphrasing": "Lobber's Crew"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Minotaur Aggressor",
    "paraphrasing": "Aggressor Minotaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collective Blessing",
    "paraphrasing": "A Collective Blessing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Common Bond",
    "paraphrasing": "A Common Bond"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hulking Ogre",
    "paraphrasing": "Ogre, Hulking"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dragon Scales",
    "paraphrasing": "Dragon's Scales"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Force Bubble",
    "paraphrasing": "Bubble Force"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frontline Strategist",
    "paraphrasing": "Strategist, Frontline"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hindering Touch",
    "paraphrasing": "Touch that hinders"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Parallel Thoughts",
    "paraphrasing": "Thoughts in Parallel"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dragon Shadow",
    "paraphrasing": "Dragon's Shadow"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Accelerated Mutation",
    "paraphrasing": "Mutation, Accelerated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Divergent Growth",
    "paraphrasing": "Growth that diverges"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dragon Fangs",
    "paraphrasing": "Dragon's Fangs"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Proteus Machine",
    "paraphrasing": "Proteus Machine card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mine Excavation",
    "paraphrasing": "Excavation of the Mine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disturbing Plot",
    "paraphrasing": "Plot that is disturbing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Burn Trail",
    "paraphrasing": "Trail Burn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flourishing Defenses",
    "paraphrasing": "Defenses that are flourishing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nurturer Initiate",
    "paraphrasing": "Initiate Nurturer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tower Above",
    "paraphrasing": "Above Tower"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Repel Intruders",
    "paraphrasing": "Intruders Repelled"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fate Transfer",
    "paraphrasing": "Transfer of Fate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Medicine Runner",
    "paraphrasing": "Runner of Medicine"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Admonition Angel",
    "paraphrasing": "Angel of Admonition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stern Constable",
    "paraphrasing": "Constable, Stern"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Broken Concentration",
    "paraphrasing": "Concentration is broken"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fleeting Memories",
    "paraphrasing": "Memories, Fleeting"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ongoing Investigation",
    "paraphrasing": "Investigation in progress"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Indulgent Aristocrat",
    "paraphrasing": "Aristocrat, Indulgent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiteful Motives",
    "paraphrasing": "Motives, Spiteful"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Equestrian Skill",
    "paraphrasing": "Skill with horses"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pack Guardian",
    "paraphrasing": "Guardian Pack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Runaway Carriage",
    "paraphrasing": "Carriage Runaway"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiritual Visit",
    "paraphrasing": "A Spiritual Visit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shape Stealer",
    "paraphrasing": "Shape-Stealer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shifting Borders",
    "paraphrasing": "Borders that shift"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Trusted Advisor",
    "paraphrasing": "Advisor, Trusted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dispense Justice",
    "paraphrasing": "Deal out Justice"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Halt Order",
    "paraphrasing": "Order to halt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shape Anew",
    "paraphrasing": "Anew Shape"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Corrupted Harvester",
    "paraphrasing": "Harvester, Corrupted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Carapace Forger",
    "paraphrasing": "Forger, Carapace"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Untamed Might",
    "paraphrasing": "Might, Untamed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Withstand Death",
    "paraphrasing": "Death Resistance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Warrior Angel",
    "paraphrasing": "Angel Warrior"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stronghold Taskmaster",
    "paraphrasing": "Stronghold, Taskmaster"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Invasion Plans",
    "paraphrasing": "Plans for invasion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Soldier",
    "paraphrasing": "Spike the Soldier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Refreshing Elixir",
    "paraphrasing": "Refreshing potion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vitality Salve",
    "paraphrasing": "Salve of Vitality"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Impulsive Destruction",
    "paraphrasing": "Destruction, Impulsive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disorienting Glower",
    "paraphrasing": "A disorienting glower"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Commanding Presence",
    "paraphrasing": "Presence, Commanding"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reverent Hoplite",
    "paraphrasing": "Hoplite, Reverent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elite Instructor",
    "paraphrasing": "Instructor Elite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Memory Drain",
    "paraphrasing": "Drain Memory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stern Dismissal",
    "paraphrasing": "Dismissal of Stern"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underworld Charger",
    "paraphrasing": "Charger from the Underworld"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underworld Fires",
    "paraphrasing": "Fires of the Underworld"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Destiny Spinner",
    "paraphrasing": "Destiny's Spinner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bronze Sword",
    "paraphrasing": "Sword, Bronze"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underworld Sentinel",
    "paraphrasing": "Sentinel of the Underworld"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Protector",
    "paraphrasing": "Protector"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Philosopher",
    "paraphrasing": "Philosopher"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Hunter",
    "paraphrasing": "Hunter card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Harvester",
    "paraphrasing": "Harvester"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Warmonger",
    "paraphrasing": "Warmonger"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Explorer",
    "paraphrasing": "Explorer card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Destined",
    "paraphrasing": "Destined"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "The Champion",
    "paraphrasing": "Champion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Decorated Griffin",
    "paraphrasing": "Griffin, Decorated"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fabled Hero",
    "paraphrasing": "A Fabled Hero"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Favored Hoplite",
    "paraphrasing": "Hoplite, favored"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Traveling Philosopher",
    "paraphrasing": "Philosopher, Traveling"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fate Foretold",
    "paraphrasing": "Foretold Fate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stymied Hopes",
    "paraphrasing": "Hopes that were stymied"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cutthroat Maneuver",
    "paraphrasing": "Maneuver, Cutthroat"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Arena Athlete",
    "paraphrasing": "Athlete from the Arena"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Labyrinth Champion",
    "paraphrasing": "Labyrinth's Champion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reverent Hunter",
    "paraphrasing": "Hunter, Reverent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Underworld Cerberus",
    "paraphrasing": "Cerberus from the Underworld"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mounted Archers",
    "paraphrasing": "Archers, Mounted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pegasus Refuge",
    "paraphrasing": "Pegasus' Refuge"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sacred Guide",
    "paraphrasing": "The Sacred Guide"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spirit Mirror",
    "paraphrasing": "Mirror Spirit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steal Enchantment",
    "paraphrasing": "Take Enchantment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bounty Hunter",
    "paraphrasing": "Hunter with a bounty"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disturbed Burial",
    "paraphrasing": "Burial, Disturbed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Drone",
    "paraphrasing": "Drone Spike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Bottle",
    "paraphrasing": "Bottle of Essence"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cleansing Meditation",
    "paraphrasing": "Meditation, Cleansing"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Equal Treatment",
    "paraphrasing": "Fair Treatment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Floating Shield",
    "paraphrasing": "Shield, Floating"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Possessed Nomad",
    "paraphrasing": "Nomad, Possessed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stern Judge",
    "paraphrasing": "Judge Stern"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Alter Reality",
    "paraphrasing": "Change Reality"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Retraced Image",
    "paraphrasing": "Image Retraced"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grotesque Hybrid",
    "paraphrasing": "Hybrid Grotesque"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Barbarian Outcast",
    "paraphrasing": "Outcast Barbarian"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Possessed Barbarian",
    "paraphrasing": "Barbarian, Possessed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Acorn Harvest",
    "paraphrasing": "Acorn's Harvest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Centaur Veteran",
    "paraphrasing": "Veteran Centaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Possessed Centaur",
    "paraphrasing": "Centaur, possessed"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Honorable Passage",
    "paraphrasing": "Passage, Honorable"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Restore Balance",
    "paraphrasing": "Balance restored"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Weathered Bodyguards",
    "paraphrasing": "Bodyguards, Weathered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ignite Memories",
    "paraphrasing": "Memories Ignite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spike Tiller",
    "paraphrasing": "Tiller, Spike"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Archery Training",
    "paraphrasing": "Training for Archery"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Private Research",
    "paraphrasing": "Research card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Disease Carriers",
    "paraphrasing": "Carriers of Disease"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rapid Decay",
    "paraphrasing": "Rapidly decaying"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flame Jet",
    "paraphrasing": "Jet of Flame"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Common Courtesy",
    "paraphrasing": "A Common Courtesy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chicken Egg",
    "paraphrasing": "Egg Chicken"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cardboard Carapace",
    "paraphrasing": "Cardboard Shell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bronze Calendar",
    "paraphrasing": "Calendar, Bronze"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Giant Fan",
    "paraphrasing": "Large Fan"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mirror Mirror",
    "paraphrasing": "Mirror, Mirror"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scissors Lizard",
    "paraphrasing": "Lizard Scissors"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expendable Troops",
    "paraphrasing": "Troops that can be expended"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Ordinary Pony",
    "paraphrasing": "Pony, Ordinary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Magical Hacker",
    "paraphrasing": "Magical, the Hacker"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aesthetic Consultation",
    "paraphrasing": "Consultation for aesthetics"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Collector Protector",
    "paraphrasing": "Collector's Protector"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Double Header",
    "paraphrasing": "Two Header"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deal Damage",
    "paraphrasing": "Inflict Damage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Name Dropping",
    "paraphrasing": "Dropping names"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Save Life",
    "paraphrasing": "Life Saved"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Persecute Artist",
    "paraphrasing": "Artist Persecution"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Symbol Status",
    "paraphrasing": "Card Status"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Defensive Formation",
    "paraphrasing": "Formation for defense"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Silent Attendant",
    "paraphrasing": "Attendant, Silent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wizard Mentor",
    "paraphrasing": "Mentor Wizard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Acidic Soil",
    "paraphrasing": "Soil with high acidity"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Animate Library",
    "paraphrasing": "Library Animate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Defective Detective",
    "paraphrasing": "Detective Defective"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chivalrous Chevalier",
    "paraphrasing": "The Chivalrous Chevalier"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Clever Combo",
    "paraphrasing": "A clever combination"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Cramped Bunker",
    "paraphrasing": "Bunker, Cramped"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "First Pick",
    "paraphrasing": "The first card chosen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Gimme Five",
    "paraphrasing": "Give me five"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Division Table",
    "paraphrasing": "Table Division"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Duplication Device",
    "paraphrasing": "Device that duplicates cards"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Guest List",
    "paraphrasing": "List of guests"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spy Eye",
    "paraphrasing": "Spyeye"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "capital offense",
    "paraphrasing": "serious crime"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pet Project",
    "paraphrasing": "Project Pet"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Record Store",
    "paraphrasing": "Record Store Card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sly Spy",
    "paraphrasing": "Spy Sly"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hot Fix",
    "paraphrasing": "Quick Repair"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Jamming Device",
    "paraphrasing": "Device that jams"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Target Minotaur",
    "paraphrasing": "Target, Minotaur"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hope Charm",
    "paraphrasing": "Charm of Hope"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Vision Charm",
    "paraphrasing": "Charm of Vision"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Death Watch",
    "paraphrasing": "Deathwatch"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lightning Cloud",
    "paraphrasing": "Cloud Lightning"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rock Slide",
    "paraphrasing": "Slide of rocks"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Elephant Grass",
    "paraphrasing": "Grass Elephant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Squandered Resources",
    "paraphrasing": "Wasted Resources"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enforcer Griffin",
    "paraphrasing": "Griffin, the Enforcer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stealth Mission",
    "paraphrasing": "Mission: Stealth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Contentious Plan",
    "paraphrasing": "A contentious plan"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charity Extractor",
    "paraphrasing": "Charity card extractor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Band Together",
    "paraphrasing": "Work together"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Callous Dismissal",
    "paraphrasing": "Dismissal, Callous"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Prison Realm",
    "paraphrasing": "Realm of Prison"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rescuer Sphinx",
    "paraphrasing": "Sphinx Rescuer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Heartwarming Redemption",
    "paraphrasing": "Redemption of Hearts"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Evolution Sage",
    "paraphrasing": "Evolution's Sage"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Revered Unicorn",
    "paraphrasing": "Unicorn, Revered"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Striped Bears",
    "paraphrasing": "Bears with stripes"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bubble Matrix",
    "paraphrasing": "Matrix Bubble"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Perimeter Captain",
    "paraphrasing": "Captain of the Perimeter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spell Contortion",
    "paraphrasing": "Contortion Spell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bazaar Trader",
    "paraphrasing": "Trader, Bazaar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Canopy Cover",
    "paraphrasing": "Cover Canopy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grappler Spider",
    "paraphrasing": "Spider Grappler"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Siren Lookout",
    "paraphrasing": "Siren's Lookout"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Deathless Ancient",
    "paraphrasing": "Ancient Deathless"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wanted Scoundrels",
    "paraphrasing": "Scoundrels Wanted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Headstrong Brute",
    "paraphrasing": "Brute, Headstrong"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Emergent Growth",
    "paraphrasing": "Growth, Emergent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sleek Schooner",
    "paraphrasing": "Schooner, Sleek"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Grasping Current",
    "paraphrasing": "Current Grasping"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Archive Trap",
    "paraphrasing": "Trap to archive"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Adventuring Gear",
    "paraphrasing": "Gear for adventuring"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Enigma Thief",
    "paraphrasing": "Enigma, the Thief"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Allied Assault",
    "paraphrasing": "Allied Assault card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Attended Healer",
    "paraphrasing": "Healer who attended"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dauntless Unity",
    "paraphrasing": "Dauntless and Unity"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expedition Healer",
    "paraphrasing": "Healer from Expedition"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Paired Tactician",
    "paraphrasing": "Tactician in pairs"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Practiced Tactics",
    "paraphrasing": "Tactics, Practiced"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Concerted Defense",
    "paraphrasing": "Defense, Concerted"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expedition Diviner",
    "paraphrasing": "Expedition's Diviner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Field Research",
    "paraphrasing": "Research Card"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shell Shield",
    "paraphrasing": "Shield Shell"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Acquisitions Expert",
    "paraphrasing": "Expert in acquisitions"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Highborn Vampire",
    "paraphrasing": "Vampire, Highborn"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Expedition Champion",
    "paraphrasing": "Expedition's Champion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scavenged Blade",
    "paraphrasing": "Blade recovered from scavenging"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sneaking Guide",
    "paraphrasing": "Guide for Sneaking"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dauntless Survivor",
    "paraphrasing": "Dauntless, Survivor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Veteran Adventurer",
    "paraphrasing": "Adventurer, Veteran"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Relic Amulet",
    "paraphrasing": "Amulet Relic"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spare Supplies",
    "paraphrasing": "Additional cards"
  },
  {
    "database_id": "car_1",
    "table": "car_names",
    "column": "make",
    "original_value": "chrysler cordoba",
    "paraphrasing": "Chrysler C\u00f3rdoba"
  },
  {
    "database_id": "car_1",
    "table": "car_names",
    "column": "make",
    "original_value": "dodge rampage",
    "paraphrasing": "Dodge Ramcharger"
  },
  {
    "database_id": "student_transcripts_tracking",
    "table": "addresses",
    "column": "country",
    "original_value": "Kyrgyz Republic",
    "paraphrasing": "Kyrgyzstan"
  },
  {
    "database_id": "online_exams",
    "table": "exams",
    "column": "subject_code",
    "original_value": "Art History",
    "paraphrasing": "History of Art"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "watermark",
    "original_value": "transformers",
    "paraphrasing": "transformers watermark"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Hellas",
    "paraphrasing": "Greece"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Southern California",
    "paraphrasing": "Southern California region"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Northeastern US",
    "paraphrasing": "US Northeast"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Boston MA",
    "paraphrasing": "Boston, Massachusetts"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Saint Moscow",
    "paraphrasing": "Moscow, Saint"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Northern Europe",
    "paraphrasing": "Europe, Northern"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Bombay",
    "paraphrasing": "Mumbai"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Pacific Northwest",
    "paraphrasing": "PNW region"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Portland OR",
    "paraphrasing": "Portland, Oregon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "The Netherlands",
    "paraphrasing": "Netherlands"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "European Union",
    "paraphrasing": "EU"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "China mainland",
    "paraphrasing": "Mainland China"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Brasil",
    "paraphrasing": "Brazil"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Persian Gulf",
    "paraphrasing": "Gulf region"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Swansea MA",
    "paraphrasing": "Swansea, Massachusetts"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Paris France",
    "paraphrasing": "Paris, France"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Washington DC",
    "paraphrasing": "Washington, D.C."
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "East Coast",
    "paraphrasing": "Eastern Seaboard"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Central Europe",
    "paraphrasing": "Europe, Central"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "g\u00f6teborg",
    "paraphrasing": "gothenburg"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Center Europe",
    "paraphrasing": "Central Europe"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Lower Manhattan",
    "paraphrasing": "Manhattan, lower"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Kathmandu Nepal",
    "paraphrasing": "Kathmandu, Nepal"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Dirty Jersey",
    "paraphrasing": "New Jersey"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "The Bay",
    "paraphrasing": "San Francisco Bay Area"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Haifa Israel",
    "paraphrasing": "Haifa, Israel"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Peking",
    "paraphrasing": "Beijing"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Downtown Burbank",
    "paraphrasing": "Burbank downtown"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Northern California",
    "paraphrasing": "Northern CA"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Cambridge MA",
    "paraphrasing": "Cambridge, Massachusetts"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Davis CA",
    "paraphrasing": "Davis, California"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Great Britain",
    "paraphrasing": "United Kingdom"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Perth Australia",
    "paraphrasing": "Perth, Australia"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Greater Seattle",
    "paraphrasing": "Seattle area"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Aachen Germany",
    "paraphrasing": "Aachen, Germany"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Czech republic",
    "paraphrasing": "Czechia"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Manhattan Kansas",
    "paraphrasing": "Manhattan, Kansas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Sydney Australia",
    "paraphrasing": "Sydney, Australia"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Italia",
    "paraphrasing": "Italy"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Ontario Canada",
    "paraphrasing": "Ontario, Canada"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Portland Oregon",
    "paraphrasing": "Portland, Oregon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Northern Virginia",
    "paraphrasing": "Northern VA"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Cambridge University",
    "paraphrasing": "University of Cambridge"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "LA",
    "paraphrasing": "Los Angeles"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Northern Nevada",
    "paraphrasing": "Nevada, Northern"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "the Internet",
    "paraphrasing": "online"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Hyderabad India",
    "paraphrasing": "Hyderabad, India"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "Central California",
    "paraphrasing": "California, Central"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "nanjing CHINA",
    "paraphrasing": "Nanjing, China"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Amherst",
    "paraphrasing": "Amherst, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Hatfield",
    "paraphrasing": "Hatfield, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Warren",
    "paraphrasing": "Warren, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Lee",
    "paraphrasing": "Lee, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Monroe Bridge",
    "paraphrasing": "Monroe Bridge city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Townsend",
    "paraphrasing": "Townsend, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Princeton",
    "paraphrasing": "Princeton East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Lancaster",
    "paraphrasing": "Lancaster, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Chelmsford",
    "paraphrasing": "Chelmsford, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Mansfield",
    "paraphrasing": "Mansfield, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Walpole",
    "paraphrasing": "Walpole, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Walpole",
    "paraphrasing": "Walpole, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Weymouth",
    "paraphrasing": "Weymouth, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Weymouth",
    "paraphrasing": "Weymouth, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Pembroke",
    "paraphrasing": "Pembroke, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Sandwich",
    "paraphrasing": "Sandwich, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Orleans",
    "paraphrasing": "Orleans, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Taunton",
    "paraphrasing": "Taunton, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Dartmouth",
    "paraphrasing": "Dartmouth, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Greenwich",
    "paraphrasing": "Greenwich West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Greenwich",
    "paraphrasing": "Greenwich East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mont Vernon",
    "paraphrasing": "Mont Vernon town"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Nottingham",
    "paraphrasing": "Nottingham West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Peterborough",
    "paraphrasing": "Peterborough West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Lebanon",
    "paraphrasing": "Lebanon, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Center Conway",
    "paraphrasing": "Conway Center"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Center Strafford",
    "paraphrasing": "Strafford Center"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Intervale",
    "paraphrasing": "Intervale town"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Hampton",
    "paraphrasing": "Northampton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Tamworth",
    "paraphrasing": "Tamworth South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Center Lovell",
    "paraphrasing": "Lovell Center"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Poland",
    "paraphrasing": "East Poland, ME"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lisbon Falls",
    "paraphrasing": "Lisbon Falls, Maine"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Paris",
    "paraphrasing": "Paris, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Paris",
    "paraphrasing": "Paris, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Gardiner",
    "paraphrasing": "Gardiner, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Bristol",
    "paraphrasing": "Bristol South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Clayton Lake",
    "paraphrasing": "Clayton Lake city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Belgrade Lakes",
    "paraphrasing": "Belgrade Lakes, Maine"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Randolph",
    "paraphrasing": "Randolph, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Woodstock",
    "paraphrasing": "Woodstock, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Springfield",
    "paraphrasing": "Springfield, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Londonderry",
    "paraphrasing": "Londonderry, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Arlington",
    "paraphrasing": "Arlington East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Manchester Center",
    "paraphrasing": "Manchester, Center"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Halifax",
    "paraphrasing": "Halifax, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Center Rutland",
    "paraphrasing": "Rutland Center"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Charleston",
    "paraphrasing": "Charleston East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lower Waterford",
    "paraphrasing": "Lower Waterford Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Newport Center",
    "paraphrasing": "Newport Centre"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Charleston",
    "paraphrasing": "Charleston, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Canton Center",
    "paraphrasing": "Canton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Glastonbury",
    "paraphrasing": "Glastonbury, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Falls Village",
    "paraphrasing": "Falls Village, CT"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Vernon Rockville",
    "paraphrasing": "Rockville Vernon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Glastonbury",
    "paraphrasing": "Glastonbury South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Stafford Springs",
    "paraphrasing": "Stafford Springs, CT"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Windsor Locks",
    "paraphrasing": "Locks Windsor"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Franklin",
    "paraphrasing": "Franklin, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Woodstock Valley",
    "paraphrasing": "Woodstock Valley city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Arlington",
    "paraphrasing": "Arlington, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Highland Lakes",
    "paraphrasing": "Highland Lakes city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Waterford Works",
    "paraphrasing": "Waterford"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Millstone Township",
    "paraphrasing": "Millstone Township city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Normandy Beach",
    "paraphrasing": "Normandy Beach city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Manchester Township",
    "paraphrasing": "Manchester Township, NJ"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Harrison",
    "paraphrasing": "Harrison, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint James",
    "paraphrasing": "Saint James City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fort Hunter",
    "paraphrasing": "Fort Hunter City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Petersburg",
    "paraphrasing": "Petersburg city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Bethlehem",
    "paraphrasing": "Bethlehem, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Durham",
    "paraphrasing": "Durham, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Greenfield Park",
    "paraphrasing": "Greenfield Park city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Camp",
    "paraphrasing": "West Camp Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fremont Center",
    "paraphrasing": "Fremont"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Middle Granville",
    "paraphrasing": "Granville, Middle"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Granville",
    "paraphrasing": "Granville, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Bombay",
    "paraphrasing": "Mumbai"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Lawrence",
    "paraphrasing": "Lawrence, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Syracuse",
    "paraphrasing": "Syracuse, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Monroe",
    "paraphrasing": "Monroe, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Holland Patent",
    "paraphrasing": "Holland, Patent"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Springfield Center",
    "paraphrasing": "Springfield"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Plymouth",
    "paraphrasing": "Plymouth South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Davenport",
    "paraphrasing": "Davenport, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lake View",
    "paraphrasing": "Lake View City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Boston",
    "paraphrasing": "Boston, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Evans",
    "paraphrasing": "Evans, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Dayton",
    "paraphrasing": "Dayton, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Stella Niagara",
    "paraphrasing": "Stella, Niagara"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Wales Center",
    "paraphrasing": "Wales"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Williamson",
    "paraphrasing": "Williamson, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Livonia Center",
    "paraphrasing": "Livonia"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Ontario Center",
    "paraphrasing": "Ontario Center City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Henrietta",
    "paraphrasing": "Henrietta, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Kill Buck",
    "paraphrasing": "Killbuck"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Beaver Dams",
    "paraphrasing": "Beaver Dams city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Elizabeth",
    "paraphrasing": "Elizabeth, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Pittsburgh",
    "paraphrasing": "Pittsburgh East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Eighty Four",
    "paraphrasing": "Eighty-Four"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Meadow Lands",
    "paraphrasing": "Meadow Lands City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Salisbury",
    "paraphrasing": "Salisbury West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Apollo",
    "paraphrasing": "North Apollo City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Spring Church",
    "paraphrasing": "Spring Church, PA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Marion Center",
    "paraphrasing": "Marion Center City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Penn Run",
    "paraphrasing": "Penn Run Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Falls Creek",
    "paraphrasing": "Falls Creek City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Knox Dale",
    "paraphrasing": "Knoxdale"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Butler",
    "paraphrasing": "Butler, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Washington",
    "paraphrasing": "Washington, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Cranberry Twp",
    "paraphrasing": "Cranberry Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Ford Cliff",
    "paraphrasing": "Fordcliff"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Hickory",
    "paraphrasing": "Hickory East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North East",
    "paraphrasing": "Northeast"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Broad Top",
    "paraphrasing": "Broad Top City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Decatur",
    "paraphrasing": "Decatur West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Morris Run",
    "paraphrasing": "Morris Run, PA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Union",
    "paraphrasing": "Mount Union, PA"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Newton Hamilton",
    "paraphrasing": "Hamilton, Newton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Beaver Meadows",
    "paraphrasing": "Beaver Meadows City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Johns",
    "paraphrasing": "St. Johns"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Falls",
    "paraphrasing": "Falls City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "White Haven",
    "paraphrasing": "Whitehaven"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Wilkes Barre",
    "paraphrasing": "Wilkes-Barre"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Warren Center",
    "paraphrasing": "Warren Center City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Line Lexington",
    "paraphrasing": "Lexington Line"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Washington Crossing",
    "paraphrasing": "Washington Crossing Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Peters",
    "paraphrasing": "St. Peters"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Spring Mount",
    "paraphrasing": "Spring Mount Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Georges",
    "paraphrasing": "St. Georges"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Camden Wyoming",
    "paraphrasing": "Wyoming, Camden"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Charlotte Hall",
    "paraphrasing": "Charlotte Hall, MD"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Chesapeake Beach",
    "paraphrasing": "Chesapeake Beach town"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "District Heights",
    "paraphrasing": "District Heights, MD"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Long Green",
    "paraphrasing": "Long Green, Maryland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Sparks Glencoe",
    "paraphrasing": "Glencoe, Sparks"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Mclean",
    "paraphrasing": "Mclean, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lacey Spring",
    "paraphrasing": "Lacey Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "King William",
    "paraphrasing": "King William city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Hampden Sydney",
    "paraphrasing": "Hampden-Sydney"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Sandy Level",
    "paraphrasing": "Sandy Level City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Glade Spring",
    "paraphrasing": "Glade Spring City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Head Waters",
    "paraphrasing": "Headwaters"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Augusta",
    "paraphrasing": "Augusta West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Berkeley Springs",
    "paraphrasing": "Berkeley Springs, WV"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mac Arthur",
    "paraphrasing": "MacArthur"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Shady Spring",
    "paraphrasing": "Shady Spring city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Clare",
    "paraphrasing": "Mount Clare, WV"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Green Spring",
    "paraphrasing": "Green Spring City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Yellow Spring",
    "paraphrasing": "Yellow Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Winston Salem",
    "paraphrasing": "Winston-Salem"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Snow Camp",
    "paraphrasing": "Snow Camp, NC"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Willow Spring",
    "paraphrasing": "Willow Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Mourne",
    "paraphrasing": "Mount Mourne Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Gray Court",
    "paraphrasing": "Graycourt"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Ninety Six",
    "paraphrasing": "Ninety-Six"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Marks",
    "paraphrasing": "St. Marks"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Port",
    "paraphrasing": "North Port city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Cloud",
    "paraphrasing": "St. Cloud"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Spring Garden",
    "paraphrasing": "Spring Garden City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Deer Lodge",
    "paraphrasing": "Deer Lodge City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Red Banks",
    "paraphrasing": "Red Bank"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Kalb",
    "paraphrasing": "DeKalb"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Catharine",
    "paraphrasing": "St. Catharine"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Perry Park",
    "paraphrasing": "Perry Park city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Paint Lick",
    "paraphrasing": "Paint Lick Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fall Rock",
    "paraphrasing": "Fall Rock Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Portsmouth",
    "paraphrasing": "Portsmouth South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Boons Camp",
    "paraphrasing": "Boons Camp Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Williamson",
    "paraphrasing": "Williamson, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Bee Spring",
    "paraphrasing": "Bee Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Louisville",
    "paraphrasing": "Louisville West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Louisville",
    "paraphrasing": "St. Louisville"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Georgetown",
    "paraphrasing": "Georgetown, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Lebanon",
    "paraphrasing": "Lebanon, South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Sinking Spring",
    "paraphrasing": "Sinking Spring Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Terrace Park",
    "paraphrasing": "Park Terrace"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Alexandria",
    "paraphrasing": "Alexandria West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Manchester",
    "paraphrasing": "Manchester West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Portsmouth",
    "paraphrasing": "Portsmouth West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Willow Wood",
    "paraphrasing": "Willow Wood city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Manilla",
    "paraphrasing": "Manila"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Rome City",
    "paraphrasing": "Rome"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Joe",
    "paraphrasing": "St. Joe"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Manchester",
    "paraphrasing": "Manchester, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Enterprise",
    "paraphrasing": "Enterprise East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Cambridge City",
    "paraphrasing": "Cambridge"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Anthony",
    "paraphrasing": "St. Anthony"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Battle Ground",
    "paraphrasing": "Battle Ground city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Center Line",
    "paraphrasing": "Centerline"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Louis",
    "paraphrasing": "St. Louis"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Carp Lake",
    "paraphrasing": "Carp Lake Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Indian River",
    "paraphrasing": "Indian River City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Luxemburg",
    "paraphrasing": "Luxembourg"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Lucas",
    "paraphrasing": "Saint Lucas City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Auburn",
    "paraphrasing": "Mount Auburn City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Morning Sun",
    "paraphrasing": "Morning Sun City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Columbus City",
    "paraphrasing": "Columbus"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Witt",
    "paraphrasing": "DeWitt"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Forest",
    "paraphrasing": "DeForest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Patch Grove",
    "paraphrasing": "Patchogue"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fall Creek",
    "paraphrasing": "Fall Creek City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Grand View",
    "paraphrasing": "Grand View City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Buffalo Lake",
    "paraphrasing": "Buffalo Lake, Minnesota"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Peter",
    "paraphrasing": "St. Peter"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fifty Lakes",
    "paraphrasing": "Fifty Lakes City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Pelican Rapids",
    "paraphrasing": "Pelican Rapids city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Artesian",
    "paraphrasing": "Artesia"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Lawrence",
    "paraphrasing": "Saint Lawrence City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Bullhead",
    "paraphrasing": "Bullhead City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Devils Lake",
    "paraphrasing": "Devils Lake city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Cannon Ball",
    "paraphrasing": "Cannon Ball, North Dakota"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fort Harrison",
    "paraphrasing": "Fort Harrison City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Thompson Falls",
    "paraphrasing": "Thompson Falls, MT"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Chicago",
    "paraphrasing": "Chicago, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Worth",
    "paraphrasing": "Worth, Illinois"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Summit Argo",
    "paraphrasing": "Summit, Argo"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Dubuque",
    "paraphrasing": "Dubuque, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Savanna",
    "paraphrasing": "Savannah"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Loves Park",
    "paraphrasing": "Loves Park city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Illinois City",
    "paraphrasing": "City in Illinois"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Rapids City",
    "paraphrasing": "City of Rapids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West Brooklyn",
    "paraphrasing": "Brooklyn West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Henderson",
    "paraphrasing": "Henderson, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Kingston Mines",
    "paraphrasing": "Kingston Mines city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Land",
    "paraphrasing": "DeLand"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Dallas City",
    "paraphrasing": "Dallas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "West York",
    "paraphrasing": "York, West"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Doe Run",
    "paraphrasing": "Doe Run City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Old Appleton",
    "paraphrasing": "Appleton, Old"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lees Summit",
    "paraphrasing": "Lee's Summit"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Rock Port",
    "paraphrasing": "Rockport"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "La Russell",
    "paraphrasing": "La Russell City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Malta Bend",
    "paraphrasing": "Malta Bend City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Cook Sta",
    "paraphrasing": "Cook Station"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Half Way",
    "paraphrasing": "Halfway"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Reeds Spring",
    "paraphrasing": "Reeds Spring, MO"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Greenfield",
    "paraphrasing": "Greenfield South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Shawnee Mission",
    "paraphrasing": "Shawnee Mission city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Garden Plain",
    "paraphrasing": "Garden Plain City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Gabriel",
    "paraphrasing": "Saint Gabriel City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Hall Summit",
    "paraphrasing": "Hall Summit Township"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Ida",
    "paraphrasing": "Mount Ida City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Rose Bud",
    "paraphrasing": "Rose Bud, Arkansas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "O Kean",
    "paraphrasing": "Okean"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Natural Dam",
    "paraphrasing": "Natural Dam City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Tom Bean",
    "paraphrasing": "Tom Bean, Texas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Jo",
    "paraphrasing": "Saint Jo City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Santa Anna",
    "paraphrasing": "Santa Ana"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Valley Spring",
    "paraphrasing": "Valley Spring city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Houston",
    "paraphrasing": "Houston, North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "South Houston",
    "paraphrasing": "Houston South"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "George West",
    "paraphrasing": "George West, TX"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Roma",
    "paraphrasing": "Rome"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Denver City",
    "paraphrasing": "Denver City, Texas"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Big Spring",
    "paraphrasing": "Big Spring, TX"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "San Luis",
    "paraphrasing": "San Luis Obispo"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Granite Canon",
    "paraphrasing": "Granite Canyon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "American Falls",
    "paraphrasing": "American Falls city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Huston",
    "paraphrasing": "Houston"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Clark Fork",
    "paraphrasing": "Clark Fork, ID"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Forest Lakes",
    "paraphrasing": "Forest Lakes City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mt Baldy",
    "paraphrasing": "Mount Baldy"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Irvine",
    "paraphrasing": "Irvine, East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Big Pine",
    "paraphrasing": "Big Pine City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Chicago Park",
    "paraphrasing": "Park Chicago"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Butte City",
    "paraphrasing": "Butte"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Hamilton City",
    "paraphrasing": "Hamilton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Oregon House",
    "paraphrasing": "Oregon House city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Rogue River",
    "paraphrasing": "Rogue River city"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Lakewood",
    "paraphrasing": "Lakewood North"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Olympia",
    "paraphrasing": "Olympia East"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Meyers Chuck",
    "paraphrasing": "Chuck Meyers"
  }
]