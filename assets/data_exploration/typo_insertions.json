[
  {
    "table": "addresses",
    "column": "city"
  },
  {
    "table": "badges",
    "column": "name"
  },
  {
    "table": "car_makers",
    "column": "fullname"
  },
  {
    "table": "car_names",
    "column": "model"
  },
  {
    "table": "cards",
    "column": "artist"
  },
  {
    "table": "cards",
    "column": "name"
  },
  {
    "table": "cards",
    "column": "originaltype"
  },
  {
    "table": "cards",
    "column": "subtypes"
  },
  {
    "table": "cards",
    "column": "type"
  },
  {
    "table": "circuits",
    "column": "name"
  },
  {
    "table": "comments",
    "column": "text"
  },
  {
    "table": "constructors",
    "column": "name"
  },
  {
    "table": "countrylanguage",
    "column": "language"
  },
  {
    "table": "departments",
    "column": "department_name"
  },
  {
    "table": "driver",
    "column": "name"
  },
  {
    "table": "drivers",
    "column": "forename"
  },
  {
    "table": "expense",
    "column": "expense_description"
  },
  {
    "table": "foreign_data",
    "column": "name"
  },
  {
    "table": "model_list",
    "column": "model"
  },
  {
    "table": "player",
    "column": "player_name"
  },
  {
    "table": "posthistory",
    "column": "text"
  },
  {
    "table": "posthistory",
    "column": "userdisplayname"
  },
  {
    "table": "posts",
    "column": "title"
  },
  {
    "table": "program",
    "column": "title"
  },
  {
    "table": "schools",
    "column": "admfname1"
  },
  {
    "table": "schools",
    "column": "admlname1"
  },
  {
    "table": "schools",
    "column": "city"
  },
  {
    "table": "schools",
    "column": "district"
  },
  {
    "table": "schools",
    "column": "mailcity"
  },
  {
    "table": "status",
    "column": "status"
  },
  {
    "table": "superhero",
    "column": "full_name"
  },
  {
    "table": "superhero",
    "column": "superhero_name"
  },
  {
    "table": "tags",
    "column": "tagname"
  },
  {
    "table": "users",
    "column": "displayname"
  },
  {
    "table": "users",
    "column": "location"
  },
  {
    "table": "zip_code",
    "column": "city"
  },
  {
    "table": "zip_code",
    "column": "county"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Remover a Alma",
    "typo_insertion": "Remover a Alama"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Incorporation",
    "typo_insertion": "Incorportation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ala de Escudos",
    "typo_insertion": "Alae de Escudos"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vizir de la chute du sable",
    "typo_insertion": "Vizir de la chute du sablle"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Shikari Leonid",
    "typo_insertion": "Shikari Leonird"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Plans secrets",
    "typo_insertion": "Plans secrests"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Draco de la Academia",
    "typo_insertion": "Draco de la Academaia"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Bolas Leonid",
    "typo_insertion": "Bolas Leonird"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Roc territorial",
    "typo_insertion": "Roc terrritorial"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Refugio verde",
    "typo_insertion": "Refugio verede"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Troll Marino",
    "typo_insertion": "Troll Mariono"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Formation",
    "typo_insertion": "Formatiion"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Lune alpine",
    "typo_insertion": "Lune alipine"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Branches de gestation",
    "typo_insertion": "Branc hes de gestation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Charisma",
    "typo_insertion": "Charisama"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Sombre feral",
    "typo_insertion": "S ombre feral"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Wu Elite Cavalry",
    "typo_insertion": "Wu Elite Cavalary"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Ghostly Visit",
    "typo_insertion": "Ghostly Visist"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Three Visits",
    "typo_insertion": "Three Visists"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Abrogation mystique",
    "typo_insertion": "Abrrogation mystique"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Rector de la Academia",
    "typo_insertion": "Rector de la Academaia"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Humiliation",
    "typo_insertion": "Humilitation"
  },
  {
    "database_id": "card_games",
    "table": "foreign_data",
    "column": "name",
    "original_value": "Vizir du Scorpion",
    "typo_insertion": "Vizir du Scorpioon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Suffolk County",
    "typo_insertion": "Suffolk Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Coos County",
    "typo_insertion": "Coos Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Morris County",
    "typo_insertion": "Morris Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bergen County",
    "typo_insertion": "Bergen Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sussex County",
    "typo_insertion": "Sussex Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Salem County",
    "typo_insertion": "Salem Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ocean County",
    "typo_insertion": "Ocean Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Kings County",
    "typo_insertion": "Kings Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Greene County",
    "typo_insertion": "Greene Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Columbia County",
    "typo_insertion": "Columbia Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ulster County",
    "typo_insertion": "Ulster Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cayuga County",
    "typo_insertion": "Cayuga Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cortland County",
    "typo_insertion": "Cortland Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lewis County",
    "typo_insertion": "Lewis Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Allegheny County",
    "typo_insertion": "Allegheny Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cameron County",
    "typo_insertion": "Cameron Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Perry County",
    "typo_insertion": "Perry Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Adams County",
    "typo_insertion": "Adams Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Carbon County",
    "typo_insertion": "Carbon Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bucks County",
    "typo_insertion": "Bucks Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Berks County",
    "typo_insertion": "Berks Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Pike County",
    "typo_insertion": "Pike Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Fairfax County",
    "typo_insertion": "Fairfax Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Clarke County",
    "typo_insertion": "Clarke Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Calvert County",
    "typo_insertion": "Calvert Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Anne Arundel County",
    "typo_insertion": "Anne Aruundel County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cecil County",
    "typo_insertion": "Cecil Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Page County",
    "typo_insertion": "Page Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Amelia County",
    "typo_insertion": "Amelia Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mathews County",
    "typo_insertion": "Mathews Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Pulaski County",
    "typo_insertion": "Pulaski Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Giles County",
    "typo_insertion": "Giles Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wise County",
    "typo_insertion": "Wise Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Summers County",
    "typo_insertion": "Summers Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mason County",
    "typo_insertion": "Mason Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Calhoun County",
    "typo_insertion": "Calhoun Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Martin County",
    "typo_insertion": "Martin Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Tyler County",
    "typo_insertion": "Tyler Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Barbour County",
    "typo_insertion": "Barbour Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hardy County",
    "typo_insertion": "Hardy Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Moore County",
    "typo_insertion": "Moore Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Vance County",
    "typo_insertion": "Vance Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Beaufort County",
    "typo_insertion": "Beaufort Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bertie County",
    "typo_insertion": "Bertie Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cleveland County",
    "typo_insertion": "Cleaveland County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Carteret County",
    "typo_insertion": "Carteret Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wilkes County",
    "typo_insertion": "Wilkes Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ashe County",
    "typo_insertion": "Ashe Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Aiken County",
    "typo_insertion": "Aiken Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dillon County",
    "typo_insertion": "Dillon Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "McCormick County",
    "typo_insertion": "McCormick Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hampton County",
    "typo_insertion": "Hampton Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Jasper County",
    "typo_insertion": "Jasper Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cobb County",
    "typo_insertion": "Cobb Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lamar County",
    "typo_insertion": "Lamar Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Candler County",
    "typo_insertion": "Candler Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Banks County",
    "typo_insertion": "Banks Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Stephens County",
    "typo_insertion": "Stephens Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Towns County",
    "typo_insertion": "Towns Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Elbert County",
    "typo_insertion": "Elbert Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Crisp County",
    "typo_insertion": "Crisp Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Baldwin County",
    "typo_insertion": "Baldwin Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bibb County",
    "typo_insertion": "Bibb Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bryan County",
    "typo_insertion": "Bryan Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Long County",
    "typo_insertion": "Long Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ware County",
    "typo_insertion": "Ware Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Clinch County",
    "typo_insertion": "Clinch Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Brooks County",
    "typo_insertion": "Brooks Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Worth County",
    "typo_insertion": "Worth Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bay County",
    "typo_insertion": "Bay Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Glades County",
    "typo_insertion": "Glades Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Collier County",
    "typo_insertion": "Collier Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Manatee County",
    "typo_insertion": "Manatee Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Shelby County",
    "typo_insertion": "Shelby Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hale County",
    "typo_insertion": "Hale Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bullock County",
    "typo_insertion": "Bullock Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mobile County",
    "typo_insertion": "Mobile Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Chambers County",
    "typo_insertion": "Chambers Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Choctaw County",
    "typo_insertion": "Choctaw Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cannon County",
    "typo_insertion": "Cannon Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sumner County",
    "typo_insertion": "Sumner Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Carter County",
    "typo_insertion": "Carter Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dyer County",
    "typo_insertion": "Dyer Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Decatur County",
    "typo_insertion": "Decatur Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hardin County",
    "typo_insertion": "Hardin Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Tate County",
    "typo_insertion": "Tate Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hinds County",
    "typo_insertion": "Hinds Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oldham County",
    "typo_insertion": "Oldham Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Meade County",
    "typo_insertion": "Meade Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Boyle County",
    "typo_insertion": "Boyle Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wolfe County",
    "typo_insertion": "Wolfe Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Graves County",
    "typo_insertion": "Graves Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Allen County",
    "typo_insertion": "Allen Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Casey County",
    "typo_insertion": "Casey Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ross County",
    "typo_insertion": "Ross Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Ottawa County",
    "typo_insertion": "Ottawa Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Noble County",
    "typo_insertion": "Noble Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "LaGrange County",
    "typo_insertion": "LaGrange Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Wells County",
    "typo_insertion": "Wells Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Dearborn County",
    "typo_insertion": "Dearborn Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Vigo County",
    "typo_insertion": "Vigo Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Clare County",
    "typo_insertion": "Clare Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Emmet County",
    "typo_insertion": "Emmet Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Chippewa County",
    "typo_insertion": "Chippewa Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Luce County",
    "typo_insertion": "Luce Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sioux County",
    "typo_insertion": "Sioux Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mills County",
    "typo_insertion": "Mills Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Iowa County",
    "typo_insertion": "Iowa Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Calumet County",
    "typo_insertion": "Calumet Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sauk County",
    "typo_insertion": "Sauk Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Rusk County",
    "typo_insertion": "Rusk Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sawyer County",
    "typo_insertion": "Sawyerr County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Steele County",
    "typo_insertion": "Steele Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Carver County",
    "typo_insertion": "Carver Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Meeker County",
    "typo_insertion": "Meeker Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hubbard County",
    "typo_insertion": "Hubbard Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "McPherson County",
    "typo_insertion": "McPhearson County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sully County",
    "typo_insertion": "Sully Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Stanley County",
    "typo_insertion": "Staneley County"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Sargent County",
    "typo_insertion": "Sargent Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Eddy County",
    "typo_insertion": "Eddy Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Oliver County",
    "typo_insertion": "Oliver Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Daniels County",
    "typo_insertion": "Daniels Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mclean County",
    "typo_insertion": "Mclean Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Coles County",
    "typo_insertion": "Coles Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bond County",
    "typo_insertion": "Bond Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Bates County",
    "typo_insertion": "Bates Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cole County",
    "typo_insertion": "Cole Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cooper County",
    "typo_insertion": "Cooper Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Barber County",
    "typo_insertion": "Barber Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lane County",
    "typo_insertion": "Lane Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Burt County",
    "typo_insertion": "Burt Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Gage County",
    "typo_insertion": "Gage Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Nance County",
    "typo_insertion": "Nance Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Loup County",
    "typo_insertion": "Loup Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lincoln Parish",
    "typo_insertion": "Linc oln Parish"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Greer County",
    "typo_insertion": "Greer Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Latimer County",
    "typo_insertion": "Latimer Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Denton County",
    "typo_insertion": "Denton Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Camp County",
    "typo_insertion": "Camp Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Titus County",
    "typo_insertion": "Titus Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Gregg County",
    "typo_insertion": "Gregg Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Parker County",
    "typo_insertion": "Parker Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Hood County",
    "typo_insertion": "Hood Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Cooke County",
    "typo_insertion": "Cooke Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Baylor County",
    "typo_insertion": "Baylor Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Galveston County",
    "typo_insertion": "Galveston Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Victoria County",
    "typo_insertion": "Victoria Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Refugio County",
    "typo_insertion": "Refugio Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Webb County",
    "typo_insertion": "Webb Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Starr County",
    "typo_insertion": "Starr Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lamb County",
    "typo_insertion": "Lamb Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Gaines County",
    "typo_insertion": "Gaines Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Nolan County",
    "typo_insertion": "Nolan Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Reeves County",
    "typo_insertion": "Reeves Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Borden County",
    "typo_insertion": "Borden Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Caribou County",
    "typo_insertion": "Caribou Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Gem County",
    "typo_insertion": "Gem Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Weber County",
    "typo_insertion": "Weber Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Pima County",
    "typo_insertion": "Pima Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mohave County",
    "typo_insertion": "Mohave Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Apache County",
    "typo_insertion": "Apache Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Mora County",
    "typo_insertion": "Mora Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Curry County",
    "typo_insertion": "Curry Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Lea County",
    "typo_insertion": "Lea Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Quay County",
    "typo_insertion": "Quay Ccounty"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "county",
    "original_value": "Shasta County",
    "typo_insertion": "Shasta Ccounty"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Excel but I can switch to R if needed",
    "typo_insertion": "Excel but I can switch to R if neeeded"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "I need more steps to proceed this problem",
    "typo_insertion": "I need more steps to proceeed this problem"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "bump bump bump bump",
    "typo_insertion": "bump bump bump buump"
  },
  {
    "database_id": "codebase_community",
    "table": "comments",
    "column": "text",
    "original_value": "Probably because its because its easier to work with squares in equations than a modulus sign",
    "typo_insertion": "Probablly because its because its easier to work with squares in equations than a modulus sign"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "location",
    "original_value": "the Internet",
    "typo_insertion": "the Internent"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "subtypes",
    "original_value": "Forest",
    "typo_insertion": "Foreest"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Harold Osborn",
    "typo_insertion": "Harold Osborrn"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Mick Rory",
    "typo_insertion": "Mick Rorry"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Curtis Connors",
    "typo_insertion": "Curtiss Connors"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "David Reid",
    "typo_insertion": "David Reaid"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Lorna Sally Dane",
    "typo_insertion": "Lorna Salley Dane"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Daisy Louise Johnson",
    "typo_insertion": "Daisy Louiese Johnson"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "full_name",
    "original_value": "Adam Warlock",
    "typo_insertion": "Adam Warloock"
  },
  {
    "database_id": "formula_1",
    "table": "circuits",
    "column": "name",
    "original_value": "Indianapolis Motor Speedway",
    "typo_insertion": "Indianapolois Motor Speedway"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "originaltype",
    "original_value": "Snow Sorcery",
    "typo_insertion": "Snow Sorycery"
  },
  {
    "database_id": "student_club",
    "table": "expense",
    "column": "expense_description",
    "original_value": "Club shirts",
    "typo_insertion": "Club shirtts"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Randomized Response With Continuous Outcome",
    "typo_insertion": "Randomized Responsee With Continuous Outcome"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Non normality and bootstrapping",
    "typo_insertion": "Non normaility and bootstrapping"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo integration help needed",
    "typo_insertion": "Monte Carolo integration help needed"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Transformation to normality for random variables with different locations",
    "typo_insertion": "Transformation to normaility for random variables with different locations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Seasonal Exponential Smoothing Without Trend",
    "typo_insertion": "Seasional Exponential Smoothing Without Trend"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Method of moments and maximum likelihood problem",
    "typo_insertion": "Methood of moments and maximum likelihood problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "How to uniformly project a hash to a fixed number of buckets",
    "typo_insertion": "How to uniformely project a hash to a fixed number of buckets"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Algorithm to evaluate whether you should buy now or wait",
    "typo_insertion": "Algorithm to eavaluate whether you should buy now or wait"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bayes specify informative and uninformative prior",
    "typo_insertion": "Bayes speciffy informative and uninformative prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Hypothesis test for Bernoulli",
    "typo_insertion": "Hypothesis test for Bernouilli"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo method",
    "typo_insertion": "Monte Carolo method"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Algorithm implementation help",
    "typo_insertion": "Algorithim implementation help"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Fit poisson regression",
    "typo_insertion": "Fit poission regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probability density function of the maximum statistic",
    "typo_insertion": "Probabilitty density function of the maximum statistic"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bootstrap size and probability of drawing distinct observations",
    "typo_insertion": "Bootstraps size and probability of drawing distinct observations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Modeling membership function given some survey data or empirical distribution",
    "typo_insertion": "Modeling memebership function given some survey data or empirical distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Estimating the covariance posterior distribution of a multivariate gaussian",
    "typo_insertion": "Estimating the covariaance posterior distribution of a multivariate gaussian"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Testing if alcohol consumption and smoking are independent",
    "typo_insertion": "Testing if alcoohol consumption and smoking are independent"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Comparing sample covariance matrices to a model",
    "typo_insertion": "Comparing sample covariaance matrices to a model"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "continuous vs categorical logistic regression for marks and admission",
    "typo_insertion": "continuous vs catergorical logistic regression for marks and admission"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Clustering Survey Responses Based on Dichotomous Responses",
    "typo_insertion": "Clustering Survery Responses Based on Dichotomous Responses"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Preparing survey data for analysis",
    "typo_insertion": "Preparing survery data for analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "How to evaluate quality of probability estimator for bernoulli experiments",
    "typo_insertion": "How to eavaluate quality of probability estimator for bernoulli experiments"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Specifying prior probabilities in hybrid Bayesian networks",
    "typo_insertion": "Specifiying prior probabilities in hybrid Bayesian networks"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Reliability standard via relative standard error for computer science or randomized algorithms",
    "typo_insertion": "Reliabilitty standard via relative standard error for computer science or randomized algorithms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probably of Getting Consecutive Tails in X Amount of Coin Flips",
    "typo_insertion": "Probablly of Getting Consecutive Tails in X Amount of Coin Flips"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "A Survey study for Interaction Designers",
    "typo_insertion": "A Survery study for Interaction Designers"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Generating non homogeneous spatial gaussian data",
    "typo_insertion": "Generatinng non homogeneous spatial gaussian data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Algorithm for online handwriting recognition",
    "typo_insertion": "Algorithim for online handwriting recognition"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bayesian user survey with a credible interval",
    "typo_insertion": "Bayesian user survery with a credible interval"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Method of moment estimator",
    "typo_insertion": "Methood of moment estimator"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Algorithm for price optimization",
    "typo_insertion": "Algorithim for price optimization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Confusion related to adding noise to a gaussian distribution",
    "typo_insertion": "Confusion releated to adding noise to a gaussian distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Three categories of spatial relationships",
    "typo_insertion": "Three catergories of spatial relationships"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Similarity algorithms",
    "typo_insertion": "Similairity algorithms"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "sketch distribution",
    "typo_insertion": "sketchn distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Method of Composition to sample from a t density",
    "typo_insertion": "Methood of Composition to sample from a t density"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Help with truncated normal distribution",
    "typo_insertion": "Help with trunctated normal distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo study to estimate Bootstrap CI",
    "typo_insertion": "Monte Carolo study to estimate Bootstrap CI"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "incorporating seasonality into CART models",
    "typo_insertion": "incorporating seasonaility into CART models"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo calculation of value at risk",
    "typo_insertion": "Monte Carclo calculation of value at risk"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo for DOE Power Calculation When Performance in Unknown",
    "typo_insertion": "Monte Carolo for DOE Power Calculation When Performance in Unknown"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Measure of similarity or distance between two symmetric covariance matrices",
    "typo_insertion": "Measure of similiarity or distance between two symmetric covariance matrices"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "transformation for deviance from logistic regression",
    "typo_insertion": "transformatiion for deviance from logistic regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Interpolation in multivariate time series",
    "typo_insertion": "Interpolationn in multivariate time series"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo for DOE Power Calculation When Performance is Unknown",
    "typo_insertion": "Monte Carolo for DOE Power Calculation When Performance is Unknown"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Specifying uncorrelated random effects for orthogonal polynomial codes",
    "typo_insertion": "Specifiying uncorrelated random effects for orthogonal polynomial codes"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Output of multiple regression with linear regression",
    "typo_insertion": "Outputf of multiple regression with linear regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Monte Carlo integration aim for maximum variance",
    "typo_insertion": "Monte Carolo integration aim for maximum variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Output of logistic model in R",
    "typo_insertion": "Outputf of logistic model in R"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Specifying a difference in differences model with multiple time periods",
    "typo_insertion": "Specifiying a difference in differences model with multiple time periods"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Output of Multiple Regression with Linear regression",
    "typo_insertion": "Outputf of Multiple Regression with Linear regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Combining categorical and continuous variables to calculate a factor",
    "typo_insertion": "Combining catergorical and continuous variables to calculate a factor"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Dimensionality reduction by predominant component analysis",
    "typo_insertion": "Dimensionaility reduction by predominant component analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Confusion related to Gibbs sampling",
    "typo_insertion": "Confusion releated to Gibbs sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "linear or poisson regression for monsoon onset",
    "typo_insertion": "linear or poissson regression for monsoon onset"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "explicit prior versus implicit prior",
    "typo_insertion": "explicitt prior versus implicit prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Algorithm for Price Optimization",
    "typo_insertion": "Algorithim for Price Optimization"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Sampling covariance matrix using Gibbs sampling",
    "typo_insertion": "Sampling covariaance matrix using Gibbs sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Set of expected values",
    "typo_insertion": "Set of expeceted values"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "competitive mediation explanation",
    "typo_insertion": "competitive mediatiion explanation"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Software to plot a log graph",
    "typo_insertion": "Software to plot a log geraph"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "multivariate normality test",
    "typo_insertion": "multivariate normaility test"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Ranking Predictor Variables based on their Influence on the Dependent Variable",
    "typo_insertion": "Ranking Predictor Variabless based on their Influence on the Dependent Variable"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Testing normality and independence of time series residuals",
    "typo_insertion": "Testing normaility and independence of time series residuals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Non normality in residuals",
    "typo_insertion": "Non normaility in residuals"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Uniform updating",
    "typo_insertion": "Uniform updatiing"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Expectation related to a multivariate normally distributed random vector",
    "typo_insertion": "Expectation releated to a multivariate normally distributed random vector"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "How to specify the unit information prior",
    "typo_insertion": "How to speciffy the unit information prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Modelling uncertainty with probability distributions",
    "typo_insertion": "Modelling uncertainity with probability distributions"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Confusion related to a derivation in a paper related to gaussian",
    "typo_insertion": "Confusion releated to a derivation in a paper related to gaussian"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "time series dynamic poisson regression",
    "typo_insertion": "time series dynamic poissson regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Absent categorical data levels in Bootstrap samples",
    "typo_insertion": "Absent catergorical data levels in Bootstrap samples"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Trigonometric operations on standard deviations",
    "typo_insertion": "Trigonometric operatiions on standard deviations"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bernoulli and Normal random variable",
    "typo_insertion": "Bernouilli and Normal random variable"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Finding similarity between a reference and few working documents",
    "typo_insertion": "Finding similiarity between a reference and few working documents"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Bootstrap estimator",
    "typo_insertion": "Bootstrape estimator"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Confusion related to adding noise to a gaussian data",
    "typo_insertion": "Confusion releated to adding noise to a gaussian data"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Simulating Poisson Processes",
    "typo_insertion": "Simulating Poissson Processes"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Specifying conditional probabilities in hybrid Bayesian networks",
    "typo_insertion": "Specifiying conditional probabilities in hybrid Bayesian networks"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "How to specify the null hypothesis in hypothesis testing",
    "typo_insertion": "How to speciffy the null hypothesis in hypothesis testing"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Introducing observation errors in jags code",
    "typo_insertion": "Introduncing observation errors in jags code"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Explicit prior versus implicit prior",
    "typo_insertion": "Explicitt prior versus implicit prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "The gamma distribution and poisson processes",
    "typo_insertion": "The gamma distribution and poissson processes"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Extracting values from R output of bugs command",
    "typo_insertion": "Extracting values from R outpout of bugs command"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Decision Fusion using Multiple Data Sources with different update rates and accuracy",
    "typo_insertion": "Decision Fusiion using Multiple Data Sources with different update rates and accuracy"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Probably of Getting Consecutive Tails or Heads in X Amount of Coin Flips",
    "typo_insertion": "Probablly of Getting Consecutive Tails or Heads in X Amount of Coin Flips"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Brownian Motion",
    "typo_insertion": "Brownian Motiion"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "text",
    "original_value": "Arithmetic for updating likelihoods using Bayes theorem",
    "typo_insertion": "Arithmethic for updating likelihoods using Bayes theorem"
  },
  {
    "database_id": "car_1",
    "table": "car_makers",
    "column": "fullname",
    "original_value": "Renault",
    "typo_insertion": "Renaualt"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "superhero_name",
    "original_value": "Chameleon",
    "typo_insertion": "Chameleoon"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "superhero_name",
    "original_value": "Emma Frost",
    "typo_insertion": "Emma Frosst"
  },
  {
    "database_id": "superhero",
    "table": "superhero",
    "column": "superhero_name",
    "original_value": "Triton",
    "typo_insertion": "Trition"
  },
  {
    "database_id": "formula_1",
    "table": "constructors",
    "column": "name",
    "original_value": "Renault",
    "typo_insertion": "Renaualt"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Constituent",
    "typo_insertion": "Constitutent"
  },
  {
    "database_id": "codebase_community",
    "table": "badges",
    "column": "name",
    "original_value": "Generalist",
    "typo_insertion": "Generaliist"
  },
  {
    "database_id": "student_transcripts_tracking",
    "table": "departments",
    "column": "department_name",
    "original_value": "engineer",
    "typo_insertion": "engineeer"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Paradise",
    "typo_insertion": "Paradiese"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Brentwood",
    "typo_insertion": "Brentwoood"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Lafayette",
    "typo_insertion": "Layfayette"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Lake Forest",
    "typo_insertion": "Lake Foreest"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "city",
    "original_value": "Freedom",
    "typo_insertion": "Freedoom"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Design of matrix of contrasts in R",
    "typo_insertion": "Design of matrixf of contrasts in R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bayesian user survey with a credible interval",
    "typo_insertion": "Bayesian user survery with a credible interval"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to do if the most training data is sparse",
    "typo_insertion": "How to do if the most training data is sparase"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Introducing observation errors in jags code",
    "typo_insertion": "Introduncing observation errors in jags code"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Free internet or downloadable resources for sample size calculations",
    "typo_insertion": "Free internnet or downloadable resources for sample size calculations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Correlation of Ratios substantially lower compared to the numerator alone",
    "typo_insertion": "Correlation of Ratios substaintially lower compared to the numerator alone"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Partitioned Gaussian Sigma subscripts",
    "typo_insertion": "Partitioned Gaussian Sigmas subscripts"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "compare the values assumed by two trend lines in correspondence a certain x value",
    "typo_insertion": "compare the values assumed by two trend lines in correspoendence a certain x value"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Segmenting an interval sensibly",
    "typo_insertion": "Segmenting an interval sensibily"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Algorithm for minimization of sum of squares in regression packages",
    "typo_insertion": "Algorithim for minimization of sum of squares in regression packages"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Computing and comparing semantic networks generated by grouped individuals",
    "typo_insertion": "Computing and compairing semantic networks generated by grouped individuals"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Characteristics of the surviving mice Experiment",
    "typo_insertion": "Charactertistics of the surviving mice Experiment"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Decomposition of the sum of two random variables",
    "typo_insertion": "Decompositiion of the sum of two random variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bootstrap size and probability of drawing distinct observations",
    "typo_insertion": "Bootstraps size and probability of drawing distinct observations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Invalid measurement data removing",
    "typo_insertion": "Invaliad measurement data removing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Analysis and writing up results",
    "typo_insertion": "Analysiss and writing up results"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Finding correlations in longitudinal data analysis",
    "typo_insertion": "Finding correlations in longituidinal data analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Preparing survey data for analysis",
    "typo_insertion": "Preparing survery data for analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Extracting values from R output of bugs command",
    "typo_insertion": "Extracting values from R outpout of bugs command"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Clustering Survey Responses Based on Dichotomous Responses",
    "typo_insertion": "Clustering Survery Responses Based on Dichotomous Responses"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Replacing categorical variables with historic response rate",
    "typo_insertion": "Replacing catergorical variables with historic response rate"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Monte Carlo experiment to estimate coverage probability",
    "typo_insertion": "Monte Carolo experiment to estimate coverage probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Modelling longitudinal data where the effect of time varies in functional form between individuals",
    "typo_insertion": "Modelling longituidinal data where the effect of time varies in functional form between individuals"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interpreting R output from exploratory factor analysis regarding rejection of null hypothesis of goodness of fit",
    "typo_insertion": "Interpreting R outpout from exploratory factor analysis regarding rejection of null hypothesis of goodness of fit"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Best model for longitudinal analysis",
    "typo_insertion": "Best model for longituidinal analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to a derivation",
    "typo_insertion": "Confusion releated to a derivation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample variance and error using Monte Carlo",
    "typo_insertion": "Sample variance and error using Monte Carolo"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Simulating Poisson Processes",
    "typo_insertion": "Simulating Poissson Processes"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to specify the unit information prior",
    "typo_insertion": "How to speciffy the unit information prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Building a flexible predictive model to put together fashionable outfits",
    "typo_insertion": "Building a flexibile predictive model to put together fashionable outfits"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Assessing or comparing correlations at multiple locations",
    "typo_insertion": "Assessing or compairing correlations at multiple locations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to calculation of variance",
    "typo_insertion": "Confusion releated to calculation of variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to Gibbs sampling",
    "typo_insertion": "Confusion releated to Gibbs sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sampling covariance matrix using Gibbs sampling",
    "typo_insertion": "Sampling covariaance matrix using Gibbs sampling"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Territories from observations",
    "typo_insertion": "Territoriies from observations"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Test if Two Categorical Samples Have the Same Joint",
    "typo_insertion": "Test if TTwo Categorical Samples Have the Same Joint"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Finding the expected value of two normal random variables",
    "typo_insertion": "Finding the expeceted value of two normal random variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Testing a model with truncated data",
    "typo_insertion": "Testing a model with trunctated data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Sample size for segmentation validation",
    "typo_insertion": "Sample size for segementation validation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Bayes specify informative and uninformative prior",
    "typo_insertion": "Bayes speciffy informative and uninformative prior"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to uniformly project a hash to a fixed number of buckets",
    "typo_insertion": "How to uniformely project a hash to a fixed number of buckets"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Analyzing change in categorical data with age",
    "typo_insertion": "Analyzing change in catergorical data with age"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Variable type in survey analysis",
    "typo_insertion": "Variable type in survery analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Regression model where output is a probability",
    "typo_insertion": "Regression model where outpuit is a probability"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Monte Carlo integration",
    "typo_insertion": "Monte Carolo integration"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Testing if alcohol consumption and smoking are independent",
    "typo_insertion": "Testing if alcoohol consumption and smoking are independent"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiple mediation analysis in R",
    "typo_insertion": "Multiple mediatiion analysis in R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Comprehending output from mediation analysis in R",
    "typo_insertion": "Comprehending outpout from mediation analysis in R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Dimensionality reduction by predominant component analysis",
    "typo_insertion": "Dimensionaility reduction by predominant component analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Iteration parameter in latent dirichlet allocation model",
    "typo_insertion": "Iteration parameterr in latent dirichlet allocation model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How do I resolve zero in linear regression",
    "typo_insertion": "How do I resolove zero in linear regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "transformation to normality of the dependent variable in multiple regression",
    "typo_insertion": "transformation to normaility of the dependent variable in multiple regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to handle categorical dependent variable using logistic regression when one of the categories never occurs in the sample",
    "typo_insertion": "How to handle catergorical dependent variable using logistic regression when one of the categories never occurs in the sample"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Appropriate method for supervised learning of small data set with few variables",
    "typo_insertion": "Appropriate methood for supervised learning of small data set with few variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to a derivation in a paper related to gaussian",
    "typo_insertion": "Confusion releated to a derivation in a paper related to gaussian"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Method of moment estimator",
    "typo_insertion": "Methood of moment estimator"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to evaluate a multivariate gaussian condition",
    "typo_insertion": "How to eavaluate a multivariate gaussian condition"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Arithmetic for updating likelihoods using Bayes theorem",
    "typo_insertion": "Arithmethic for updating likelihoods using Bayes theorem"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to test a curvilinear relationship in a logistic regression",
    "typo_insertion": "How to test a curivilinear relationship in a logistic regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Three categories of spatial relationships",
    "typo_insertion": "Three catergories of spatial relationships"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Monte Carlo study to estimate bootstrap CI",
    "typo_insertion": "Monte Carolo study to estimate bootstrap CI"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Latent Dirichlet Allocation as input for WEKA",
    "typo_insertion": "Latent Diriichlet Allocation as input for WEKA"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Delta method and correlated variables",
    "typo_insertion": "Delta methood and correlated variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Incorporating seasonality into CART models",
    "typo_insertion": "Incorporating seasonaility into CART models"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Independent categorical variables and multiple regression with numeric dependent variables",
    "typo_insertion": "Independent catergorical variables and multiple regression with numeric dependent variables"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to evaluate results of linear regression",
    "typo_insertion": "How to eavaluate results of linear regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Relationship between poisson and exponential distribution",
    "typo_insertion": "Relationship between poissson and exponential distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to derivation of conditional distribution",
    "typo_insertion": "Confusion releated to derivation of conditional distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Explosion in stochastic gradient descent",
    "typo_insertion": "Explosionn in stochastic gradient descent"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multivariate normality plots",
    "typo_insertion": "Multivariate normaility plots"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Uniform updating",
    "typo_insertion": "Uniform updatiing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Visualizing two variables which have a very similar values",
    "typo_insertion": "Visualizing two variabless which have a very similar values"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Multiplicity in sample size calculation for stratified estimation problem",
    "typo_insertion": "Multiplicitty in sample size calculation for stratified estimation problem"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Monte Carlo integration aim for maximum variance",
    "typo_insertion": "Monte Carolo integration aim for maximum variance"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Expectation related to a multivariate normally distributed random vector",
    "typo_insertion": "Expectation releated to a multivariate normally distributed random vector"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to evaluate goodness of fit for negative binomial regression",
    "typo_insertion": "How to eavaluate goodness of fit for negative binomial regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Market segmentation based on a time of consumption",
    "typo_insertion": "Market segementation based on a time of consumption"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "how to code and interpret categorical time varying variable in Cox PH model",
    "typo_insertion": "how to code and interpret catergorical time varying variable in Cox PH model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Absent categorical data levels in Bootstrap samples",
    "typo_insertion": "Absent catergorical data levels in Bootstrap samples"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Marketing research survey results",
    "typo_insertion": "Marketing research survery results"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Best way to convey highly skewed data",
    "typo_insertion": "Best way to convery highly skewed data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to derivation of the probability distribution",
    "typo_insertion": "Confusion releated to derivation of the probability distribution"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Method to output statistical score when validating using bootstrap method on ordinal logistic regression model",
    "typo_insertion": "Methood to output statistical score when validating using bootstrap method on ordinal logistic regression model"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating energy output of a pellet stove using time series",
    "typo_insertion": "Calculating energy outpout of a pellet stove using time series"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Difference between arithmetic vs geometric random walk",
    "typo_insertion": "Difference between arithmethic vs geometric random walk"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating power for a survey to compare different metrics",
    "typo_insertion": "Calculating power for a survery to compare different metrics"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "continuous vs categorical logistic regression for marks and admission",
    "typo_insertion": "continuous vs catergorical logistic regression for marks and admission"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Time series dynamic poisson regression",
    "typo_insertion": "Time series dynamic poissson regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Options for comparing logistic regression models",
    "typo_insertion": "Options for compairing logistic regression models"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to interpret multiple factors in model output in R",
    "typo_insertion": "How to interpret multiple factors in model outpuit in R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to modelling of temporal correlation",
    "typo_insertion": "Confusion releated to modelling of temporal correlation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Identify seasonality in time series data",
    "typo_insertion": "Identify seasonaility in time series data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Advice on comparing methods of generating random vectors",
    "typo_insertion": "Advice on compairing methods of generating random vectors"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Finding similarities using Wavelet transform",
    "typo_insertion": "Finding similiarities using Wavelet transform"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to linear regression",
    "typo_insertion": "Confusion releated to linear regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Canonical parameter for Poisson Regression",
    "typo_insertion": "Canonical parameterr for Poisson Regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to encode categorical variables for neural networks",
    "typo_insertion": "How to encode catergorical variables for neural networks"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Fit poisson regression",
    "typo_insertion": "Fit poission regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Difference categorical variables R",
    "typo_insertion": "Difference catergorical variables R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Monte Carlo integration help needed",
    "typo_insertion": "Monte Carolo integration help needed"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Nearest Neighbor Algorithm for Prediction",
    "typo_insertion": "Nearest Neighbor Algorithim for Prediction"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Calculating similarity and clustering question",
    "typo_insertion": "Calculating similiarity and clustering question"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to calculation of likelihood",
    "typo_insertion": "Confusion releated to calculation of likelihood"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Can I prove a curvilinear relationship when the linear independent variable is not significant",
    "typo_insertion": "Can I prove a curivilinear relationship when the linear independent variable is not significant"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to elastic net",
    "typo_insertion": "Confusion releated to elastic net"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confidence interval on Poisson distributed data",
    "typo_insertion": "Confidence interval on Poissson distributed data"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interaction terms in poisson regression",
    "typo_insertion": "Interaction terms in poissson regression"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Normalize by expected value",
    "typo_insertion": "Normalize by expeceted value"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Formula to compare response rates",
    "typo_insertion": "Formuala to compare response rates"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "competitive mediation explanation",
    "typo_insertion": "competitive mediations explanation"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Method to reliably determine abnormal statistical values",
    "typo_insertion": "Methood to reliably determine abnormal statistical values"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Joint Relationships between log normal variables and their Gaussian counter parts",
    "typo_insertion": "Joint Relationshiips between log normal variables and their Gaussian counter parts"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Complete substantive examples of reproducible research using R",
    "typo_insertion": "Compleete substantive examples of reproducible research using R"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Random parameter linear regression models",
    "typo_insertion": "Random parameterr linear regression models"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Modeling seasonality in sales time series",
    "typo_insertion": "Modeling seasonaility in sales time series"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Specifying conditional probabilities in hybrid Bayesian networks",
    "typo_insertion": "Specifiying conditional probabilities in hybrid Bayesian networks"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Software to plot a log graph",
    "typo_insertion": "Software to plot a log geraph"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Interpreting multiple correspondence analysis",
    "typo_insertion": "Interpreting multiple correspoendence analysis"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Intuition related to standard deviation as threshold",
    "typo_insertion": "Intuition releated to standard deviation as threshold"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Confusion related to derivation of a formula in gaussian process",
    "typo_insertion": "Confusion releated to derivation of a formula in gaussian process"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "How to specify the null hypothesis in hypothesis testing",
    "typo_insertion": "How to speciffy the null hypothesis in hypothesis testing"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Algorithm implementation help",
    "typo_insertion": "Algorithim implementation help"
  },
  {
    "database_id": "codebase_community",
    "table": "posts",
    "column": "title",
    "original_value": "Method of moments and maximum likelihood problem",
    "typo_insertion": "Methood of moments and maximum likelihood problem"
  },
  {
    "database_id": "vehicle_driver",
    "table": "driver",
    "column": "name",
    "original_value": "Jimmie Johnson",
    "typo_insertion": "Jimmiee Johnson"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admlname1",
    "original_value": "Jeffrey",
    "typo_insertion": "Jefffrey"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Randy Vargas",
    "typo_insertion": "Randy Vargaas"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Wesley Burt",
    "typo_insertion": "Wesley Brurt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "artist",
    "original_value": "Stephanie Mitchell",
    "typo_insertion": "Stephanine Mitchell"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Stephanie",
    "typo_insertion": "Stephanine"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Jeffrey",
    "typo_insertion": "Jefffrey"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Agustin",
    "typo_insertion": "Agusitin"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Anthony",
    "typo_insertion": "Anthonny"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Felipe",
    "typo_insertion": "Felippe"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "admfname1",
    "original_value": "Forest",
    "typo_insertion": "Foreest"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jeffrey",
    "typo_insertion": "Jefffrey"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Thomas Jung",
    "typo_insertion": "Thomas Junng"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Bryce Thomas",
    "typo_insertion": "Bryce Thomaas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Fabian",
    "typo_insertion": "Fabiian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sebastian",
    "typo_insertion": "Sebastiaan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Reed",
    "typo_insertion": "John Reeed"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Anthony",
    "typo_insertion": "Anthonny"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Russ Hyde",
    "typo_insertion": "Russ Hyede"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephen Jung",
    "typo_insertion": "Stephen Junng"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Pablo Leon",
    "typo_insertion": "Pablon Leon"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alberto Miranda",
    "typo_insertion": "Albertro Miranda"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jared Forsyth",
    "typo_insertion": "Jared Forsyith"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Quotidian",
    "typo_insertion": "Quoitidian"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Stephanie",
    "typo_insertion": "Stephanine"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kenneth Daily",
    "typo_insertion": "Kenneth Dailly"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Adam Daily",
    "typo_insertion": "Adam Dailly"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Felipe",
    "typo_insertion": "Felippe"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Pablo Fernandez",
    "typo_insertion": "Pablos Fernandez"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "leonardo",
    "typo_insertion": "leonarodo"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Pablo Reyes",
    "typo_insertion": "Pablos Reyes"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Mat Leonard",
    "typo_insertion": "Mat Leonaard"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Austin Buchanan",
    "typo_insertion": "Austin Buchannan"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Jeffrey Sax",
    "typo_insertion": "Jefffrey Sax"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "ignatius",
    "typo_insertion": "ignatiuus"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Chris Wilkinson",
    "typo_insertion": "Chris Wilikinson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Prospects",
    "typo_insertion": "Prospecsts"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Felipe Ortega",
    "typo_insertion": "Felippe Ortega"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "odysseus",
    "typo_insertion": "odeysseus"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Kent Thomas",
    "typo_insertion": "Kent Thomaas"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "John Chrysostom",
    "typo_insertion": "John Chryssostom"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Pete Mancini",
    "typo_insertion": "Pete Manciini"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Carson Paul",
    "typo_insertion": "Carson Plaul"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Sam Patch",
    "typo_insertion": "Sam Patsch"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Barry Barrios",
    "typo_insertion": "Barry Barriios"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Curtis Wilkerson",
    "typo_insertion": "Curtiss Wilkerson"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "Alexandra Dang",
    "typo_insertion": "Alexandara Dang"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "J SAND",
    "typo_insertion": "J S AND"
  },
  {
    "database_id": "codebase_community",
    "table": "users",
    "column": "displayname",
    "original_value": "The Norwegian",
    "typo_insertion": "The Norweigian"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Formation",
    "typo_insertion": "Formatiion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Faceless Devourer",
    "typo_insertion": "Faceless Dervourer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voracious Cobra",
    "typo_insertion": "Voracioous Cobra"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spitting Sliver",
    "typo_insertion": "Spitting Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voracious Dragon",
    "typo_insertion": "Voracioous Dragon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chameleon Colossus",
    "typo_insertion": "Chameleoon Colossus"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Syphon Sliver",
    "typo_insertion": "Syphon Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mischievous Poltergeist",
    "typo_insertion": "Mischievious Poltergeist"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aura Graft",
    "typo_insertion": "Aura G raft"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Goblin Roughrider",
    "typo_insertion": "Goblin Roughtrider"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stinging Scorpion",
    "typo_insertion": "Stinging Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stalker Hag",
    "typo_insertion": "Staleker Hag"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Kor Aeronaut",
    "typo_insertion": "Kor Aeronaunt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shadow Sliver",
    "typo_insertion": "Shadow Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voracious Typhon",
    "typo_insertion": "Voracioous Typhon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inescapable Brute",
    "typo_insertion": "Inescapeable Brute"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dormant Sliver",
    "typo_insertion": "Dormant Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Living Tsunami",
    "typo_insertion": "Living Tsunaami"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Congregate",
    "typo_insertion": "Congregrate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Crystal Rod",
    "typo_insertion": "Crysstal Rod"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Accelerate",
    "typo_insertion": "Accelereate"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fiery Emancipation",
    "typo_insertion": "Fiery Emanicipation"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mischievous Chimera",
    "typo_insertion": "Mischievious Chimera"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chameleon Spirit",
    "typo_insertion": "Chameleoon Spirit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Desperate Gambit",
    "typo_insertion": "Desperate Gamtbit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Venom Sliver",
    "typo_insertion": "Venom Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voracious Hydra",
    "typo_insertion": "Voracioous Hydra"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charisma",
    "typo_insertion": "Charisama"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Standing Army",
    "typo_insertion": "Standing Aarmy"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flame Fusillade",
    "typo_insertion": "Flame Fusiillade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Tragic Poet",
    "typo_insertion": "Tragic Po et"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scythe Leopard",
    "typo_insertion": "Scythe Leopaard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Dross Scorpion",
    "typo_insertion": "Dross Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wind Spirit",
    "typo_insertion": "Wind Spirirt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Risen Executioner",
    "typo_insertion": "Risen Exectutioner"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Spiteful Sliver",
    "typo_insertion": "Spiteful Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wasteland Scorpion",
    "typo_insertion": "Wasteland Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Call the Cavalry",
    "typo_insertion": "Call the Calvalry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Stalking Tiger Avatar",
    "typo_insertion": "Stalking Tigger Avatar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sky Hussar",
    "typo_insertion": "Sky Hussaar"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Flaming Gambit",
    "typo_insertion": "Flaming Gamtbit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Shred Memory",
    "typo_insertion": "Shred Mmemory"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Pit Scorpion",
    "typo_insertion": "Pit Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Silent Arbiter",
    "typo_insertion": "Silent Arbieter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Breath of Life",
    "typo_insertion": "Breathf of Life"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Inescapable Blaze",
    "typo_insertion": "Inescapeable Blaze"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Angelic Arbiter",
    "typo_insertion": "Angelic Arbieter"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Wu Elite Cavalry",
    "typo_insertion": "Wu Elite Cavalary"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steel Overseer",
    "typo_insertion": "Steeel Overseer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Triton Cavalry",
    "typo_insertion": "Triton Calvalry"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Council of the Absolute",
    "typo_insertion": "Councill of the Absolute"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Hijack",
    "typo_insertion": "Hijaack"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Team Spirit",
    "typo_insertion": "Team Spirirt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Plague Sliver",
    "typo_insertion": "Plague Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mist Leopard",
    "typo_insertion": "Mist Leopaard"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chain of Vapor",
    "typo_insertion": "Chain of Vapoor"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Steel Wall",
    "typo_insertion": "Steell Wall"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Forest",
    "typo_insertion": "Foreest"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Essence Sliver",
    "typo_insertion": "Essence Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Genesis Storm",
    "typo_insertion": "Genesiss Storm"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Fiery Gambit",
    "typo_insertion": "Fiery Gamtbit"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Voracious Null",
    "typo_insertion": "Voracioous Null"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "School of the Unseen",
    "typo_insertion": "Schoool of the Unseen"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Opportunity",
    "typo_insertion": "Opportunitty"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mouth to Mouth",
    "typo_insertion": "Mouth to Mounth"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Haphazard Bombardment",
    "typo_insertion": "Haphazard Bombarmdment"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sedge Scorpion",
    "typo_insertion": "Sedge Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Touch of Death",
    "typo_insertion": "Touchf of Death"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Chain Stasis",
    "typo_insertion": "Chain Staisis"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Noble Hierarch",
    "typo_insertion": "Noble Hieraarch"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battering Sliver",
    "typo_insertion": "Battering Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Storm Spirit",
    "typo_insertion": "Storm Spirirt"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Mana Cylix",
    "typo_insertion": "Mana Cyliix"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Three Visits",
    "typo_insertion": "Three Visists"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Bloodthirsty Aerialist",
    "typo_insertion": "Bloodthirstyr Aerialist"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Scuttling Sliver",
    "typo_insertion": "Scuttling Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Biogenic Upgrade",
    "typo_insertion": "Biogenic Uprgrade"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Imprisoned in the Moon",
    "typo_insertion": "Imprisioned in the Moon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frenzy Sliver",
    "typo_insertion": "Frenzy Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Genesis Wave",
    "typo_insertion": "Genesiss Wave"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Serrated Scorpion",
    "typo_insertion": "Serrated Scorpioon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Sideswipe",
    "typo_insertion": "Sideswippe"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Frenetic Sliver",
    "typo_insertion": "Frenetic Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Peregrination",
    "typo_insertion": "Peregrinatiion"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Memory Crystal",
    "typo_insertion": "Memory Crysstal"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Acidic Sliver",
    "typo_insertion": "Acidic Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Charmed Pendant",
    "typo_insertion": "Charmed Pendaant"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lancer Sliver",
    "typo_insertion": "Lancer Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Nested Ghoul",
    "typo_insertion": "Nestead Ghoul"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Virulent Sliver",
    "typo_insertion": "Virulent Slliver"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Aeronaut Tinkerer",
    "typo_insertion": "Aeronaut Tinklerer"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Favored Hoplite",
    "typo_insertion": "Favored Hopolite"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Lumbering Satyr",
    "typo_insertion": "Lumbering Satiyr"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Rapacious Dragon",
    "typo_insertion": "Rapiacious Dragon"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Battle Rampart",
    "typo_insertion": "Battle Rampaart"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "name",
    "original_value": "Reflex Sliver",
    "typo_insertion": "Reflex Slliver"
  },
  {
    "database_id": "codebase_community",
    "table": "posthistory",
    "column": "userdisplayname",
    "original_value": "Felipe",
    "typo_insertion": "Felippe"
  },
  {
    "database_id": "car_1",
    "table": "model_list",
    "column": "model",
    "original_value": "mercury",
    "typo_insertion": "mercurry"
  },
  {
    "database_id": "bbc_channels",
    "table": "program",
    "column": "title",
    "original_value": "The Leopard",
    "typo_insertion": "The Leopaard"
  },
  {
    "database_id": "student_transcripts_tracking",
    "table": "addresses",
    "column": "city",
    "original_value": "South Palma",
    "typo_insertion": "South Palama"
  },
  {
    "database_id": "car_1",
    "table": "car_names",
    "column": "model",
    "original_value": "mercury",
    "typo_insertion": "mercurry"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Fort Buchanan",
    "typo_insertion": "Fort Buchannan"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Sutton",
    "typo_insertion": "North Suttton"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Freedom",
    "typo_insertion": "Freedoom"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "East Dorset",
    "typo_insertion": "East Dorsset"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Royal",
    "typo_insertion": "Mount Rroyal"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Sterling Forest",
    "typo_insertion": "Sterling Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Brentwood",
    "typo_insertion": "Brentwoood"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Speculator",
    "typo_insertion": "Spectulator"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Cleveland",
    "typo_insertion": "Cleaveland"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Stanley",
    "typo_insertion": "Staneley"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Paradise",
    "typo_insertion": "Paradiese"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "White Deer",
    "typo_insertion": "White Deeer"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Lincoln University",
    "typo_insertion": "Linc oln University"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Saint Leonard",
    "typo_insertion": "Saint Leonaard"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Glen Arm",
    "typo_insertion": "Glen Aarm"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Ware Neck",
    "typo_insertion": "Ware Necck"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Vesuvius",
    "typo_insertion": "Vesuviuis"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Forest",
    "typo_insertion": "Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Jeffrey",
    "typo_insertion": "Jefffrey"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mount Zion",
    "typo_insertion": "Mount Zinon"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Wake Forest",
    "typo_insertion": "Wake Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Tar Heel",
    "typo_insertion": "Tar Heeel"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Zirconia",
    "typo_insertion": "Zircornia"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Buford",
    "typo_insertion": "Bufford"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Leon Springs",
    "typo_insertion": "De Leons Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Buffalo Valley",
    "typo_insertion": "Buffallo Valley"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mistletoe",
    "typo_insertion": "Mistlettoe"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Grand Rapids",
    "typo_insertion": "Grand Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Columbus Grove",
    "typo_insertion": "Columbuss Grove"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Maple Rapids",
    "typo_insertion": "Maple Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Big Rapids",
    "typo_insertion": "Big Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Brethren",
    "typo_insertion": "Bretheren"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Coon Rapids",
    "typo_insertion": "Coon Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Van Meter",
    "typo_insertion": "Van Meteer"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Sioux Rapids",
    "typo_insertion": "Sioux Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Columbus City",
    "typo_insertion": "Columbuss City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Columbus Junction",
    "typo_insertion": "Columbuss Junction"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "De Forest",
    "typo_insertion": "De Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Wisconsin Rapids",
    "typo_insertion": "Wisconsin Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Park Rapids",
    "typo_insertion": "Park Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Oak Forest",
    "typo_insertion": "Oak Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Energy",
    "typo_insertion": "Energey"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "El Dorado Springs",
    "typo_insertion": "El Dorados Springs"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Blue Rapids",
    "typo_insertion": "Blue Rapiids"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Everest",
    "typo_insertion": "Evereest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Green Forest",
    "typo_insertion": "Green Foreest"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Jeffrey City",
    "typo_insertion": "Jefffrey City"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "Mercury",
    "typo_insertion": "Mercurry"
  },
  {
    "database_id": "student_club",
    "table": "zip_code",
    "column": "city",
    "original_value": "North Lakewood",
    "typo_insertion": "North Lakewoood"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "forename",
    "original_value": "Felipe",
    "typo_insertion": "Felippe"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "forename",
    "original_value": "Claudio",
    "typo_insertion": "Claudrio"
  },
  {
    "database_id": "formula_1",
    "table": "drivers",
    "column": "forename",
    "original_value": "Alberto Rodriguez",
    "typo_insertion": "Albertro Rodriguez"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Lafayette",
    "typo_insertion": "Layfayette"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Lake Forest",
    "typo_insertion": "Lake Foreest"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "mailcity",
    "original_value": "Freedom",
    "typo_insertion": "Freedoom"
  },
  {
    "database_id": "world_1",
    "table": "countrylanguage",
    "column": "language",
    "original_value": "Mandarin Chinese",
    "typo_insertion": "Mandarin Chineese"
  },
  {
    "database_id": "codebase_community",
    "table": "tags",
    "column": "tagname",
    "original_value": "truncation",
    "typo_insertion": "trunctation"
  },
  {
    "database_id": "codebase_community",
    "table": "tags",
    "column": "tagname",
    "original_value": "covariance",
    "typo_insertion": "covariaance"
  },
  {
    "database_id": "card_games",
    "table": "cards",
    "column": "type",
    "original_value": "Snow Sorcery",
    "typo_insertion": "Snow Sorycery"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Did not qualify",
    "typo_insertion": "Did not qualifiy"
  },
  {
    "database_id": "formula_1",
    "table": "status",
    "column": "status",
    "original_value": "Injury",
    "typo_insertion": "Injurry"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "El Segundo Unified",
    "typo_insertion": "El Seguondo Unified"
  },
  {
    "database_id": "california_schools",
    "table": "schools",
    "column": "district",
    "original_value": "Sierra County Office of Education",
    "typo_insertion": "Sierra Ccounty Office of Education"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Alberto Rodriguez",
    "typo_insertion": "Albertro Rodriguez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Alfonso De Lucia",
    "typo_insertion": "Alfonsoe De Lucia"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Alvaro Vazquez",
    "typo_insertion": "Alvaro Vazuquez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Claudio",
    "typo_insertion": "Claudrio"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Cleveland Taylor",
    "typo_insertion": "Cleaveland Taylor"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Craig Reid",
    "typo_insertion": "Craig Reaid"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Curtis Davies",
    "typo_insertion": "Curtiss Davies"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Danny Guthrie",
    "typo_insertion": "Danny Gutherie"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "David Buchanan",
    "typo_insertion": "David Buchannan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Dominic Thomas",
    "typo_insertion": "Dominic Thomaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Eduardo Vargas",
    "typo_insertion": "Eduardo Vargaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Felipe",
    "typo_insertion": "Felippe"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Frederic Thomas",
    "typo_insertion": "Frederic Thomaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Gideon Jung",
    "typo_insertion": "Gideon Junng"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jamie MacDonald",
    "typo_insertion": "Jamie MacDonaald"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jerome Thomas",
    "typo_insertion": "Jerome Thomaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jesus Mendoza",
    "typo_insertion": "Jesuss Mendoza"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Jesus Vazquez",
    "typo_insertion": "Jesuss Vazquez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Joe Keenan",
    "typo_insertion": "Joe Keenaan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "John Sutton",
    "typo_insertion": "John Suttton"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Leonardo Blanchard",
    "typo_insertion": "Leonarodo Blanchard"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Leonardo Franco",
    "typo_insertion": "Leonarodo Franco"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Leonardo Sanchez",
    "typo_insertion": "Leonarodo Sanchez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Liam Buchanan",
    "typo_insertion": "Liam Buchannan"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Loris Benito",
    "typo_insertion": "Loris Benitto"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Marc Ziegler",
    "typo_insertion": "Marc Ziegeler"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Nathan Thomas",
    "typo_insertion": "Nathan Thomaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Alvarez",
    "typo_insertion": "Pablos Alvarez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Andres Gonzalez",
    "typo_insertion": "Pablos Andres Gonzalez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Barrera",
    "typo_insertion": "Pablos Barrera"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Hernandez",
    "typo_insertion": "Pablos Hernandez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Javier Perez",
    "typo_insertion": "Pablos Javier Perez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Martinez",
    "typo_insertion": "Pablos Martinez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Osvaldo",
    "typo_insertion": "Pablos Osvaldo"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Perez",
    "typo_insertion": "Pablos Perez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Pintos",
    "typo_insertion": "Pablos Pintos"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Sebastian Alvarez",
    "typo_insertion": "Pablos Sebastian Alvarez"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pablo Sicilia",
    "typo_insertion": "Pablos Sicilia"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Pedro Emanuel",
    "typo_insertion": "Pedroe Emanuel"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Ronald Vargas",
    "typo_insertion": "Ronald Vargaas"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Sergio Romero",
    "typo_insertion": "Sergio Romerio"
  },
  {
    "database_id": "european_football_2",
    "table": "player",
    "column": "player_name",
    "original_value": "Winston Reid",
    "typo_insertion": "Winston Reaid"
  }
]
